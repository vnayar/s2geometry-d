// symbol index generated by DDOX - do not edit
var symbols = [
{name: 's2.base.spinlock', kind: "module", path: './s2/base/spinlock.html', attributes: []},
{name: 's2.base.spinlock.SpinLock', kind: "classdeclaration", path: './s2/base/spinlock/SpinLock.html', attributes: []},
{name: 's2.base.spinlock.SpinLock.lock', kind: "functiondeclaration", path: './s2/base/spinlock/SpinLock.lock.html', attributes: ["nothrow", "nogc", "safe", "shared"]},
{name: 's2.base.spinlock.SpinLock.unlock', kind: "functiondeclaration", path: './s2/base/spinlock/SpinLock.unlock.html', attributes: ["nothrow", "nogc", "safe", "shared"]},
{name: 's2.builder.util.s2polygon_layer', kind: "module", path: './s2/builder/util/s2polygon_layer.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.DegenerateEdges', kind: "aliasdeclaration", path: './s2/builder/util/s2polygon_layer/DegenerateEdges.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.DuplicateEdges', kind: "aliasdeclaration", path: './s2/builder/util/s2polygon_layer/DuplicateEdges.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.IndexedS2PolygonLayer', kind: "classdeclaration", path: './s2/builder/util/s2polygon_layer/IndexedS2PolygonLayer.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.IndexedS2PolygonLayer.build', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/IndexedS2PolygonLayer.build.html', attributes: ["override"]},
{name: 's2.builder.util.s2polygon_layer.IndexedS2PolygonLayer.graphOptions', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/IndexedS2PolygonLayer.graphOptions.html', attributes: ["override", "const"]},
{name: 's2.builder.util.s2polygon_layer.IndexedS2PolygonLayer.Options', kind: "aliasdeclaration", path: './s2/builder/util/s2polygon_layer/IndexedS2PolygonLayer.Options.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.IndexedS2PolygonLayer.this', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/IndexedS2PolygonLayer.this.html', attributes: []},
{name: 's2.builder.layer.Layer.build', kind: "functiondeclaration", path: './s2/builder/layer/Layer.build.html', attributes: ["abstract"]},
{name: 's2.builder.layer.Layer.EdgeType', kind: "aliasdeclaration", path: './s2/builder/layer/Layer.EdgeType.html', attributes: []},
{name: 's2.builder.layer.Layer.Graph', kind: "aliasdeclaration", path: './s2/builder/layer/Layer.Graph.html', attributes: []},
{name: 's2.builder.layer.Layer.GraphOptions', kind: "aliasdeclaration", path: './s2/builder/layer/Layer.GraphOptions.html', attributes: []},
{name: 's2.builder.layer.Layer.graphOptions', kind: "functiondeclaration", path: './s2/builder/layer/Layer.graphOptions.html', attributes: ["abstract"]},
{name: 's2.builder.layer.Layer.Label', kind: "aliasdeclaration", path: './s2/builder/layer/Layer.Label.html', attributes: []},
{name: 's2.builder.layer.Layer.LabelSetId', kind: "aliasdeclaration", path: './s2/builder/layer/Layer.LabelSetId.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.LoopType', kind: "aliasdeclaration", path: './s2/builder/util/s2polygon_layer/LoopType.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer', kind: "classdeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.build', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.build.html', attributes: ["override"]},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.graphOptions', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.graphOptions.html', attributes: ["override", "const"]},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.LabelSetIds', kind: "aliasdeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.LabelSetIds.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.Options', kind: "structdeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.Options.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.Options.edgeType', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.Options.edgeType.html', attributes: ["const"]},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.Options.setEdgeType', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.Options.setEdgeType.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.Options.setValidate', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.Options.setValidate.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.Options.validate', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.Options.validate.html', attributes: ["const"]},
{name: 's2.builder.util.s2polygon_layer.S2PolygonLayer.this', kind: "functiondeclaration", path: './s2/builder/util/s2polygon_layer/S2PolygonLayer.this.html', attributes: []},
{name: 's2.builder.util.s2polygon_layer.SiblingPairs', kind: "aliasdeclaration", path: './s2/builder/util/s2polygon_layer/SiblingPairs.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer', kind: "module", path: './s2/builder/util/s2polyline_layer.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.DegenerateEdges', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_layer/DegenerateEdges.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.DuplicateEdges', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_layer/DuplicateEdges.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.IndexedS2PolylineLayer', kind: "classdeclaration", path: './s2/builder/util/s2polyline_layer/IndexedS2PolylineLayer.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.IndexedS2PolylineLayer.build', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/IndexedS2PolylineLayer.build.html', attributes: ["override"]},
{name: 's2.builder.util.s2polyline_layer.IndexedS2PolylineLayer.graphOptions', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/IndexedS2PolylineLayer.graphOptions.html', attributes: ["override", "const"]},
{name: 's2.builder.util.s2polyline_layer.IndexedS2PolylineLayer.Options', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_layer/IndexedS2PolylineLayer.Options.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.IndexedS2PolylineLayer.this', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/IndexedS2PolylineLayer.this.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer', kind: "classdeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.build', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.build.html', attributes: ["override"]},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.graphOptions', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.graphOptions.html', attributes: ["override", "const"]},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.LabelSetIds', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.LabelSetIds.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.Options', kind: "structdeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.Options.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.Options.edgeType', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.Options.edgeType.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.Options.setEdgeType', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.Options.setEdgeType.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.Options.setValidate', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.Options.setValidate.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.Options.validate', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.Options.validate.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_layer.S2PolylineLayer.this', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_layer/S2PolylineLayer.this.html', attributes: []},
{name: 's2.builder.util.s2polyline_layer.SiblingPairs', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_layer/SiblingPairs.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer', kind: "module", path: './s2/builder/util/s2polyline_vector_layer.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.DegenerateEdges', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_vector_layer/DegenerateEdges.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.IndexedS2PolylineVectorLayer', kind: "classdeclaration", path: './s2/builder/util/s2polyline_vector_layer/IndexedS2PolylineVectorLayer.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.IndexedS2PolylineVectorLayer.build', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/IndexedS2PolylineVectorLayer.build.html', attributes: ["override"]},
{name: 's2.builder.util.s2polyline_vector_layer.IndexedS2PolylineVectorLayer.graphOptions', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/IndexedS2PolylineVectorLayer.graphOptions.html', attributes: ["override", "const"]},
{name: 's2.builder.util.s2polyline_vector_layer.IndexedS2PolylineVectorLayer.Options', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_vector_layer/IndexedS2PolylineVectorLayer.Options.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.IndexedS2PolylineVectorLayer.this', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/IndexedS2PolylineVectorLayer.this.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer', kind: "classdeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.build', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.build.html', attributes: ["override"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.graphOptions', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.graphOptions.html', attributes: ["override", "const"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.LabelSetIds', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.LabelSetIds.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options', kind: "structdeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.DuplicateEdges', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.DuplicateEdges.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.duplicateEdges', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.duplicateEdges.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.edgeType', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.edgeType.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.PolylineType', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.PolylineType.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.polylineType', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.polylineType.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.s2debugOverride', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.s2debugOverride.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.setDuplicateEdges', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.setDuplicateEdges.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.setEdgeType', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.setEdgeType.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.setPolylineType', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.setPolylineType.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.setS2debugOverride', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.setS2debugOverride.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.setSiblingPairs', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.setSiblingPairs.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.setValidate', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.setValidate.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.SiblingPairs', kind: "aliasdeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.SiblingPairs.html', attributes: []},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.siblingPairs', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.siblingPairs.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.Options.validate', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.Options.validate.html', attributes: ["const"]},
{name: 's2.builder.util.s2polyline_vector_layer.S2PolylineVectorLayer.this', kind: "functiondeclaration", path: './s2/builder/util/s2polyline_vector_layer/S2PolylineVectorLayer.this.html', attributes: []},
{name: 's2.builder.util.snap_functions', kind: "module", path: './s2/builder/util/snap_functions.html', attributes: []},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction', kind: "classdeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.html', attributes: []},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.clone', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.clone.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.minEdgeVertexSeparation', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.minEdgeVertexSeparation.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.minVertexSeparation', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.minVertexSeparation.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.setSnapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.setSnapRadius.html', attributes: []},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.snapPoint', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.snapPoint.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.snapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.snapRadius.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.this', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.this.html', attributes: []},
{name: 's2.builder.util.snap_functions.IdentitySnapFunction.toString', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IdentitySnapFunction.toString.html', attributes: ["override", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.kMaxSnapRadius', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.kMaxSnapRadius.html', attributes: ["static"]},
{name: 's2.s2builder.S2Builder.SnapFunction.maxEdgeDeviation', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.maxEdgeDeviation.html', attributes: ["const"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction', kind: "classdeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.html', attributes: []},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.clone', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.clone.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.exponent', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.exponent.html', attributes: ["const"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.exponentForMaxSnapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.exponentForMaxSnapRadius.html', attributes: ["static"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.MAX_EXPONENT', kind: "enummemberdeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.MAX_EXPONENT.html', attributes: []},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.MIN_EXPONENT', kind: "enummemberdeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.MIN_EXPONENT.html', attributes: []},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.minEdgeVertexSeparation', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.minEdgeVertexSeparation.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.minSnapRadiusForExponent', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.minSnapRadiusForExponent.html', attributes: ["static"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.minVertexSeparation', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.minVertexSeparation.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.setExponent', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.setExponent.html', attributes: []},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.setSnapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.setSnapRadius.html', attributes: []},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.snapPoint', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.snapPoint.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.snapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.snapRadius.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.IntLatLngSnapFunction.this', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/IntLatLngSnapFunction.this.html', attributes: []},
{name: 's2.s2builder.S2Builder.SnapFunction.toString', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.toString.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction', kind: "classdeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.html', attributes: []},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.clone', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.clone.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.level', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.level.html', attributes: ["const"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.levelForMaxSnapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.levelForMaxSnapRadius.html', attributes: ["static"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.minEdgeVertexSeparation', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.minEdgeVertexSeparation.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.minSnapRadiusForLevel', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.minSnapRadiusForLevel.html', attributes: ["static"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.minVertexSeparation', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.minVertexSeparation.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.setLevel', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.setLevel.html', attributes: []},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.setSnapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.setSnapRadius.html', attributes: []},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.snapPoint', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.snapPoint.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.snapRadius', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.snapRadius.html', attributes: ["override", "const"]},
{name: 's2.builder.util.snap_functions.S2CellIdSnapFunction.this', kind: "functiondeclaration", path: './s2/builder/util/snap_functions/S2CellIdSnapFunction.this.html', attributes: []},
{name: 's2.builder.graph', kind: "module", path: './s2/builder/graph.html', attributes: []},
{name: 's2.builder.graph.Graph', kind: "classdeclaration", path: './s2/builder/graph/Graph.html', attributes: []},
{name: 's2.builder.graph.Graph.canonicalizeLoopOrder', kind: "functiondeclaration", path: './s2/builder/graph/Graph.canonicalizeLoopOrder.html', attributes: ["static"]},
{name: 's2.builder.graph.Graph.canonicalizeVectorOrder', kind: "functiondeclaration", path: './s2/builder/graph/Graph.canonicalizeVectorOrder.html', attributes: ["static"]},
{name: 's2.builder.graph.Graph.DegenerateBoundaries', kind: "enumdeclaration", path: './s2/builder/graph/Graph.DegenerateBoundaries.html', attributes: []},
{name: 's2.builder.graph.Graph.DegenerateBoundaries.DISCARD', kind: "enummemberdeclaration", path: './s2/builder/graph/Graph.DegenerateBoundaries.html#DISCARD', attributes: []},
{name: 's2.builder.graph.Graph.DegenerateBoundaries.KEEP', kind: "enummemberdeclaration", path: './s2/builder/graph/Graph.DegenerateBoundaries.html#KEEP', attributes: []},
{name: 's2.builder.graph.Graph.DegenerateEdges', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.DegenerateEdges.html', attributes: []},
{name: 's2.builder.graph.Graph.DirectedComponent', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.DirectedComponent.html', attributes: []},
{name: 's2.builder.graph.Graph.DuplicateEdges', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.DuplicateEdges.html', attributes: []},
{name: 's2.builder.graph.Graph.Edge', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.Edge.html', attributes: []},
{name: 's2.builder.graph.Graph.edge', kind: "functiondeclaration", path: './s2/builder/graph/Graph.edge.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.EdgeId', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.EdgeId.html', attributes: []},
{name: 's2.builder.graph.Graph.EdgeLoop', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.EdgeLoop.html', attributes: []},
{name: 's2.builder.graph.Graph.EdgePolyline', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.EdgePolyline.html', attributes: []},
{name: 's2.builder.graph.Graph.edges', kind: "functiondeclaration", path: './s2/builder/graph/Graph.edges.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.EdgeType', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.EdgeType.html', attributes: []},
{name: 's2.builder.graph.Graph.filterVertices', kind: "functiondeclaration", path: './s2/builder/graph/Graph.filterVertices.html', attributes: ["static"]},
{name: 's2.builder.graph.Graph.getDirectedComponents', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getDirectedComponents.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getDirectedLoops', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getDirectedLoops.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getInEdgeIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getInEdgeIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getInputEdgeOrder', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getInputEdgeOrder.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getLeftTurnMap', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getLeftTurnMap.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getMinInputEdgeIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getMinInputEdgeIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getPolylines', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getPolylines.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getSiblingMap', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getSiblingMap.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.getUndirectedComponents', kind: "functiondeclaration", path: './s2/builder/graph/Graph.getUndirectedComponents.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.InputEdgeId', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.InputEdgeId.html', attributes: []},
{name: 's2.builder.graph.Graph.inputEdgeIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.inputEdgeIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.InputEdgeIdSetId', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.InputEdgeIdSetId.html', attributes: []},
{name: 's2.builder.graph.Graph.inputEdgeIdSetId', kind: "functiondeclaration", path: './s2/builder/graph/Graph.inputEdgeIdSetId.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.inputEdgeIdSetIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.inputEdgeIdSetIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.inputEdgeIdSetLexicon', kind: "functiondeclaration", path: './s2/builder/graph/Graph.inputEdgeIdSetLexicon.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.isFullPolygon', kind: "functiondeclaration", path: './s2/builder/graph/Graph.isFullPolygon.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.IsFullPolygonPredicate', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.IsFullPolygonPredicate.html', attributes: []},
{name: 's2.builder.graph.Graph.isFullPolygonPredicate', kind: "functiondeclaration", path: './s2/builder/graph/Graph.isFullPolygonPredicate.html', attributes: []},
{name: 's2.builder.graph.Graph.LabelFetcher', kind: "classdeclaration", path: './s2/builder/graph/Graph.LabelFetcher.html', attributes: []},
{name: 's2.builder.graph.Graph.LabelFetcher.fetch', kind: "functiondeclaration", path: './s2/builder/graph/Graph.LabelFetcher.fetch.html', attributes: []},
{name: 's2.builder.graph.Graph.LabelFetcher.this', kind: "functiondeclaration", path: './s2/builder/graph/Graph.LabelFetcher.this.html', attributes: []},
{name: 's2.builder.graph.Graph.labels', kind: "functiondeclaration", path: './s2/builder/graph/Graph.labels.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.LabelSetId', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.LabelSetId.html', attributes: []},
{name: 's2.builder.graph.Graph.labelSetId', kind: "functiondeclaration", path: './s2/builder/graph/Graph.labelSetId.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.labelSetIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.labelSetIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.labelSetLexicon', kind: "functiondeclaration", path: './s2/builder/graph/Graph.labelSetLexicon.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.LoopType', kind: "enumdeclaration", path: './s2/builder/graph/Graph.LoopType.html', attributes: []},
{name: 's2.builder.graph.Graph.LoopType.CIRCUIT', kind: "enummemberdeclaration", path: './s2/builder/graph/Graph.LoopType.html#CIRCUIT', attributes: []},
{name: 's2.builder.graph.Graph.LoopType.SIMPLE', kind: "enummemberdeclaration", path: './s2/builder/graph/Graph.LoopType.html#SIMPLE', attributes: []},
{name: 's2.builder.graph.Graph.makeSiblingMap', kind: "functiondeclaration", path: './s2/builder/graph/Graph.makeSiblingMap.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.MAX_INPUT_EDGE_ID', kind: "variabledeclaration", path: './s2/builder/graph/Graph.MAX_INPUT_EDGE_ID.html', attributes: []},
{name: 's2.builder.graph.Graph.minInputEdgeId', kind: "functiondeclaration", path: './s2/builder/graph/Graph.minInputEdgeId.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.NO_INPUT_EDGE_ID', kind: "variabledeclaration", path: './s2/builder/graph/Graph.NO_INPUT_EDGE_ID.html', attributes: []},
{name: 's2.builder.graph.Graph.numEdges', kind: "functiondeclaration", path: './s2/builder/graph/Graph.numEdges.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.numVertices', kind: "functiondeclaration", path: './s2/builder/graph/Graph.numVertices.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.options', kind: "functiondeclaration", path: './s2/builder/graph/Graph.options.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.PolylineType', kind: "enumdeclaration", path: './s2/builder/graph/Graph.PolylineType.html', attributes: []},
{name: 's2.builder.graph.Graph.PolylineType.PATH', kind: "enummemberdeclaration", path: './s2/builder/graph/Graph.PolylineType.html#PATH', attributes: []},
{name: 's2.builder.graph.Graph.PolylineType.WALK', kind: "enummemberdeclaration", path: './s2/builder/graph/Graph.PolylineType.html#WALK', attributes: []},
{name: 's2.builder.graph.Graph.processEdges', kind: "functiondeclaration", path: './s2/builder/graph/Graph.processEdges.html', attributes: ["static"]},
{name: 's2.builder.graph.Graph.reverse', kind: "functiondeclaration", path: './s2/builder/graph/Graph.reverse.html', attributes: ["static"]},
{name: 's2.builder.graph.Graph.SiblingPairs', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.SiblingPairs.html', attributes: []},
{name: 's2.builder.graph.Graph.stableLessThan', kind: "functiondeclaration", path: './s2/builder/graph/Graph.stableLessThan.html', attributes: ["static"]},
{name: 's2.builder.graph.Graph.this', kind: "functiondeclaration", path: './s2/builder/graph/Graph.this.html', attributes: []},
{name: 's2.builder.graph.Graph.UndirectedComponent', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.UndirectedComponent.html', attributes: []},
{name: 's2.builder.graph.Graph.vertex', kind: "functiondeclaration", path: './s2/builder/graph/Graph.vertex.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.VertexId', kind: "aliasdeclaration", path: './s2/builder/graph/Graph.VertexId.html', attributes: []},
{name: 's2.builder.graph.Graph.VertexInMap', kind: "classdeclaration", path: './s2/builder/graph/Graph.VertexInMap.html', attributes: []},
{name: 's2.builder.graph.Graph.VertexInMap.degree', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexInMap.degree.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.VertexInMap.edgeIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexInMap.edgeIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.VertexInMap.inEdgeIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexInMap.inEdgeIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.VertexInMap.this', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexInMap.this.html', attributes: []},
{name: 's2.builder.graph.Graph.VertexOutMap', kind: "classdeclaration", path: './s2/builder/graph/Graph.VertexOutMap.html', attributes: []},
{name: 's2.builder.graph.Graph.VertexOutMap.degree', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexOutMap.degree.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.VertexOutMap.edgeIds', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexOutMap.edgeIds.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.VertexOutMap.edges', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexOutMap.edges.html', attributes: ["const"]},
{name: 's2.builder.graph.Graph.VertexOutMap.this', kind: "functiondeclaration", path: './s2/builder/graph/Graph.VertexOutMap.this.html', attributes: []},
{name: 's2.builder.graph.Graph.vertices', kind: "functiondeclaration", path: './s2/builder/graph/Graph.vertices.html', attributes: ["const"]},
{name: 's2.builder.layer', kind: "module", path: './s2/builder/layer.html', attributes: []},
{name: 's2.builder.layer.Layer', kind: "classdeclaration", path: './s2/builder/layer/Layer.html', attributes: []},
{name: 's2.shapeutil.contains_brute_force', kind: "module", path: './s2/shapeutil/contains_brute_force.html', attributes: []},
{name: 's2.shapeutil.contains_brute_force.containsBruteForce', kind: "functiondeclaration", path: './s2/shapeutil/contains_brute_force/containsBruteForce.html', attributes: []},
{name: 's2.shapeutil.count_edges', kind: "module", path: './s2/shapeutil/count_edges.html', attributes: []},
{name: 's2.shapeutil.count_edges.countEdges', kind: "functiondeclaration", path: './s2/shapeutil/count_edges/countEdges.html', attributes: []},
{name: 's2.shapeutil.count_edges.countEdgesUpTo', kind: "functiondeclaration", path: './s2/shapeutil/count_edges/countEdgesUpTo.html', attributes: []},
{name: 's2.shapeutil.edge_iterator', kind: "module", path: './s2/shapeutil/edge_iterator.html', attributes: []},
{name: 's2.shapeutil.edge_iterator.EdgeIterator', kind: "structdeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.html', attributes: []},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.debugString', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.debugString.html', attributes: ["const"]},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.done', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.done.html', attributes: ["const"]},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.edge', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.edge.html', attributes: ["const"]},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.edgeId', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.edgeId.html', attributes: ["const"]},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.next', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.next.html', attributes: []},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.opEquals', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.opEquals.html', attributes: ["const"]},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.shapeEdgeId', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.shapeEdgeId.html', attributes: ["const"]},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.shapeId', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.shapeId.html', attributes: ["const"]},
{name: 's2.shapeutil.edge_iterator.EdgeIterator.this', kind: "functiondeclaration", path: './s2/shapeutil/edge_iterator/EdgeIterator.this.html', attributes: []},
{name: 's2.shapeutil.get_reference_point', kind: "module", path: './s2/shapeutil/get_reference_point.html', attributes: []},
{name: 's2.shapeutil.get_reference_point.getReferencePoint', kind: "functiondeclaration", path: './s2/shapeutil/get_reference_point/getReferencePoint.html', attributes: []},
{name: 's2.shapeutil.range_iterator', kind: "module", path: './s2/shapeutil/range_iterator.html', attributes: []},
{name: 's2.shapeutil.range_iterator.RangeIterator', kind: "classdeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.html', attributes: []},
{name: 's2.shapeutil.range_iterator.RangeIterator.cell', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.cell.html', attributes: ["const"]},
{name: 's2.shapeutil.range_iterator.RangeIterator.done', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.done.html', attributes: []},
{name: 's2.shapeutil.range_iterator.RangeIterator.id', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.id.html', attributes: ["const"]},
{name: 's2.shapeutil.range_iterator.RangeIterator.next', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.next.html', attributes: []},
{name: 's2.shapeutil.range_iterator.RangeIterator.rangeMax', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.rangeMax.html', attributes: ["const"]},
{name: 's2.shapeutil.range_iterator.RangeIterator.rangeMin', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.rangeMin.html', attributes: ["const"]},
{name: 's2.shapeutil.range_iterator.RangeIterator.seekBeyond', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.seekBeyond.html', attributes: []},
{name: 's2.shapeutil.range_iterator.RangeIterator.seekTo', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.seekTo.html', attributes: []},
{name: 's2.shapeutil.range_iterator.RangeIterator.this', kind: "functiondeclaration", path: './s2/shapeutil/range_iterator/RangeIterator.this.html', attributes: []},
{name: 's2.shapeutil.shape_edge', kind: "module", path: './s2/shapeutil/shape_edge.html', attributes: []},
{name: 's2.shapeutil.shape_edge.ShapeEdge', kind: "classdeclaration", path: './s2/shapeutil/shape_edge/ShapeEdge.html', attributes: []},
{name: 's2.shapeutil.shape_edge.ShapeEdge.id', kind: "functiondeclaration", path: './s2/shapeutil/shape_edge/ShapeEdge.id.html', attributes: ["const"]},
{name: 's2.shapeutil.shape_edge.ShapeEdge.this', kind: "functiondeclaration", path: './s2/shapeutil/shape_edge/ShapeEdge.this.html', attributes: []},
{name: 's2.shapeutil.shape_edge.ShapeEdge.v0', kind: "functiondeclaration", path: './s2/shapeutil/shape_edge/ShapeEdge.v0.html', attributes: ["ref", "const"]},
{name: 's2.shapeutil.shape_edge.ShapeEdge.v1', kind: "functiondeclaration", path: './s2/shapeutil/shape_edge/ShapeEdge.v1.html', attributes: ["ref", "const"]},
{name: 's2.shapeutil.shape_edge_id', kind: "module", path: './s2/shapeutil/shape_edge_id.html', attributes: []},
{name: 's2.shapeutil.shape_edge_id.ShapeEdgeId', kind: "structdeclaration", path: './s2/shapeutil/shape_edge_id/ShapeEdgeId.html', attributes: []},
{name: 's2.shapeutil.shape_edge_id.ShapeEdgeId.edgeId', kind: "variabledeclaration", path: './s2/shapeutil/shape_edge_id/ShapeEdgeId.edgeId.html', attributes: []},
{name: 's2.shapeutil.shape_edge_id.ShapeEdgeId.opCmp', kind: "functiondeclaration", path: './s2/shapeutil/shape_edge_id/ShapeEdgeId.opCmp.html', attributes: ["const"]},
{name: 's2.shapeutil.shape_edge_id.ShapeEdgeId.shapeId', kind: "variabledeclaration", path: './s2/shapeutil/shape_edge_id/ShapeEdgeId.shapeId.html', attributes: []},
{name: 's2.shapeutil.shape_edge_id.ShapeEdgeId.toHash', kind: "functiondeclaration", path: './s2/shapeutil/shape_edge_id/ShapeEdgeId.toHash.html', attributes: ["nothrow", "trusted", "const"]},
{name: 's2.shapeutil.shape_edge_id.ShapeEdgeId.toString', kind: "functiondeclaration", path: './s2/shapeutil/shape_edge_id/ShapeEdgeId.toString.html', attributes: ["const"]},
{name: 's2.shapeutil.visit_crossing_edge_pairs', kind: "module", path: './s2/shapeutil/visit_crossing_edge_pairs.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.EdgePairVisitor', kind: "aliasdeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/EdgePairVisitor.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.findSelfIntersection', kind: "functiondeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/findSelfIntersection.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.IndexCrosser', kind: "classdeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/IndexCrosser.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.IndexCrosser.this', kind: "functiondeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/IndexCrosser.this.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.IndexCrosser.visitCellCellCrossings', kind: "functiondeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/IndexCrosser.visitCellCellCrossings.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.IndexCrosser.visitCrossings', kind: "functiondeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/IndexCrosser.visitCrossings.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.ShapeEdgeVector', kind: "aliasdeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/ShapeEdgeVector.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.visitCrossingEdgePairs', kind: "functiondeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/visitCrossingEdgePairs.html', attributes: []},
{name: 's2.shapeutil.visit_crossing_edge_pairs.visitCrossings', kind: "functiondeclaration", path: './s2/shapeutil/visit_crossing_edge_pairs/visitCrossings.html', attributes: ["static"]},
{name: 's2.strings.serialize', kind: "module", path: './s2/strings/serialize.html', attributes: []},
{name: 's2.strings.serialize.dictionaryParse', kind: "functiondeclaration", path: './s2/strings/serialize/dictionaryParse.html', attributes: []},
{name: 's2.util.coding.coder', kind: "module", path: './s2/util/coding/coder.html', attributes: []},
{name: 's2.util.coding.coder.Decoder', kind: "classdeclaration", path: './s2/util/coding/coder/Decoder.html', attributes: []},
{name: 's2.util.coding.coder.Decoder._buf', kind: "variabledeclaration", path: './s2/util/coding/coder/Decoder._buf.html', attributes: []},
{name: 's2.util.coding.coder.Decoder._limit', kind: "variabledeclaration", path: './s2/util/coding/coder/Decoder._limit.html', attributes: []},
{name: 's2.util.coding.coder.Decoder._pos', kind: "variabledeclaration", path: './s2/util/coding/coder/Decoder._pos.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.avail', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.avail.html', attributes: ["const"]},
{name: 's2.util.coding.coder.Decoder.get16', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.get16.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.get32', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.get32.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.get64', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.get64.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.get8', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.get8.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.getDouble', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.getDouble.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.getRaw', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.getRaw.html', attributes: ["trusted"]},
{name: 's2.util.coding.coder.Decoder.pos', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.pos.html', attributes: ["const"]},
{name: 's2.util.coding.coder.Decoder.reset', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.reset.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.skip', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.skip.html', attributes: []},
{name: 's2.util.coding.coder.Decoder.this', kind: "functiondeclaration", path: './s2/util/coding/coder/Decoder.this.html', attributes: []},
{name: 's2.util.coding.coder.Encoder', kind: "classdeclaration", path: './s2/util/coding/coder/Encoder.html', attributes: []},
{name: 's2.util.coding.coder.Encoder._buf', kind: "variabledeclaration", path: './s2/util/coding/coder/Encoder._buf.html', attributes: []},
{name: 's2.util.coding.coder.Encoder._limit', kind: "variabledeclaration", path: './s2/util/coding/coder/Encoder._limit.html', attributes: []},
{name: 's2.util.coding.coder.Encoder._pos', kind: "variabledeclaration", path: './s2/util/coding/coder/Encoder._pos.html', attributes: []},
{name: 's2.util.coding.coder.Encoder.avail', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.avail.html', attributes: ["final", "const"]},
{name: 's2.util.coding.coder.Encoder.buffer', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.buffer.html', attributes: ["final"]},
{name: 's2.util.coding.coder.Encoder.ensure', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.ensure.html', attributes: []},
{name: 's2.util.coding.coder.Encoder.length', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.length.html', attributes: ["final", "const"]},
{name: 's2.util.coding.coder.Encoder.put16', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.put16.html', attributes: ["final"]},
{name: 's2.util.coding.coder.Encoder.put32', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.put32.html', attributes: ["final"]},
{name: 's2.util.coding.coder.Encoder.put64', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.put64.html', attributes: ["final"]},
{name: 's2.util.coding.coder.Encoder.put8', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.put8.html', attributes: ["final"]},
{name: 's2.util.coding.coder.Encoder.putDouble', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.putDouble.html', attributes: ["final"]},
{name: 's2.util.coding.coder.Encoder.putRaw', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.putRaw.html', attributes: ["final", "trusted"]},
{name: 's2.util.coding.coder.Encoder.reset', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.reset.html', attributes: ["final"]},
{name: 's2.util.coding.coder.Encoder.this', kind: "functiondeclaration", path: './s2/util/coding/coder/Encoder.this.html', attributes: []},
{name: 's2.util.coding.coder.makeDecoder', kind: "functiondeclaration", path: './s2/util/coding/coder/makeDecoder.html', attributes: ["auto"]},
{name: 's2.util.coding.coder.makeEncoder', kind: "functiondeclaration", path: './s2/util/coding/coder/makeEncoder.html', attributes: ["auto", "pure", "nothrow", "safe"]},
{name: 's2.util.coding.coder.toNativeBytes', kind: "functiondeclaration", path: './s2/util/coding/coder/toNativeBytes.html', attributes: ["auto"]},
{name: 's2.util.container.btree', kind: "module", path: './s2/util/container/btree.html', attributes: []},
{name: 's2.util.container.btree.BTree', kind: "classdeclaration", path: './s2/util/container/btree/BTree.html', attributes: []},
{name: 's2.util.container.btree.BTree._isValueEqual', kind: "functiondeclaration", path: './s2/util/container/btree/BTree._isValueEqual.html', attributes: ["static"]},
{name: 's2.util.container.btree.BTree._isValueLess', kind: "aliasdeclaration", path: './s2/util/container/btree/BTree._isValueLess.html', attributes: []},
{name: 's2.util.container.btree.BTree._length', kind: "variabledeclaration", path: './s2/util/container/btree/BTree._length.html', attributes: []},
{name: 's2.util.container.btree.BTree._root', kind: "variabledeclaration", path: './s2/util/container/btree/BTree._root.html', attributes: []},
{name: 's2.util.container.btree.BTree.begin', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.begin.html', attributes: []},
{name: 's2.util.container.btree.BTree.clear', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.clear.html', attributes: []},
{name: 's2.util.container.btree.BTree.empty', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.empty.html', attributes: ["const", "property"]},
{name: 's2.util.container.btree.BTree.end', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.end.html', attributes: []},
{name: 's2.util.container.btree.BTree.equalRange', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.equalRange.html', attributes: []},
{name: 's2.util.container.btree.BTree.getMinDegree', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.getMinDegree.html', attributes: ["static", "pure", "nothrow", "nogc", "safe"]},
{name: 's2.util.container.btree.BTree.insert', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.insert.html', attributes: []},
{name: 's2.util.container.btree.BTree.Iterator', kind: "structdeclaration", path: './s2/util/container/btree/BTree.Iterator.html', attributes: []},
{name: 's2.util.container.btree.BTree.Iterator._node', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Iterator._node.html', attributes: []},
{name: 's2.util.container.btree.BTree.Iterator._position', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Iterator._position.html', attributes: []},
{name: 's2.util.container.btree.BTree.Iterator.decrement', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Iterator.decrement.html', attributes: []},
{name: 's2.util.container.btree.BTree.Iterator.getValue', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Iterator.getValue.html', attributes: ["inout"]},
{name: 's2.util.container.btree.BTree.Iterator.increment', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Iterator.increment.html', attributes: []},
{name: 's2.util.container.btree.BTree.Iterator.isFound', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Iterator.isFound.html', attributes: []},
{name: 's2.util.container.btree.BTree.Iterator.opUnary', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Iterator.opUnary.html', attributes: ["inout"]},
{name: 's2.util.container.btree.BTree.length', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.length.html', attributes: ["const", "property"]},
{name: 's2.util.container.btree.BTree.lowerRange', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.lowerRange.html', attributes: []},
{name: 's2.util.container.btree.BTree.MAX_DEGREE', kind: "enummemberdeclaration", path: './s2/util/container/btree/BTree.MAX_DEGREE.html', attributes: []},
{name: 's2.util.container.btree.BTree.MIN_DEGREE', kind: "enummemberdeclaration", path: './s2/util/container/btree/BTree.MIN_DEGREE.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node', kind: "classdeclaration", path: './s2/util/container/btree/BTree.Node.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node._children', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Node._children.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node._isLeaf', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Node._isLeaf.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node._numValues', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Node._numValues.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node._parent', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Node._parent.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node._position', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Node._position.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node._values', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Node._values.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.findFirstGE', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.findFirstGE.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.findFirstGEIndex', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.findFirstGEIndex.html', attributes: ["const"]},
{name: 's2.util.container.btree.BTree.Node.findFirstGT', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.findFirstGT.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.findFirstGTIndex', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.findFirstGTIndex.html', attributes: ["const"]},
{name: 's2.util.container.btree.BTree.Node.getChild', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.getChild.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.getValue', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.getValue.html', attributes: ["inout"]},
{name: 's2.util.container.btree.BTree.Node.getValues', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.getValues.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.insertNonFull', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.insertNonFull.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.isFull', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.isFull.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.isLeaf', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.isLeaf.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.isRoot', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.isRoot.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.leftmost', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.leftmost.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.numChildren', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.numChildren.html', attributes: ["const"]},
{name: 's2.util.container.btree.BTree.Node.numValues', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.numValues.html', attributes: ["const"]},
{name: 's2.util.container.btree.BTree.Node.remove', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.remove.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.rightmost', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.rightmost.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.setChild', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.setChild.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.splitChild', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.splitChild.html', attributes: []},
{name: 's2.util.container.btree.BTree.Node.toString', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Node.toString.html', attributes: ["override"]},
{name: 's2.util.container.btree.BTree.opBinaryRight', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.opBinaryRight.html', attributes: []},
{name: 's2.util.container.btree.BTree.opIndex', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.opIndex.html', attributes: []},
{name: 's2.util.container.btree.BTree.opSlice', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.opSlice.html', attributes: []},
{name: 's2.util.container.btree.BTree.Range', kind: "structdeclaration", path: './s2/util/container/btree/BTree.Range.html', attributes: []},
{name: 's2.util.container.btree.BTree.Range._begin', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Range._begin.html', attributes: []},
{name: 's2.util.container.btree.BTree.Range._end', kind: "variabledeclaration", path: './s2/util/container/btree/BTree.Range._end.html', attributes: []},
{name: 's2.util.container.btree.BTree.Range.empty', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Range.empty.html', attributes: []},
{name: 's2.util.container.btree.BTree.Range.front', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Range.front.html', attributes: ["inout"]},
{name: 's2.util.container.btree.BTree.Range.popFront', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Range.popFront.html', attributes: []},
{name: 's2.util.container.btree.BTree.Range.toIterator', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.Range.toIterator.html', attributes: []},
{name: 's2.util.container.btree.BTree.remove', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.remove.html', attributes: []},
{name: 's2.util.container.btree.BTree.root', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.root.html', attributes: ["inout", "property"]},
{name: 's2.util.container.btree.BTree.this', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.this.html', attributes: []},
{name: 's2.util.container.btree.BTree.upperRange', kind: "functiondeclaration", path: './s2/util/container/btree/BTree.upperRange.html', attributes: []},
{name: 's2.util.container.btree_map', kind: "module", path: './s2/util/container/btree_map.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap', kind: "classdeclaration", path: './s2/util/container/btree_map/BTreeMap.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap._isKeyLess', kind: "aliasdeclaration", path: './s2/util/container/btree_map/BTreeMap._isKeyLess.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.bTree', kind: "variabledeclaration", path: './s2/util/container/btree_map/BTreeMap.bTree.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.BTreeT', kind: "aliasdeclaration", path: './s2/util/container/btree_map/BTreeMap.BTreeT.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.equalRange', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.equalRange.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.insert', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.insert.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.lowerRange', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.lowerRange.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.opBinaryRight', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.opBinaryRight.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.opIndexAssign', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.opIndexAssign.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.Pair', kind: "structdeclaration", path: './s2/util/container/btree_map/BTreeMap.Pair.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.Pair.key', kind: "variabledeclaration", path: './s2/util/container/btree_map/BTreeMap.Pair.key.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.Pair.value', kind: "variabledeclaration", path: './s2/util/container/btree_map/BTreeMap.Pair.value.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.remove', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.remove.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.this', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.this.html', attributes: []},
{name: 's2.util.container.btree_map.BTreeMap.upperRange', kind: "functiondeclaration", path: './s2/util/container/btree_map/BTreeMap.upperRange.html', attributes: []},
{name: 's2.util.container.dense_hash_set', kind: "module", path: './s2/util/container/dense_hash_set.html', attributes: []},
{name: 's2.util.container.dense_hash_set.denseHashSet', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/denseHashSet.html', attributes: ["auto"]},
{name: 's2.util.container.dense_hash_set.DenseHashSet', kind: "classdeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.html', attributes: []},
{name: 's2.util.container.dense_hash_set.DenseHashSet.HashTable', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.HashTable.html', attributes: []},
{name: 's2.util.container.dense_hash_set.DenseHashSet.identity', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.identity.html', attributes: ["static"]},
{name: 's2.util.container.dense_hash_set.DenseHashSet.Iterator', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.Iterator.html', attributes: []},
{name: 's2.util.container.dense_hash_set.DenseHashSet.KeyType', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.KeyType.html', attributes: []},
{name: 's2.util.container.dense_hash_set.DenseHashSet.loadFactor', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.loadFactor.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_set.DenseHashSet.maxLoadFactor', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.maxLoadFactor.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_set.DenseHashSet.minLoadFactor', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.minLoadFactor.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_set.DenseHashSet.opEquals', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.opEquals.html', attributes: ["override"]},
{name: 's2.util.container.dense_hash_set.DenseHashSet.rep', kind: "variabledeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.rep.html', attributes: []},
{name: 's2.util.container.dense_hash_set.DenseHashSet.setKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.setKey.html', attributes: ["static"]},
{name: 's2.util.container.dense_hash_set.DenseHashSet.this', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.this.html', attributes: []},
{name: 's2.util.container.dense_hash_set.DenseHashSet.ValueType', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_set/DenseHashSet.ValueType.html', attributes: []},
{name: 's2.util.container.dense_hash_set.equalTo', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/equalTo.html', attributes: []},
{name: 's2.util.container.dense_hash_set.hash', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/hash.html', attributes: []},
{name: 's2.util.container.dense_hash_set.swap', kind: "functiondeclaration", path: './s2/util/container/dense_hash_set/swap.html', attributes: []},
{name: 's2.util.container.dense_hash_table', kind: "module", path: './s2/util/container/dense_hash_table.html', attributes: []},
{name: 's2.util.container.dense_hash_table.denseHashTable', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/denseHashTable.html', attributes: ["auto"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable', kind: "classdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable._keyValInfo', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable._keyValInfo.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable._numBuckets', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable._numBuckets.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable._numDeleted', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable._numDeleted.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable._numElements', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable._numElements.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable._settings', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable._settings.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable._table', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable._table.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.begin', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.begin.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.bucket', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.bucket.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.bucketCount', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.bucketCount.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.bucketSize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.bucketSize.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.checkUseDeleted', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.checkUseDeleted.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.clear', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.clear.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.clearDeleted', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.clearDeleted.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.clearDeletedKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.clearDeletedKey.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.clearNoResize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.clearNoResize.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.clearToSize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.clearToSize.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.copyFrom', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.copyFrom.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.count', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.count.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.deletedKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.deletedKey.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.destroyBuckets', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.destroyBuckets.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.empty', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.empty.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.emptyKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.emptyKey.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.end', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.end.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.equalKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.equalKey.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.equalRange', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.equalRange.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.erase', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.erase.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.fillRangeWithEmpty', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.fillRangeWithEmpty.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.find', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.find.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.findOrInsert', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.findOrInsert.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.findPosition', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.findPosition.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.getKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.getKey.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.getResizingParameters', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.getResizingParameters.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.hash', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.hash.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.HT_DEFAULT_STARTING_BUCKETS', kind: "enummemberdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.HT_DEFAULT_STARTING_BUCKETS.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.HT_EMPTY_PCT', kind: "enummemberdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.HT_EMPTY_PCT.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.HT_MIN_BUCKETS', kind: "enummemberdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.HT_MIN_BUCKETS.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.HT_OCCUPANCY_PCT', kind: "enummemberdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.HT_OCCUPANCY_PCT.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.ILLEGAL_BUCKET', kind: "enummemberdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.ILLEGAL_BUCKET.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.insert', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.insert.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.insertAt', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.insertAt.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.insertNoResize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.insertNoResize.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Iterator', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Iterator.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyType', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyType.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyValInfo', kind: "classdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyValInfo.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyValInfo.delKey', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyValInfo.delKey.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyValInfo.emptyValue', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyValInfo.emptyValue.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyValInfo.equalKey', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyValInfo.equalKey.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyValInfo.extractKey', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyValInfo.extractKey.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyValInfo.hashFcn', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyValInfo.hashFcn.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.KeyValInfo.setKey', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.KeyValInfo.setKey.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.MAGIC_NUMBER', kind: "enummemberdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.MAGIC_NUMBER.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.MagicNumberType', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.MagicNumberType.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.maxBucketCount', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.maxBucketCount.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.maxSize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.maxSize.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.maybeShrink', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.maybeShrink.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.nonemptyBucketCount', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.nonemptyBucketCount.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.numTableCopies', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.numTableCopies.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.opEquals', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.opEquals.html', attributes: ["override"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Pair', kind: "structdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Pair.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Pair.first', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Pair.first.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Pair.second', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Pair.second.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.resize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.resize.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.resizeDelta', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.resizeDelta.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.resizeTable', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.resizeTable.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.setDeleted', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.setDeleted.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.setDeletedKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.setDeletedKey.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.setEmptyKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.setEmptyKey.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.setKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.setKey.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.setResizingParameters', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.setResizingParameters.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings', kind: "classdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.considerShrink', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.considerShrink.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.enlargeFactor', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.enlargeFactor.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.enlargeSize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.enlargeSize.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.enlargeThreshold', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.enlargeThreshold.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.minBuckets', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.minBuckets.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.numHtCopies', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.numHtCopies.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.resetThresholds', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.resetThresholds.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.setResizingParameters', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.setResizingParameters.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.shrinkFactor', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.shrinkFactor.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.shrinkSize', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.shrinkSize.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.shrinkThreshold', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.shrinkThreshold.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.useDeleted', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.useDeleted.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.Settings.useEmpty', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.Settings.useEmpty.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.size', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.size.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.squashDeleted', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.squashDeleted.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.swap', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.swap.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.testDeleted', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.testDeleted.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.testDeletedKey', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.testDeletedKey.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.testEmpty', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.testEmpty.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTable.this', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.this.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.ThisT', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.ThisT.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTable.ValueType', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTable.ValueType.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator', kind: "structdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator._data', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator._data.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator._ht', kind: "variabledeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator._ht.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator.advancePastEmptyAndDeleted', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator.advancePastEmptyAndDeleted.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator.Iterator', kind: "aliasdeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator.Iterator.html', attributes: []},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator.opEquals', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator.opEquals.html', attributes: ["const"]},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator.opUnary', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator.opUnary.html', attributes: ["inout", "ref"]},
{name: 's2.util.container.dense_hash_table.DenseHashTableIterator.this', kind: "functiondeclaration", path: './s2/util/container/dense_hash_table/DenseHashTableIterator.this.html', attributes: []},
{name: 's2.util.container.rbtree_map', kind: "module", path: './s2/util/container/rbtree_map.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap', kind: "classdeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.equalRange', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.equalRange.html', attributes: ["auto"]},
{name: 's2.util.container.rbtree_map.RBTreeMap.insert', kind: "aliasdeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.insert.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.isImplicitlyConvertibleToKey', kind: "enummemberdeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.isImplicitlyConvertibleToKey.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.keyLess', kind: "aliasdeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.keyLess.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.lowerBound', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.lowerBound.html', attributes: ["const"]},
{name: 's2.util.container.rbtree_map.RBTreeMap.opBinaryRight', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.opBinaryRight.html', attributes: ["const"]},
{name: 's2.util.container.rbtree_map.RBTreeMap.opEquals', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.opEquals.html', attributes: ["override"]},
{name: 's2.util.container.rbtree_map.RBTreeMap.opIndexAssign', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.opIndexAssign.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.Pair', kind: "structdeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.Pair.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.Pair.key', kind: "variabledeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.Pair.key.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.Pair.value', kind: "variabledeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.Pair.value.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.rbTree', kind: "variabledeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.rbTree.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.RedBlackTreeT', kind: "aliasdeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.RedBlackTreeT.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.removeKey', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.removeKey.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.stableInsert', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.stableInsert.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.this', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.this.html', attributes: []},
{name: 's2.util.container.rbtree_map.RBTreeMap.upperBound', kind: "functiondeclaration", path: './s2/util/container/rbtree_map/RBTreeMap.upperBound.html', attributes: []},
{name: 's2.util.hash.mix', kind: "module", path: './s2/util/hash/mix.html', attributes: []},
{name: 's2.util.hash.mix.HashMix', kind: "structdeclaration", path: './s2/util/hash/mix/HashMix.html', attributes: []},
{name: 's2.util.hash.mix.HashMix.get', kind: "functiondeclaration", path: './s2/util/hash/mix/HashMix.get.html', attributes: ["nothrow", "safe", "const"]},
{name: 's2.util.hash.mix.HashMix.mix', kind: "functiondeclaration", path: './s2/util/hash/mix/HashMix.mix.html', attributes: ["nothrow", "safe"]},
{name: 's2.util.hash.mix.HashMix.this', kind: "functiondeclaration", path: './s2/util/hash/mix/HashMix.this.html', attributes: ["nothrow", "ref", "safe"]},
{name: 's2.util.log.logger', kind: "module", path: './s2/util/log/logger.html', attributes: []},
{name: 's2.util.log.logger.Logger', kind: "classdeclaration", path: './s2/util/log/logger/Logger.html', attributes: []},
{name: 's2.util.log.logger.Logger.log', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.log.html', attributes: []},
{name: 's2.util.log.logger.Logger.logDebug', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logDebug.html', attributes: []},
{name: 's2.util.log.logger.Logger.logError', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logError.html', attributes: []},
{name: 's2.util.log.logger.Logger.logf', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logf.html', attributes: []},
{name: 's2.util.log.logger.Logger.logFatal', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logFatal.html', attributes: []},
{name: 's2.util.log.logger.Logger.logfDebug', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logfDebug.html', attributes: []},
{name: 's2.util.log.logger.Logger.logfError', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logfError.html', attributes: []},
{name: 's2.util.log.logger.Logger.logfFatal', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logfFatal.html', attributes: []},
{name: 's2.util.log.logger.Logger.logfInfo', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logfInfo.html', attributes: []},
{name: 's2.util.log.logger.Logger.logfTrace', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logfTrace.html', attributes: []},
{name: 's2.util.log.logger.Logger.logfWarn', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logfWarn.html', attributes: []},
{name: 's2.util.log.logger.Logger.logInfo', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logInfo.html', attributes: []},
{name: 's2.util.log.logger.Logger.logTrace', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logTrace.html', attributes: []},
{name: 's2.util.log.logger.Logger.logWarn', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.logWarn.html', attributes: []},
{name: 's2.util.log.logger.Logger.this', kind: "functiondeclaration", path: './s2/util/log/logger/Logger.this.html', attributes: []},
{name: 's2.util.log.logger.LogLevel', kind: "enumdeclaration", path: './s2/util/log/logger/LogLevel.html', attributes: []},
{name: 's2.util.log.logger.LogLevel.DEBUG', kind: "enummemberdeclaration", path: './s2/util/log/logger/LogLevel.html#DEBUG', attributes: []},
{name: 's2.util.log.logger.LogLevel.ERROR', kind: "enummemberdeclaration", path: './s2/util/log/logger/LogLevel.html#ERROR', attributes: []},
{name: 's2.util.log.logger.LogLevel.FATAL', kind: "enummemberdeclaration", path: './s2/util/log/logger/LogLevel.html#FATAL', attributes: []},
{name: 's2.util.log.logger.LogLevel.INFO', kind: "enummemberdeclaration", path: './s2/util/log/logger/LogLevel.html#INFO', attributes: []},
{name: 's2.util.log.logger.LogLevel.OFF', kind: "enummemberdeclaration", path: './s2/util/log/logger/LogLevel.html#OFF', attributes: []},
{name: 's2.util.log.logger.LogLevel.TRACE', kind: "enummemberdeclaration", path: './s2/util/log/logger/LogLevel.html#TRACE', attributes: []},
{name: 's2.util.log.logger.LogLevel.WARN', kind: "enummemberdeclaration", path: './s2/util/log/logger/LogLevel.html#WARN', attributes: []},
{name: 's2.util.math.exactfloat', kind: "module", path: './s2/util/math/exactfloat.html', attributes: []},
{name: 's2.util.math.exactfloat.abs', kind: "functiondeclaration", path: './s2/util/math/exactfloat/abs.html', attributes: []},
{name: 's2.util.math.exactfloat.ceil', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ceil.html', attributes: []},
{name: 's2.util.math.exactfloat.copysign', kind: "functiondeclaration", path: './s2/util/math/exactfloat/copysign.html', attributes: []},
{name: 's2.util.math.exactfloat.drem', kind: "functiondeclaration", path: './s2/util/math/exactfloat/drem.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat', kind: "structdeclaration", path: './s2/util/math/exactfloat/ExactFloat.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.exp', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.exp.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.infinity', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.infinity.html', attributes: ["static"]},
{name: 's2.util.math.exactfloat.ExactFloat.isFinite', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.isFinite.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.isInf', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.isInf.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.isNan', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.isNan.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.isNormal', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.isNormal.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.isZero', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.isZero.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.MAX_EXP', kind: "variabledeclaration", path: './s2/util/math/exactfloat/ExactFloat.MAX_EXP.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.MAX_PREC', kind: "variabledeclaration", path: './s2/util/math/exactfloat/ExactFloat.MAX_PREC.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.maxPrec', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.maxPrec.html', attributes: ["property", "const"]},
{name: 's2.util.math.exactfloat.ExactFloat.MIN_EXP', kind: "variabledeclaration", path: './s2/util/math/exactfloat/ExactFloat.MIN_EXP.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.nan', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.nan.html', attributes: ["static"]},
{name: 's2.util.math.exactfloat.ExactFloat.numSignificantDigitsForPrec', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.numSignificantDigitsForPrec.html', attributes: ["static"]},
{name: 's2.util.math.exactfloat.ExactFloat.opAssign', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.opAssign.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.opBinary', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.opBinary.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.opBinaryRight', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.opBinaryRight.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.opCmp', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.opCmp.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.opEquals', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.opEquals.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.opOpAssign', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.opOpAssign.html', attributes: ["ref"]},
{name: 's2.util.math.exactfloat.ExactFloat.opUnary', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.opUnary.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.prec', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.prec.html', attributes: ["property", "const"]},
{name: 's2.util.math.exactfloat.ExactFloat.RoundingMode', kind: "enumdeclaration", path: './s2/util/math/exactfloat/ExactFloat.RoundingMode.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.RoundingMode.ROUND_AWAY_FROM_ZERO', kind: "enummemberdeclaration", path: './s2/util/math/exactfloat/ExactFloat.RoundingMode.html#ROUND_AWAY_FROM_ZERO', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.RoundingMode.ROUND_TIES_AWAY_FROM_ZERO', kind: "enummemberdeclaration", path: './s2/util/math/exactfloat/ExactFloat.RoundingMode.html#ROUND_TIES_AWAY_FROM_ZERO', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.RoundingMode.ROUND_TIES_TO_EVEN', kind: "enummemberdeclaration", path: './s2/util/math/exactfloat/ExactFloat.RoundingMode.html#ROUND_TIES_TO_EVEN', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.RoundingMode.ROUND_TOWARD_NEGATIVE', kind: "enummemberdeclaration", path: './s2/util/math/exactfloat/ExactFloat.RoundingMode.html#ROUND_TOWARD_NEGATIVE', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.RoundingMode.ROUND_TOWARD_POSITIVE', kind: "enummemberdeclaration", path: './s2/util/math/exactfloat/ExactFloat.RoundingMode.html#ROUND_TOWARD_POSITIVE', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.RoundingMode.ROUND_TOWARD_ZERO', kind: "enummemberdeclaration", path: './s2/util/math/exactfloat/ExactFloat.RoundingMode.html#ROUND_TOWARD_ZERO', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.roundToMaxPrec', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.roundToMaxPrec.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.scaleAndCompare', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.scaleAndCompare.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.setInf', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.setInf.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.setNan', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.setNan.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.setZero', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.setZero.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.sign', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.sign.html', attributes: ["property", "const"]},
{name: 's2.util.math.exactfloat.ExactFloat.signBit', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.signBit.html', attributes: ["property", "const"]},
{name: 's2.util.math.exactfloat.ExactFloat.signedZero', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.signedZero.html', attributes: ["static"]},
{name: 's2.util.math.exactfloat.ExactFloat.this', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.this.html', attributes: []},
{name: 's2.util.math.exactfloat.ExactFloat.toDouble', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.toDouble.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.toHash', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.toHash.html', attributes: ["nothrow", "safe", "const"]},
{name: 's2.util.math.exactfloat.ExactFloat.toString', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.toString.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.toStringWithMaxDigits', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.toStringWithMaxDigits.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.toUniqueString', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.toUniqueString.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.ExactFloat.unsignedLess', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ExactFloat.unsignedLess.html', attributes: ["const"]},
{name: 's2.util.math.exactfloat.fabs', kind: "functiondeclaration", path: './s2/util/math/exactfloat/fabs.html', attributes: []},
{name: 's2.util.math.exactfloat.fdim', kind: "functiondeclaration", path: './s2/util/math/exactfloat/fdim.html', attributes: []},
{name: 's2.util.math.exactfloat.floor', kind: "functiondeclaration", path: './s2/util/math/exactfloat/floor.html', attributes: []},
{name: 's2.util.math.exactfloat.fmax', kind: "functiondeclaration", path: './s2/util/math/exactfloat/fmax.html', attributes: []},
{name: 's2.util.math.exactfloat.fmin', kind: "functiondeclaration", path: './s2/util/math/exactfloat/fmin.html', attributes: []},
{name: 's2.util.math.exactfloat.fmod', kind: "functiondeclaration", path: './s2/util/math/exactfloat/fmod.html', attributes: []},
{name: 's2.util.math.exactfloat.frexp', kind: "functiondeclaration", path: './s2/util/math/exactfloat/frexp.html', attributes: []},
{name: 's2.util.math.exactfloat.ilogb', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ilogb.html', attributes: []},
{name: 's2.util.math.exactfloat.ldexp', kind: "functiondeclaration", path: './s2/util/math/exactfloat/ldexp.html', attributes: []},
{name: 's2.util.math.exactfloat.logb', kind: "functiondeclaration", path: './s2/util/math/exactfloat/logb.html', attributes: []},
{name: 's2.util.math.exactfloat.lrint', kind: "functiondeclaration", path: './s2/util/math/exactfloat/lrint.html', attributes: []},
{name: 's2.util.math.exactfloat.lround', kind: "functiondeclaration", path: './s2/util/math/exactfloat/lround.html', attributes: []},
{name: 's2.util.math.exactfloat.modf', kind: "functiondeclaration", path: './s2/util/math/exactfloat/modf.html', attributes: []},
{name: 's2.util.math.exactfloat.nearbyint', kind: "functiondeclaration", path: './s2/util/math/exactfloat/nearbyint.html', attributes: []},
{name: 's2.util.math.exactfloat.remainder', kind: "functiondeclaration", path: './s2/util/math/exactfloat/remainder.html', attributes: []},
{name: 's2.util.math.exactfloat.rint', kind: "functiondeclaration", path: './s2/util/math/exactfloat/rint.html', attributes: []},
{name: 's2.util.math.exactfloat.round', kind: "functiondeclaration", path: './s2/util/math/exactfloat/round.html', attributes: []},
{name: 's2.util.math.exactfloat.scalbln', kind: "functiondeclaration", path: './s2/util/math/exactfloat/scalbln.html', attributes: []},
{name: 's2.util.math.exactfloat.scalbn', kind: "functiondeclaration", path: './s2/util/math/exactfloat/scalbn.html', attributes: []},
{name: 's2.util.math.exactfloat.trunc', kind: "functiondeclaration", path: './s2/util/math/exactfloat/trunc.html', attributes: []},
{name: 's2.util.math.mathutil', kind: "module", path: './s2/util/math/mathutil.html', attributes: []},
{name: 's2.util.math.mathutil.realRootsForCubic', kind: "functiondeclaration", path: './s2/util/math/mathutil/realRootsForCubic.html', attributes: []},
{name: 's2.util.math.matrix3x3', kind: "module", path: './s2/util/math/matrix3x3.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3', kind: "structdeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3._m', kind: "variabledeclaration", path: './s2/util/math/matrix3x3/Matrix3x3._m.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.antiSym3', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.antiSym3.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.cofactorMatrixTransposed', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.cofactorMatrixTransposed.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.col', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.col.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.data', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.data.html', attributes: ["property", "ref"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.det', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.det.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.diagonal', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.diagonal.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.eigenValues', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.eigenValues.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.FloatT', kind: "aliasdeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.FloatT.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.frobeniusNorm', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.frobeniusNorm.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.fromCols', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.fromCols.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.fromRows', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.fromRows.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.identity', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.identity.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.inverse', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.inverse.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.isNaN', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.isNaN.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.mulBothSides', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.mulBothSides.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.opBinary', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opBinary.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.opBinaryRight', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opBinaryRight.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.opCast', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opCast.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.opEquals', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opEquals.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.opIndex', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opIndex.html', attributes: ["inout", "ref"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.opIndexAssign', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opIndexAssign.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.opOpAssign', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opOpAssign.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.opUnary', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.opUnary.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.orthogonalize', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.orthogonalize.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.project', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.project.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.rodrigues', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.rodrigues.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.row', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.row.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.set', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.set.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.setCol', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.setCol.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.setRow', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.setRow.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.sym3', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.sym3.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.symmetricEigenSolver', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.symmetricEigenSolver.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.this', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.this.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.ThisT', kind: "aliasdeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.ThisT.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.toString', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.toString.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.trace', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.trace.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.transpose', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.transpose.html', attributes: ["const"]},
{name: 's2.util.math.matrix3x3.Matrix3x3.VectorT', kind: "aliasdeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.VectorT.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3.zero', kind: "functiondeclaration", path: './s2/util/math/matrix3x3/Matrix3x3.zero.html', attributes: ["static"]},
{name: 's2.util.math.matrix3x3.Matrix3x3_d', kind: "aliasdeclaration", path: './s2/util/math/matrix3x3/Matrix3x3_d.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3_f', kind: "aliasdeclaration", path: './s2/util/math/matrix3x3/Matrix3x3_f.html', attributes: []},
{name: 's2.util.math.matrix3x3.Matrix3x3_i', kind: "aliasdeclaration", path: './s2/util/math/matrix3x3/Matrix3x3_i.html', attributes: []},
{name: 's2.util.math.s2const', kind: "module", path: './s2/util/math/s2const.html', attributes: []},
{name: 's2.util.math.s2const.M_PI', kind: "enummemberdeclaration", path: './s2/util/math/s2const/M_PI.html', attributes: []},
{name: 's2.util.math.s2const.M_PI_2', kind: "enummemberdeclaration", path: './s2/util/math/s2const/M_PI_2.html', attributes: []},
{name: 's2.util.math.s2const.M_PI_4', kind: "enummemberdeclaration", path: './s2/util/math/s2const/M_PI_4.html', attributes: []},
{name: 's2.util.math.s2const.M_SQRT1_2', kind: "enummemberdeclaration", path: './s2/util/math/s2const/M_SQRT1_2.html', attributes: []},
{name: 's2.util.math.s2const.M_SQRT2', kind: "enummemberdeclaration", path: './s2/util/math/s2const/M_SQRT2.html', attributes: []},
{name: 's2.util.math.vector', kind: "module", path: './s2/util/math/vector.html', attributes: []},
{name: 's2.util.math.vector.Vector', kind: "structdeclaration", path: './s2/util/math/vector/Vector.html', attributes: []},
{name: 's2.util.math.vector.Vector._data', kind: "variabledeclaration", path: './s2/util/math/vector/Vector._data.html', attributes: []},
{name: 's2.util.math.vector.Vector.abs', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.abs.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.aequal', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.aequal.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.angle', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.angle.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.ceil', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.ceil.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.clear', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.clear.html', attributes: []},
{name: 's2.util.math.vector.Vector.componentOrder', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.componentOrder.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.crossProd', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.crossProd.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.data', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.data.html', attributes: ["property", "ref"]},
{name: 's2.util.math.vector.Vector.dotProd', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.dotProd.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.fabs', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.fabs.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.FloatT', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector.FloatT.html', attributes: []},
{name: 's2.util.math.vector.Vector.floor', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.floor.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.from', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.from.html', attributes: []},
{name: 's2.util.math.vector.Vector.isNaN', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.isNaN.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.largestAbsComponent', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.largestAbsComponent.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.max', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.max.html', attributes: ["static"]},
{name: 's2.util.math.vector.Vector.min', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.min.html', attributes: ["static"]},
{name: 's2.util.math.vector.Vector.nan', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.nan.html', attributes: ["static"]},
{name: 's2.util.math.vector.Vector.norm', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.norm.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.norm2', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.norm2.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.normalize', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.normalize.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.opBinary', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opBinary.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.opBinaryRight', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opBinaryRight.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.opCmp', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opCmp.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.opEquals', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opEquals.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.opIndex', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opIndex.html', attributes: ["inout", "ref"]},
{name: 's2.util.math.vector.Vector.opIndexAssign', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opIndexAssign.html', attributes: []},
{name: 's2.util.math.vector.Vector.opOpAssign', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opOpAssign.html', attributes: []},
{name: 's2.util.math.vector.Vector.opUnary', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.opUnary.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.ortho', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.ortho.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.round', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.round.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.size', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.size.html', attributes: ["static"]},
{name: 's2.util.math.vector.Vector.sqrt', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.sqrt.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.this', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.this.html', attributes: []},
{name: 's2.util.math.vector.Vector.ThisT', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector.ThisT.html', attributes: []},
{name: 's2.util.math.vector.Vector.toHash', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.toHash.html', attributes: ["const", "nothrow", "safe"]},
{name: 's2.util.math.vector.Vector.toIntVector', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.toIntVector.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.toString', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.toString.html', attributes: ["const"]},
{name: 's2.util.math.vector.Vector.w', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.w.html', attributes: ["property"]},
{name: 's2.util.math.vector.Vector.x', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.x.html', attributes: ["property"]},
{name: 's2.util.math.vector.Vector.y', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.y.html', attributes: ["property"]},
{name: 's2.util.math.vector.Vector.z', kind: "functiondeclaration", path: './s2/util/math/vector/Vector.z.html', attributes: ["property"]},
{name: 's2.util.math.vector.Vector2', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector2.html', attributes: []},
{name: 's2.util.math.vector.Vector2_b', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector2_b.html', attributes: []},
{name: 's2.util.math.vector.Vector2_d', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector2_d.html', attributes: []},
{name: 's2.util.math.vector.Vector2_f', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector2_f.html', attributes: []},
{name: 's2.util.math.vector.Vector2_i', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector2_i.html', attributes: []},
{name: 's2.util.math.vector.Vector2_r', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector2_r.html', attributes: []},
{name: 's2.util.math.vector.Vector3', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector3.html', attributes: []},
{name: 's2.util.math.vector.Vector3_b', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector3_b.html', attributes: []},
{name: 's2.util.math.vector.Vector3_d', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector3_d.html', attributes: []},
{name: 's2.util.math.vector.Vector3_f', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector3_f.html', attributes: []},
{name: 's2.util.math.vector.Vector3_i', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector3_i.html', attributes: []},
{name: 's2.util.math.vector.Vector3_r', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector3_r.html', attributes: []},
{name: 's2.util.math.vector.Vector4', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector4.html', attributes: []},
{name: 's2.util.math.vector.Vector4_b', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector4_b.html', attributes: []},
{name: 's2.util.math.vector.Vector4_d', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector4_d.html', attributes: []},
{name: 's2.util.math.vector.Vector4_f', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector4_f.html', attributes: []},
{name: 's2.util.math.vector.Vector4_i', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector4_i.html', attributes: []},
{name: 's2.util.math.vector.Vector4_r', kind: "aliasdeclaration", path: './s2/util/math/vector/Vector4_r.html', attributes: []},
{name: 's2.id_set_lexicon', kind: "module", path: './s2/id_set_lexicon.html', attributes: []},
{name: 's2.id_set_lexicon.IdSetLexicon', kind: "classdeclaration", path: './s2/id_set_lexicon/IdSetLexicon.html', attributes: []},
{name: 's2.id_set_lexicon.IdSetLexicon.add', kind: "functiondeclaration", path: './s2/id_set_lexicon/IdSetLexicon.add.html', attributes: []},
{name: 's2.id_set_lexicon.IdSetLexicon.addSingleton', kind: "functiondeclaration", path: './s2/id_set_lexicon/IdSetLexicon.addSingleton.html', attributes: ["const"]},
{name: 's2.id_set_lexicon.IdSetLexicon.clear', kind: "functiondeclaration", path: './s2/id_set_lexicon/IdSetLexicon.clear.html', attributes: []},
{name: 's2.id_set_lexicon.IdSetLexicon.emptySetId', kind: "functiondeclaration", path: './s2/id_set_lexicon/IdSetLexicon.emptySetId.html', attributes: ["static"]},
{name: 's2.id_set_lexicon.IdSetLexicon.IdSet', kind: "aliasdeclaration", path: './s2/id_set_lexicon/IdSetLexicon.IdSet.html', attributes: []},
{name: 's2.id_set_lexicon.IdSetLexicon.idSet', kind: "functiondeclaration", path: './s2/id_set_lexicon/IdSetLexicon.idSet.html', attributes: ["const"]},
{name: 's2.id_set_lexicon.IdSetLexicon.Iterator', kind: "aliasdeclaration", path: './s2/id_set_lexicon/IdSetLexicon.Iterator.html', attributes: []},
{name: 's2.id_set_lexicon.IdSetLexicon.this', kind: "functiondeclaration", path: './s2/id_set_lexicon/IdSetLexicon.this.html', attributes: []},
{name: 's2.logger', kind: "module", path: './s2/logger.html', attributes: []},
{name: 's2.logger.logger', kind: "variabledeclaration", path: './s2/logger/logger.html', attributes: []},
{name: 's2.mutable_s2shape_index', kind: "module", path: './s2/mutable_s2shape_index.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex', kind: "classdeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.add', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.add.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.clear', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.clear.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.forceBuild', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.forceBuild.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.initialize', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.initialize.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.isFresh', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.isFresh.html', attributes: ["const"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator', kind: "classdeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.begin', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.begin.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.cell', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.cell.html', attributes: ["override", "inout"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.copy', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.copy.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.finish', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.finish.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.initialize', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.initialize.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.initStale', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.initStale.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.locate', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.locate.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.next', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.next.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.prev', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.prev.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.seek', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.seek.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.this', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.this.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.clone', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.clone.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Iterator.getCell', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Iterator.getCell.html', attributes: ["override", "const"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.minimize', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.minimize.html', attributes: ["override"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.numShapeIds', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.numShapeIds.html', attributes: ["override", "const"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Options', kind: "structdeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Options.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.Options.maxEdgesPerCell', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.Options.maxEdgesPerCell.html', attributes: ["property", "const"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.options', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.options.html', attributes: ["const"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.release', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.release.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.releaseAll', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.releaseAll.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.shape', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.shape.html', attributes: ["override", "inout"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.ShapeIdSet', kind: "aliasdeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.ShapeIdSet.html', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.spaceUsed', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.spaceUsed.html', attributes: ["override", "const"]},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.this', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.this.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.CellRelation', kind: "enumdeclaration", path: './s2/s2shape_index/S2ShapeIndex.CellRelation.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.CellRelation.DISJOINT', kind: "enummemberdeclaration", path: './s2/s2shape_index/S2ShapeIndex.CellRelation.html#DISJOINT', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.CellRelation.INDEXED', kind: "enummemberdeclaration", path: './s2/s2shape_index/S2ShapeIndex.CellRelation.html#INDEXED', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.CellRelation.SUBDIVIDED', kind: "enummemberdeclaration", path: './s2/s2shape_index/S2ShapeIndex.CellRelation.html#SUBDIVIDED', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.InitialPosition', kind: "enumdeclaration", path: './s2/s2shape_index/S2ShapeIndex.InitialPosition.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.InitialPosition.BEGIN', kind: "enummemberdeclaration", path: './s2/s2shape_index/S2ShapeIndex.InitialPosition.html#BEGIN', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.InitialPosition.END', kind: "enummemberdeclaration", path: './s2/s2shape_index/S2ShapeIndex.InitialPosition.html#END', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.InitialPosition.UNPOSITIONED', kind: "enummemberdeclaration", path: './s2/s2shape_index/S2ShapeIndex.InitialPosition.html#UNPOSITIONED', attributes: []},
{name: 's2.mutable_s2shape_index.MutableS2ShapeIndex.newIterator', kind: "functiondeclaration", path: './s2/mutable_s2shape_index/MutableS2ShapeIndex.newIterator.html', attributes: ["override"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase', kind: "classdeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.begin', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.begin.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.cell', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.cell.html', attributes: ["inout"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.center', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.center.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.copy', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.copy.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.done', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.done.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.finish', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.finish.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.id', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.id.html', attributes: ["property", "const"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.locate', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.locate.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.next', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.next.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.prev', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.prev.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.seek', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.seek.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.this', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.this.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.clone', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.clone.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.getCell', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.getCell.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.locateImpl', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.locateImpl.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.rawCell', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.rawCell.html', attributes: ["inout"]},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.setFinished', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.setFinished.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.IteratorBase.setState', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.IteratorBase.setState.html', attributes: []},
{name: 's2.mutable_s2shape_index.S2SHAPE_INDEX_CELL_SIZE_TO_LONG_EDGE_RATIO', kind: "enummemberdeclaration", path: './s2/mutable_s2shape_index/S2SHAPE_INDEX_CELL_SIZE_TO_LONG_EDGE_RATIO.html', attributes: []},
{name: 's2.mutable_s2shape_index.S2SHAPE_INDEX_DEFAULT_MAX_EDGES_PER_CELL', kind: "enummemberdeclaration", path: './s2/mutable_s2shape_index/S2SHAPE_INDEX_DEFAULT_MAX_EDGES_PER_CELL.html', attributes: []},
{name: 's2.mutable_s2shape_index.S2SHAPE_INDEX_TMP_MEMORY_BUDGET_MB', kind: "enummemberdeclaration", path: './s2/mutable_s2shape_index/S2SHAPE_INDEX_TMP_MEMORY_BUDGET_MB.html', attributes: []},
{name: 's2.r1interval', kind: "module", path: './s2/r1interval.html', attributes: []},
{name: 's2.r1interval.R1Interval', kind: "structdeclaration", path: './s2/r1interval/R1Interval.html', attributes: []},
{name: 's2.r1interval.R1Interval.addInterval', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.addInterval.html', attributes: []},
{name: 's2.r1interval.R1Interval.addPoint', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.addPoint.html', attributes: []},
{name: 's2.r1interval.R1Interval.approxEquals', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.approxEquals.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.bounds', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.bounds.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.contains', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.contains.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.empty', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.empty.html', attributes: ["static"]},
{name: 's2.r1interval.R1Interval.expanded', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.expanded.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.fromPoint', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.fromPoint.html', attributes: ["static"]},
{name: 's2.r1interval.R1Interval.fromPointPair', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.fromPointPair.html', attributes: ["static"]},
{name: 's2.r1interval.R1Interval.getCenter', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.getCenter.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.getDirectedHausdorffDistance', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.getDirectedHausdorffDistance.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.getLength', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.getLength.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.hi', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.hi.html', attributes: ["property", "const"]},
{name: 's2.r1interval.R1Interval.interiorContains', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.interiorContains.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.interiorIntersects', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.interiorIntersects.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.intersection', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.intersection.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.intersects', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.intersects.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.isEmpty', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.isEmpty.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.lo', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.lo.html', attributes: ["property", "const"]},
{name: 's2.r1interval.R1Interval.mutableBounds', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.mutableBounds.html', attributes: []},
{name: 's2.r1interval.R1Interval.opEquals', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.opEquals.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.opIndex', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.opIndex.html', attributes: ["ref", "inout"]},
{name: 's2.r1interval.R1Interval.opIndexAssign', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.opIndexAssign.html', attributes: []},
{name: 's2.r1interval.R1Interval.project', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.project.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.setHi', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.setHi.html', attributes: []},
{name: 's2.r1interval.R1Interval.setLo', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.setLo.html', attributes: []},
{name: 's2.r1interval.R1Interval.this', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.this.html', attributes: []},
{name: 's2.r1interval.R1Interval.toString', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.toString.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.unite', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.unite.html', attributes: ["const"]},
{name: 's2.r2point', kind: "module", path: './s2/r2point.html', attributes: []},
{name: 's2.r2point.R2Point', kind: "aliasdeclaration", path: './s2/r2point/R2Point.html', attributes: []},
{name: 's2.r2rect', kind: "module", path: './s2/r2rect.html', attributes: []},
{name: 's2.r2rect.R2Rect', kind: "structdeclaration", path: './s2/r2rect/R2Rect.html', attributes: []},
{name: 's2.r2rect.R2Rect.addPoint', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.addPoint.html', attributes: []},
{name: 's2.r2rect.R2Rect.addRect', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.addRect.html', attributes: []},
{name: 's2.r2rect.R2Rect.approxEquals', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.approxEquals.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.contains', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.contains.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.empty', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.empty.html', attributes: ["static"]},
{name: 's2.r2rect.R2Rect.expanded', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.expanded.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.fromCenterSize', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.fromCenterSize.html', attributes: ["static"]},
{name: 's2.r2rect.R2Rect.fromPoint', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.fromPoint.html', attributes: ["static"]},
{name: 's2.r2rect.R2Rect.fromPointPair', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.fromPointPair.html', attributes: ["static"]},
{name: 's2.r2rect.R2Rect.getCenter', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.getCenter.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.getSize', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.getSize.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.getVertex', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.getVertex.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.hi', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.hi.html', attributes: ["property", "const"]},
{name: 's2.r2rect.R2Rect.interiorContains', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.interiorContains.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.InteriorIntersects', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.InteriorIntersects.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.intersection', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.intersection.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.intersects', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.intersects.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.isEmpty', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.isEmpty.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.isValid', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.isValid.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.lo', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.lo.html', attributes: ["property", "const"]},
{name: 's2.r2rect.R2Rect.opEquals', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.opEquals.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.opIndex', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.opIndex.html', attributes: ["ref", "inout"]},
{name: 's2.r2rect.R2Rect.opIndexAssign', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.opIndexAssign.html', attributes: []},
{name: 's2.r2rect.R2Rect.Project', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.Project.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.this', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.this.html', attributes: []},
{name: 's2.r2rect.R2Rect.toString', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.toString.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.unite', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.unite.html', attributes: ["const"]},
{name: 's2.r2rect.R2Rect.x', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.x.html', attributes: ["property", "const"]},
{name: 's2.r2rect.R2Rect.y', kind: "functiondeclaration", path: './s2/r2rect/R2Rect.y.html', attributes: ["property", "const"]},
{name: 's2.s1angle', kind: "module", path: './s2/s1angle.html', attributes: []},
{name: 's2.s1angle.cos', kind: "functiondeclaration", path: './s2/s1angle/cos.html', attributes: []},
{name: 's2.s1angle.S1Angle', kind: "structdeclaration", path: './s2/s1angle/S1Angle.html', attributes: []},
{name: 's2.s1angle.S1Angle.abs', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.abs.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.degrees', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.degrees.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.e5', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.e5.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.e6', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.e6.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.e7', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.e7.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.fromDegrees', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromDegrees.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.fromE5', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromE5.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.fromE6', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromE6.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.fromE7', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromE7.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.fromRadians', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromRadians.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.fromUnsignedE6', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromUnsignedE6.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.fromUnsignedE7', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromUnsignedE7.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.infinity', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.infinity.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.normalize', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.normalize.html', attributes: []},
{name: 's2.s1angle.S1Angle.normalized', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.normalized.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.opBinary', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opBinary.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.opBinaryRight', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opBinaryRight.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.opCmp', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opCmp.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.opEquals', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opEquals.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.opOpAssign', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opOpAssign.html', attributes: []},
{name: 's2.s1angle.S1Angle.opUnary', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opUnary.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.radians', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.radians.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.this', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.this.html', attributes: []},
{name: 's2.s1angle.S1Angle.toString', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.toString.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.zero', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.zero.html', attributes: ["static"]},
{name: 's2.s1angle.sin', kind: "functiondeclaration", path: './s2/s1angle/sin.html', attributes: []},
{name: 's2.s1angle.tan', kind: "functiondeclaration", path: './s2/s1angle/tan.html', attributes: []},
{name: 's2.s1chord_angle', kind: "module", path: './s2/s1chord_angle.html', attributes: []},
{name: 's2.s1chord_angle.S1ChordAngle', kind: "structdeclaration", path: './s2/s1chord_angle/S1ChordAngle.html', attributes: []},
{name: 's2.s1chord_angle.S1ChordAngle.cos', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.cos.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.degrees', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.degrees.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.e5', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.e5.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.e6', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.e6.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.e7', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.e7.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.fastUpperBoundFrom', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.fastUpperBoundFrom.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.fromDegrees', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.fromDegrees.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.fromE5', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.fromE5.html', attributes: []},
{name: 's2.s1chord_angle.S1ChordAngle.fromE6', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.fromE6.html', attributes: []},
{name: 's2.s1chord_angle.S1ChordAngle.fromE7', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.fromE7.html', attributes: []},
{name: 's2.s1chord_angle.S1ChordAngle.fromLength2', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.fromLength2.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.fromRadians', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.fromRadians.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.getS1AngleConstructorMaxError', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.getS1AngleConstructorMaxError.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.getS2PointConstructorMaxError', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.getS2PointConstructorMaxError.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.infinity', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.infinity.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.isInfinity', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.isInfinity.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.isNegative', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.isNegative.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.isSpecial', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.isSpecial.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.isValid', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.isValid.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.isZero', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.isZero.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.length2', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.length2.html', attributes: ["property", "const"]},
{name: 's2.s1chord_angle.S1ChordAngle.negative', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.negative.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.opBinary', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.opBinary.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.opCmp', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.opCmp.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.opEquals', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.opEquals.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.opOpAssign', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.opOpAssign.html', attributes: []},
{name: 's2.s1chord_angle.S1ChordAngle.plusError', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.plusError.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.predecessor', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.predecessor.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.radians', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.radians.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.right', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.right.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.sin', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.sin.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.sin2', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.sin2.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.straight', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.straight.html', attributes: ["static"]},
{name: 's2.s1chord_angle.S1ChordAngle.successor', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.successor.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.tan', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.tan.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.this', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.this.html', attributes: []},
{name: 's2.s1chord_angle.S1ChordAngle.toS1Angle', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.toS1Angle.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.toString', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.toString.html', attributes: ["const"]},
{name: 's2.s1chord_angle.S1ChordAngle.zero', kind: "functiondeclaration", path: './s2/s1chord_angle/S1ChordAngle.zero.html', attributes: ["static"]},
{name: 's2.s1interval', kind: "module", path: './s2/s1interval.html', attributes: []},
{name: 's2.s1interval.S1Interval', kind: "structdeclaration", path: './s2/s1interval/S1Interval.html', attributes: []},
{name: 's2.s1interval.S1Interval.addPoint', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.addPoint.html', attributes: []},
{name: 's2.s1interval.S1Interval.approxEquals', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.approxEquals.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.bounds', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.bounds.html', attributes: ["property", "const"]},
{name: 's2.s1interval.S1Interval.complement', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.complement.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.contains', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.contains.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.empty', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.empty.html', attributes: ["static"]},
{name: 's2.s1interval.S1Interval.expanded', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.expanded.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.fromPoint', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.fromPoint.html', attributes: ["static"]},
{name: 's2.s1interval.S1Interval.fromPointPair', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.fromPointPair.html', attributes: ["static"]},
{name: 's2.s1interval.S1Interval.full', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.full.html', attributes: ["static"]},
{name: 's2.s1interval.S1Interval.getCenter', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.getCenter.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.getComplementCenter', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.getComplementCenter.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.getDirectedHausdorffDistance', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.getDirectedHausdorffDistance.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.getLength', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.getLength.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.hi', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.hi.html', attributes: ["property", "const"]},
{name: 's2.s1interval.S1Interval.interiorContains', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.interiorContains.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.interiorIntersects', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.interiorIntersects.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.intersection', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.intersection.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.intersects', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.intersects.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.isEmpty', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.isEmpty.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.isFull', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.isFull.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.isInverted', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.isInverted.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.isValid', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.isValid.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.lo', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.lo.html', attributes: ["property", "const"]},
{name: 's2.s1interval.S1Interval.opEquals', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.opEquals.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.opIndex', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.opIndex.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.project', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.project.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.setHi', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.setHi.html', attributes: []},
{name: 's2.s1interval.S1Interval.setLo', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.setLo.html', attributes: []},
{name: 's2.s1interval.S1Interval.this', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.this.html', attributes: []},
{name: 's2.s1interval.S1Interval.toString', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.toString.html', attributes: ["const"]},
{name: 's2.s1interval.S1Interval.unite', kind: "functiondeclaration", path: './s2/s1interval/S1Interval.unite.html', attributes: ["const"]},
{name: 's2.s2boolean_operation', kind: "module", path: './s2/s2boolean_operation.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingGraphEdge', kind: "structdeclaration", path: './s2/s2boolean_operation/CrossingGraphEdge.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingGraphEdge.aIndex', kind: "variabledeclaration", path: './s2/s2boolean_operation/CrossingGraphEdge.aIndex.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingGraphEdge.dst', kind: "variabledeclaration", path: './s2/s2boolean_operation/CrossingGraphEdge.dst.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingGraphEdge.id', kind: "variabledeclaration", path: './s2/s2boolean_operation/CrossingGraphEdge.id.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingGraphEdge.outgoing', kind: "variabledeclaration", path: './s2/s2boolean_operation/CrossingGraphEdge.outgoing.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingGraphEdgeVector', kind: "aliasdeclaration", path: './s2/s2boolean_operation/CrossingGraphEdgeVector.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingInputEdge', kind: "structdeclaration", path: './s2/s2boolean_operation/CrossingInputEdge.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingInputEdge.inputId', kind: "functiondeclaration", path: './s2/s2boolean_operation/CrossingInputEdge.inputId.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.CrossingInputEdge.leftToRight', kind: "functiondeclaration", path: './s2/s2boolean_operation/CrossingInputEdge.leftToRight.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.CrossingInputEdge.opCmp', kind: "functiondeclaration", path: './s2/s2boolean_operation/CrossingInputEdge.opCmp.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.CrossingInputEdge.this', kind: "functiondeclaration", path: './s2/s2boolean_operation/CrossingInputEdge.this.html', attributes: []},
{name: 's2.s2boolean_operation.CrossingInputEdge.toString', kind: "functiondeclaration", path: './s2/s2boolean_operation/CrossingInputEdge.toString.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.DegenerateEdges', kind: "aliasdeclaration", path: './s2/s2boolean_operation/DegenerateEdges.html', attributes: []},
{name: 's2.s2boolean_operation.DuplicateEdges', kind: "aliasdeclaration", path: './s2/s2boolean_operation/DuplicateEdges.html', attributes: []},
{name: 's2.s2boolean_operation.EdgeClippingLayer', kind: "classdeclaration", path: './s2/s2boolean_operation/EdgeClippingLayer.html', attributes: []},
{name: 's2.s2boolean_operation.EdgeClippingLayer.build', kind: "functiondeclaration", path: './s2/s2boolean_operation/EdgeClippingLayer.build.html', attributes: ["override"]},
{name: 's2.s2boolean_operation.EdgeClippingLayer.graphOptions', kind: "functiondeclaration", path: './s2/s2boolean_operation/EdgeClippingLayer.graphOptions.html', attributes: ["override", "const"]},
{name: 's2.s2boolean_operation.EdgeClippingLayer.this', kind: "functiondeclaration", path: './s2/s2boolean_operation/EdgeClippingLayer.this.html', attributes: []},
{name: 's2.s2boolean_operation.EdgeClippingLayer.toString', kind: "functiondeclaration", path: './s2/s2boolean_operation/EdgeClippingLayer.toString.html', attributes: ["override", "const"]},
{name: 's2.s2boolean_operation.EdgeId', kind: "aliasdeclaration", path: './s2/s2boolean_operation/EdgeId.html', attributes: []},
{name: 's2.s2boolean_operation.EdgeType', kind: "aliasdeclaration", path: './s2/s2boolean_operation/EdgeType.html', attributes: []},
{name: 's2.s2boolean_operation.GraphEdgeClipper', kind: "classdeclaration", path: './s2/s2boolean_operation/GraphEdgeClipper.html', attributes: []},
{name: 's2.s2boolean_operation.GraphEdgeClipper.run', kind: "functiondeclaration", path: './s2/s2boolean_operation/GraphEdgeClipper.run.html', attributes: []},
{name: 's2.s2boolean_operation.GraphEdgeClipper.this', kind: "functiondeclaration", path: './s2/s2boolean_operation/GraphEdgeClipper.this.html', attributes: []},
{name: 's2.s2boolean_operation.InputEdgeCrossings', kind: "aliasdeclaration", path: './s2/s2boolean_operation/InputEdgeCrossings.html', attributes: []},
{name: 's2.s2boolean_operation.InputEdgeId', kind: "aliasdeclaration", path: './s2/s2boolean_operation/InputEdgeId.html', attributes: []},
{name: 's2.s2boolean_operation.InputEdgeIdSetId', kind: "aliasdeclaration", path: './s2/s2boolean_operation/InputEdgeIdSetId.html', attributes: []},
{name: 's2.s2boolean_operation.PolygonModel', kind: "aliasdeclaration", path: './s2/s2boolean_operation/PolygonModel.html', attributes: []},
{name: 's2.s2boolean_operation.PolylineModel', kind: "aliasdeclaration", path: './s2/s2boolean_operation/PolylineModel.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation', kind: "classdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.build', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.build.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.contains', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.contains.html', attributes: ["static"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.equals', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.equals.html', attributes: ["static"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.intersects', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.intersects.html', attributes: ["static"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.isEmpty', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.isEmpty.html', attributes: ["static"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options', kind: "classdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.conservativeOutput', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.conservativeOutput.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.polygonModel', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.polygonModel.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.polylineModel', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.polylineModel.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.precision', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.precision.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.setConservativeOutput', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.setConservativeOutput.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.setPolygonModel', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.setPolygonModel.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.setPolylineModel', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.setPolylineModel.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.setPrecision', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.setPrecision.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.setSnapFunction', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.setSnapFunction.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.setSourceIdLexicon', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.setSourceIdLexicon.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.snapFunction', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.snapFunction.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.sourceIdLexicon', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.sourceIdLexicon.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.Options.this', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Options.this.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.OpType', kind: "enumdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.OpType.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.OpType.DIFFERENCE', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.OpType.html#DIFFERENCE', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.OpType.INTERSECTION', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.OpType.html#INTERSECTION', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.OpType.SYMMETRIC_DIFFERENCE', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.OpType.html#SYMMETRIC_DIFFERENCE', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.OpType.UNION', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.OpType.html#UNION', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.opType', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.opType.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolygonModel', kind: "enumdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolygonModel.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolygonModel.CLOSED', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolygonModel.html#CLOSED', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolygonModel.OPEN', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolygonModel.html#OPEN', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolygonModel.SEMI_OPEN', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolygonModel.html#SEMI_OPEN', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolylineModel', kind: "enumdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolylineModel.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolylineModel.CLOSED', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolylineModel.html#CLOSED', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolylineModel.OPEN', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolylineModel.html#OPEN', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.PolylineModel.SEMI_OPEN', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.PolylineModel.html#SEMI_OPEN', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Precision', kind: "enumdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Precision.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Precision.EXACT', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Precision.html#EXACT', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.Precision.SNAPPED', kind: "enummemberdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.Precision.html#SNAPPED', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId', kind: "structdeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId.edgeId', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.edgeId.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId.opCmp', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.opCmp.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId.opEquals', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.opEquals.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId.regionId', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.regionId.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId.shapeId', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.shapeId.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId.this', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.this.html', attributes: []},
{name: 's2.s2boolean_operation.S2BooleanOperation.SourceId.toString', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.SourceId.toString.html', attributes: ["const"]},
{name: 's2.s2boolean_operation.S2BooleanOperation.this', kind: "functiondeclaration", path: './s2/s2boolean_operation/S2BooleanOperation.this.html', attributes: []},
{name: 's2.s2boolean_operation.SiblingPairs', kind: "aliasdeclaration", path: './s2/s2boolean_operation/SiblingPairs.html', attributes: []},
{name: 's2.s2boolean_operation.SnapFunction', kind: "aliasdeclaration", path: './s2/s2boolean_operation/SnapFunction.html', attributes: []},
{name: 's2.s2boolean_operation.VertexId', kind: "aliasdeclaration", path: './s2/s2boolean_operation/VertexId.html', attributes: []},
{name: 's2.s2builder', kind: "module", path: './s2/s2builder.html', attributes: []},
{name: 's2.s2builder.EdgeChainSimplifier', kind: "classdeclaration", path: './s2/s2builder/EdgeChainSimplifier.html', attributes: []},
{name: 's2.s2builder.EdgeChainSimplifier.Edge', kind: "aliasdeclaration", path: './s2/s2builder/EdgeChainSimplifier.Edge.html', attributes: []},
{name: 's2.s2builder.EdgeChainSimplifier.InputEdgeIdSetId', kind: "aliasdeclaration", path: './s2/s2builder/EdgeChainSimplifier.InputEdgeIdSetId.html', attributes: []},
{name: 's2.s2builder.EdgeChainSimplifier.InputVertexId', kind: "aliasdeclaration", path: './s2/s2builder/EdgeChainSimplifier.InputVertexId.html', attributes: []},
{name: 's2.s2builder.EdgeChainSimplifier.run', kind: "functiondeclaration", path: './s2/s2builder/EdgeChainSimplifier.run.html', attributes: []},
{name: 's2.s2builder.EdgeChainSimplifier.this', kind: "functiondeclaration", path: './s2/s2builder/EdgeChainSimplifier.this.html', attributes: []},
{name: 's2.s2builder.GraphOptions', kind: "classdeclaration", path: './s2/s2builder/GraphOptions.html', attributes: []},
{name: 's2.s2builder.GraphOptions.allowVertexFiltering', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.allowVertexFiltering.html', attributes: ["const"]},
{name: 's2.s2builder.GraphOptions.DegenerateEdges', kind: "enumdeclaration", path: './s2/s2builder/GraphOptions.DegenerateEdges.html', attributes: []},
{name: 's2.s2builder.GraphOptions.DegenerateEdges.DISCARD', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.DegenerateEdges.html#DISCARD', attributes: []},
{name: 's2.s2builder.GraphOptions.DegenerateEdges.DISCARD_EXCESS', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.DegenerateEdges.html#DISCARD_EXCESS', attributes: []},
{name: 's2.s2builder.GraphOptions.DegenerateEdges.KEEP', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.DegenerateEdges.html#KEEP', attributes: []},
{name: 's2.s2builder.GraphOptions.degenerateEdges', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.degenerateEdges.html', attributes: ["const"]},
{name: 's2.s2builder.GraphOptions.DuplicateEdges', kind: "enumdeclaration", path: './s2/s2builder/GraphOptions.DuplicateEdges.html', attributes: []},
{name: 's2.s2builder.GraphOptions.DuplicateEdges.KEEP', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.DuplicateEdges.html#KEEP', attributes: []},
{name: 's2.s2builder.GraphOptions.DuplicateEdges.MERGE', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.DuplicateEdges.html#MERGE', attributes: []},
{name: 's2.s2builder.GraphOptions.duplicateEdges', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.duplicateEdges.html', attributes: ["const"]},
{name: 's2.s2builder.GraphOptions.EdgeType', kind: "aliasdeclaration", path: './s2/s2builder/GraphOptions.EdgeType.html', attributes: []},
{name: 's2.s2builder.GraphOptions.edgeType', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.edgeType.html', attributes: ["const"]},
{name: 's2.s2builder.GraphOptions.opEquals', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.opEquals.html', attributes: ["override", "const"]},
{name: 's2.s2builder.GraphOptions.setAllowVertexFiltering', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.setAllowVertexFiltering.html', attributes: []},
{name: 's2.s2builder.GraphOptions.setDegenerateEdges', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.setDegenerateEdges.html', attributes: []},
{name: 's2.s2builder.GraphOptions.setDuplicateEdges', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.setDuplicateEdges.html', attributes: []},
{name: 's2.s2builder.GraphOptions.setEdgeType', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.setEdgeType.html', attributes: []},
{name: 's2.s2builder.GraphOptions.setSiblingPairs', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.setSiblingPairs.html', attributes: []},
{name: 's2.s2builder.GraphOptions.SiblingPairs', kind: "enumdeclaration", path: './s2/s2builder/GraphOptions.SiblingPairs.html', attributes: []},
{name: 's2.s2builder.GraphOptions.SiblingPairs.CREATE', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.SiblingPairs.html#CREATE', attributes: []},
{name: 's2.s2builder.GraphOptions.SiblingPairs.DISCARD', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.SiblingPairs.html#DISCARD', attributes: []},
{name: 's2.s2builder.GraphOptions.SiblingPairs.DISCARD_EXCESS', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.SiblingPairs.html#DISCARD_EXCESS', attributes: []},
{name: 's2.s2builder.GraphOptions.SiblingPairs.KEEP', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.SiblingPairs.html#KEEP', attributes: []},
{name: 's2.s2builder.GraphOptions.SiblingPairs.REQUIRE', kind: "enummemberdeclaration", path: './s2/s2builder/GraphOptions.SiblingPairs.html#REQUIRE', attributes: []},
{name: 's2.s2builder.GraphOptions.siblingPairs', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.siblingPairs.html', attributes: ["const"]},
{name: 's2.s2builder.GraphOptions.this', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.this.html', attributes: []},
{name: 's2.s2builder.S2Builder', kind: "classdeclaration", path: './s2/s2builder/S2Builder.html', attributes: []},
{name: 's2.s2builder.S2Builder.addEdge', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addEdge.html', attributes: []},
{name: 's2.s2builder.S2Builder.addIsFullPolygonPredicate', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addIsFullPolygonPredicate.html', attributes: []},
{name: 's2.s2builder.S2Builder.addLoop', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addLoop.html', attributes: []},
{name: 's2.s2builder.S2Builder.addPoint', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addPoint.html', attributes: []},
{name: 's2.s2builder.S2Builder.addPolygon', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addPolygon.html', attributes: []},
{name: 's2.s2builder.S2Builder.addPolyline', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addPolyline.html', attributes: []},
{name: 's2.s2builder.S2Builder.addShape', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addShape.html', attributes: []},
{name: 's2.s2builder.S2Builder.build', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.build.html', attributes: []},
{name: 's2.s2builder.S2Builder.clearLabels', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.clearLabels.html', attributes: []},
{name: 's2.s2builder.S2Builder.EdgeType', kind: "enumdeclaration", path: './s2/s2builder/S2Builder.EdgeType.html', attributes: []},
{name: 's2.s2builder.S2Builder.EdgeType.DIRECTED', kind: "enummemberdeclaration", path: './s2/s2builder/S2Builder.EdgeType.html#DIRECTED', attributes: []},
{name: 's2.s2builder.S2Builder.EdgeType.UNDIRECTED', kind: "enummemberdeclaration", path: './s2/s2builder/S2Builder.EdgeType.html#UNDIRECTED', attributes: []},
{name: 's2.s2builder.S2Builder.forceVertex', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.forceVertex.html', attributes: []},
{name: 's2.s2builder.S2Builder.initialize', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.initialize.html', attributes: []},
{name: 's2.s2builder.S2Builder.InputEdgeId', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.InputEdgeId.html', attributes: []},
{name: 's2.s2builder.S2Builder.InputEdgeIdSetId', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.InputEdgeIdSetId.html', attributes: []},
{name: 's2.s2builder.S2Builder.InputVertexId', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.InputVertexId.html', attributes: []},
{name: 's2.s2builder.S2Builder.IsFullPolygonPredicate', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.IsFullPolygonPredicate.html', attributes: []},
{name: 's2.s2builder.S2Builder.Label', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.Label.html', attributes: []},
{name: 's2.s2builder.S2Builder.LabelSetId', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.LabelSetId.html', attributes: []},
{name: 's2.s2builder.S2Builder.Options', kind: "classdeclaration", path: './s2/s2builder/S2Builder.Options.html', attributes: []},
{name: 's2.s2builder.S2Builder.Options.idempotent', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.idempotent.html', attributes: ["const"]},
{name: 's2.s2builder.S2Builder.Options.setIdempotent', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.setIdempotent.html', attributes: []},
{name: 's2.s2builder.S2Builder.Options.setSimplifyEdgeChains', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.setSimplifyEdgeChains.html', attributes: []},
{name: 's2.s2builder.S2Builder.Options.setSnapFunction', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.setSnapFunction.html', attributes: []},
{name: 's2.s2builder.S2Builder.Options.setSplitCrossingEdges', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.setSplitCrossingEdges.html', attributes: []},
{name: 's2.s2builder.S2Builder.Options.simplifyEdgeChains', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.simplifyEdgeChains.html', attributes: ["const"]},
{name: 's2.s2builder.S2Builder.Options.snapFunction', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.snapFunction.html', attributes: ["const"]},
{name: 's2.s2builder.S2Builder.Options.splitCrossingEdges', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.splitCrossingEdges.html', attributes: ["const"]},
{name: 's2.s2builder.S2Builder.Options.this', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.Options.this.html', attributes: []},
{name: 's2.s2builder.S2Builder.options', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.options.html', attributes: ["const"]},
{name: 's2.s2builder.S2Builder.popLabel', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.popLabel.html', attributes: []},
{name: 's2.s2builder.S2Builder.pushLabel', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.pushLabel.html', attributes: []},
{name: 's2.s2builder.S2Builder.reset', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.reset.html', attributes: []},
{name: 's2.s2builder.S2Builder.setLabel', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.setLabel.html', attributes: []},
{name: 's2.s2builder.S2Builder.SnapFunction', kind: "classdeclaration", path: './s2/s2builder/S2Builder.SnapFunction.html', attributes: []},
{name: 's2.s2builder.S2Builder.SnapFunction.clone', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.clone.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.minEdgeVertexSeparation', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.minEdgeVertexSeparation.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.minVertexSeparation', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.minVertexSeparation.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.snapPoint', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.snapPoint.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.snapRadius', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.snapRadius.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.startLayer', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.startLayer.html', attributes: []},
{name: 's2.s2builder.S2Builder.this', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.this.html', attributes: []},
{name: 's2.s2builder.s2builderVerbose', kind: "variabledeclaration", path: './s2/s2builder/s2builderVerbose.html', attributes: []},
{name: 's2.s2builder.VertexIdEdgeVectorShape', kind: "classdeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.html', attributes: []},
{name: 's2.s2builder.VertexIdEdgeVectorShape.chain', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.chainEdge', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.chainPosition', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.dimension', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.edge', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.numChains', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.numEdges', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.this', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.this.html', attributes: []},
{name: 's2.s2builder.VertexIdEdgeVectorShape.vertex0', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.vertex0.html', attributes: ["const"]},
{name: 's2.s2builder.VertexIdEdgeVectorShape.vertex1', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.vertex1.html', attributes: ["const"]},
{name: 's2.s2shape.S2Shape.Chain', kind: "structdeclaration", path: './s2/s2shape/S2Shape.Chain.html', attributes: []},
{name: 's2.s2shape.S2Shape.Chain.length', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.Chain.length.html', attributes: []},
{name: 's2.s2shape.S2Shape.Chain.start', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.Chain.start.html', attributes: []},
{name: 's2.s2shape.S2Shape.ChainPosition', kind: "structdeclaration", path: './s2/s2shape/S2Shape.ChainPosition.html', attributes: []},
{name: 's2.s2shape.S2Shape.ChainPosition.chainId', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.ChainPosition.chainId.html', attributes: []},
{name: 's2.s2shape.S2Shape.ChainPosition.offset', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.ChainPosition.offset.html', attributes: []},
{name: 's2.s2shape.S2Shape.Edge', kind: "structdeclaration", path: './s2/s2shape/S2Shape.Edge.html', attributes: []},
{name: 's2.s2shape.S2Shape.Edge.opCmp', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.Edge.opCmp.html', attributes: ["const"]},
{name: 's2.s2shape.S2Shape.Edge.opEquals', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.Edge.opEquals.html', attributes: ["const"]},
{name: 's2.s2shape.S2Shape.Edge.v0', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.Edge.v0.html', attributes: []},
{name: 's2.s2shape.S2Shape.Edge.v1', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.Edge.v1.html', attributes: []},
{name: 's2.s2shape.S2Shape.hasInterior', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.hasInterior.html', attributes: ["const"]},
{name: 's2.s2shape.S2Shape.id', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.id.html', attributes: ["const"]},
{name: 's2.s2shape.S2Shape.mutableUserData', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.mutableUserData.html', attributes: []},
{name: 's2.s2shape.S2Shape.ReferencePoint', kind: "structdeclaration", path: './s2/s2shape/S2Shape.ReferencePoint.html', attributes: []},
{name: 's2.s2shape.S2Shape.ReferencePoint.contained', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.ReferencePoint.contained.html', attributes: []},
{name: 's2.s2shape.S2Shape.ReferencePoint.point', kind: "variabledeclaration", path: './s2/s2shape/S2Shape.ReferencePoint.point.html', attributes: []},
{name: 's2.s2shape.S2Shape.ReferencePoint.this', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.ReferencePoint.this.html', attributes: []},
{name: 's2.s2shape.S2Shape.userData', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.userData.html', attributes: ["const"]},
{name: 's2.s2cap', kind: "module", path: './s2/s2cap.html', attributes: []},
{name: 's2.s2cap.S2Cap', kind: "classdeclaration", path: './s2/s2cap/S2Cap.html', attributes: []},
{name: 's2.s2cap.S2Cap.addCap', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.addCap.html', attributes: []},
{name: 's2.s2cap.S2Cap.addPoint', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.addPoint.html', attributes: []},
{name: 's2.s2cap.S2Cap.approxEquals', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.approxEquals.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.center', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.center.html', attributes: ["property", "const"]},
{name: 's2.s2cap.S2Cap.clone', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.clone.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.complement', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.complement.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.contains', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.contains.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.decode', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.decode.html', attributes: []},
{name: 's2.s2cap.S2Cap.empty', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.empty.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.encode', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.encode.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.expanded', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.expanded.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.fromCenterArea', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.fromCenterArea.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.fromCenterHeight', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.fromCenterHeight.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.fromPoint', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.fromPoint.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.full', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.full.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.getArea', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getArea.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.getCapBound', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getCapBound.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2cap.S2Cap.getCentroid', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getCentroid.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.getRadius', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getRadius.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.getRectBound', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getRectBound.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.height', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.height.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.interiorContains', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.interiorContains.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.interiorIntersects', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.interiorIntersects.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.intersects', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.intersects.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.isEmpty', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.isEmpty.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.isFull', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.isFull.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.isValid', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.isValid.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.mayIntersect', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.mayIntersect.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.opEquals', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.opEquals.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.radius', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.radius.html', attributes: ["property", "const"]},
{name: 's2.s2cap.S2Cap.this', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.this.html', attributes: []},
{name: 's2.s2cap.S2Cap.toString', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.toString.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.unite', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.unite.html', attributes: ["const"]},
{name: 's2.s2region.S2Region.clone', kind: "functiondeclaration", path: './s2/s2region/S2Region.clone.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.contains', kind: "functiondeclaration", path: './s2/s2region/S2Region.contains.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.getCapBound', kind: "functiondeclaration", path: './s2/s2region/S2Region.getCapBound.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.getRectBound', kind: "functiondeclaration", path: './s2/s2region/S2Region.getRectBound.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.mayIntersect', kind: "functiondeclaration", path: './s2/s2region/S2Region.mayIntersect.html', attributes: ["abstract"]},
{name: 's2.s2cell', kind: "module", path: './s2/s2cell.html', attributes: []},
{name: 's2.s2cell.S2Cell', kind: "classdeclaration", path: './s2/s2cell/S2Cell.html', attributes: []},
{name: 's2.s2cell.S2Cell.approxArea', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.approxArea.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.averageArea', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.averageArea.html', attributes: ["static"]},
{name: 's2.s2cell.S2Cell.clone', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.clone.html', attributes: ["override", "const"]},
{name: 's2.s2cell.S2Cell.contains', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.contains.html', attributes: ["override", "const"]},
{name: 's2.s2cell.S2Cell.decode', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.decode.html', attributes: []},
{name: 's2.s2cell.S2Cell.encode', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.encode.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.exactArea', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.exactArea.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.face', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.face.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.fromFace', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.fromFace.html', attributes: ["static"]},
{name: 's2.s2cell.S2Cell.fromFacePosLevel', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.fromFacePosLevel.html', attributes: ["static"]},
{name: 's2.s2cell.S2Cell.getBoundaryDistance', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getBoundaryDistance.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getBoundUV', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getBoundUV.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getCapBound', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getCapBound.html', attributes: ["override", "const"]},
{name: 's2.s2cell.S2Cell.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2cell.S2Cell.getCenter', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getCenter.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getCenterRaw', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getCenterRaw.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getDistance', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getDistance.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getEdge', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getEdge.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getEdgeRaw', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getEdgeRaw.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getMaxDistance', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getMaxDistance.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getRectBound', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getRectBound.html', attributes: ["override", "const"]},
{name: 's2.s2cell.S2Cell.getSizeIJ', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getSizeIJ.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getSizeST', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getSizeST.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getVertex', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getVertex.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getVertexRaw', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getVertexRaw.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.id', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.id.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.initFromS2CellId', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.initFromS2CellId.html', attributes: []},
{name: 's2.s2cell.S2Cell.isLeaf', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.isLeaf.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.level', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.level.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.mayIntersect', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.mayIntersect.html', attributes: ["override", "const"]},
{name: 's2.s2cell.S2Cell.opCmp', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.opCmp.html', attributes: ["override"]},
{name: 's2.s2cell.S2Cell.opEquals', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.opEquals.html', attributes: ["override"]},
{name: 's2.s2cell.S2Cell.orientation', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.orientation.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.subdivide', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.subdivide.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.this', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.this.html', attributes: []},
{name: 's2.s2cell.S2Cell.toString', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.toString.html', attributes: ["override", "const"]},
{name: 's2.s2cell_id', kind: "module", path: './s2/s2cell_id.html', attributes: []},
{name: 's2.s2cell_id.S2CellId', kind: "structdeclaration", path: './s2/s2cell_id/S2CellId.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.advance', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.advance.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.advanceWrap', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.advanceWrap.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.appendAllNeighbors', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.appendAllNeighbors.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.appendVertexNeighbors', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.appendVertexNeighbors.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.begin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.begin.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.child', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.child.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.childBegin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.childBegin.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.childEnd', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.childEnd.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.childPosition', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.childPosition.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.contains', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.contains.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.decode', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.decode.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.distanceFromBegin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.distanceFromBegin.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.encode', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.encode.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.end', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.end.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.expandedByDistanceUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.expandedByDistanceUV.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.face', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.face.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.FACE_BITS', kind: "variabledeclaration", path: './s2/s2cell_id/S2CellId.FACE_BITS.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.fromDebugString', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromDebugString.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.fromFace', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromFace.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.fromFaceIJ', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromFaceIJ.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.fromFacePosLevel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromFacePosLevel.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.fromToken', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromToken.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.getBoundST', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getBoundST.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getBoundUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getBoundUV.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCenterSiTi', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCenterSiTi.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCenterST', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCenterST.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCenterUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCenterUV.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCommonAncestorLevel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCommonAncestorLevel.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getEdgeNeighbors', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getEdgeNeighbors.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getSizeIJ', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getSizeIJ.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getSizeST', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getSizeST.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.id', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.id.html', attributes: ["property", "const"]},
{name: 's2.s2cell_id.S2CellId.IJLevelToBoundUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.IJLevelToBoundUV.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.intersects', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.intersects.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.isFace', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.isFace.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.isLeaf', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.isLeaf.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.isValid', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.isValid.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.level', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.level.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.lsb', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.lsb.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.lsbForLevel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.lsbForLevel.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.MAX_LEVEL', kind: "variabledeclaration", path: './s2/s2cell_id/S2CellId.MAX_LEVEL.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.MAX_SIZE', kind: "variabledeclaration", path: './s2/s2cell_id/S2CellId.MAX_SIZE.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.maximumTile', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.maximumTile.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.next', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.next.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.nextWrap', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.nextWrap.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.none', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.none.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.NUM_FACES', kind: "variabledeclaration", path: './s2/s2cell_id/S2CellId.NUM_FACES.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.opCmp', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.opCmp.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.opEquals', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.opEquals.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.parent', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.parent.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.pos', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.pos.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.POS_BITS', kind: "variabledeclaration", path: './s2/s2cell_id/S2CellId.POS_BITS.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.prev', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.prev.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.prevWrap', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.prevWrap.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.rangeMax', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.rangeMax.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.rangeMin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.rangeMin.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.sentinel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.sentinel.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.this', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.this.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.toFaceIJOrientation', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toFaceIJOrientation.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toHash', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toHash.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 's2.s2cell_id.S2CellId.toLatLng', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toLatLng.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toS2Point', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toS2Point.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toS2PointRaw', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toS2PointRaw.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toString', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toString.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toToken', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toToken.html', attributes: ["const"]},
{name: 's2.s2cell_union', kind: "module", path: './s2/s2cell_union.html', attributes: []},
{name: 's2.s2cell_union.CURRENT_LOSSLESS_ENCODING_VERSION_NUMBER', kind: "enummemberdeclaration", path: './s2/s2cell_union/CURRENT_LOSSLESS_ENCODING_VERSION_NUMBER.html', attributes: []},
{name: 's2.s2cell_union.S2CELL_UNION_DECODE_MAX_NUM_CELLS', kind: "enummemberdeclaration", path: './s2/s2cell_union/S2CELL_UNION_DECODE_MAX_NUM_CELLS.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion', kind: "classdeclaration", path: './s2/s2cell_union/S2CellUnion.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.approxArea', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.approxArea.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.areSiblings', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.areSiblings.html', attributes: ["static"]},
{name: 's2.s2cell_union.S2CellUnion.averageBasedArea', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.averageBasedArea.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.begin', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.begin.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.cellId', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.cellId.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.cellIds', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.cellIds.html', attributes: ["inout"]},
{name: 's2.s2cell_union.S2CellUnion.clear', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.clear.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.clone', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.clone.html', attributes: ["override"]},
{name: 's2.s2cell_union.S2CellUnion.contains', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.contains.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.decode', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.decode.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.denormalize', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.denormalize.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.difference', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.difference.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.empty', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.empty.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.encode', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.encode.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.end', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.end.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.ExactArea', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.ExactArea.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.expand', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.expand.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.fromBeginEnd', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.fromBeginEnd.html', attributes: ["static"]},
{name: 's2.s2cell_union.S2CellUnion.fromMinMax', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.fromMinMax.html', attributes: ["static"]},
{name: 's2.s2cell_union.S2CellUnion.fromNormalized', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.fromNormalized.html', attributes: ["static"]},
{name: 's2.s2cell_union.S2CellUnion.fromVerbatim', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.fromVerbatim.html', attributes: ["static"]},
{name: 's2.s2cell_union.S2CellUnion.getCapBound', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.getCapBound.html', attributes: ["override"]},
{name: 's2.s2cell_union.S2CellUnion.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2cell_union.S2CellUnion.getIntersection', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.getIntersection.html', attributes: ["static"]},
{name: 's2.s2cell_union.S2CellUnion.getRectBound', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.getRectBound.html', attributes: ["override"]},
{name: 's2.s2cell_union.S2CellUnion.initFromBeginEnd', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.initFromBeginEnd.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.initFromMinMax', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.initFromMinMax.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.initialize', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.initialize.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.intersect', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.intersect.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.intersects', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.intersects.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.isNormalized', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.isNormalized.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.isValid', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.isValid.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.Iterator', kind: "structdeclaration", path: './s2/s2cell_union/S2CellUnion.Iterator.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.Iterator.cellIds', kind: "variabledeclaration", path: './s2/s2cell_union/S2CellUnion.Iterator.cellIds.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.Iterator.getValue', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.Iterator.getValue.html', attributes: ["inout"]},
{name: 's2.s2cell_union.S2CellUnion.Iterator.opUnary', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.Iterator.opUnary.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.Iterator.pos', kind: "variabledeclaration", path: './s2/s2cell_union/S2CellUnion.Iterator.pos.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.leafCellsCovered', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.leafCellsCovered.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.mayIntersect', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.mayIntersect.html', attributes: ["override", "const"]},
{name: 's2.s2cell_union.S2CellUnion.normalize', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.normalize.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.numCells', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.numCells.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.opEquals', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.opEquals.html', attributes: ["override"]},
{name: 's2.s2cell_union.S2CellUnion.opIndex', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.opIndex.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.pack', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.pack.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.release', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.release.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.size', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.size.html', attributes: ["const"]},
{name: 's2.s2cell_union.S2CellUnion.this', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.this.html', attributes: []},
{name: 's2.s2cell_union.S2CellUnion.unite', kind: "functiondeclaration", path: './s2/s2cell_union/S2CellUnion.unite.html', attributes: ["const"]},
{name: 's2.s2centroids', kind: "module", path: './s2/s2centroids.html', attributes: []},
{name: 's2.s2centroids.planarCentroid', kind: "functiondeclaration", path: './s2/s2centroids/planarCentroid.html', attributes: []},
{name: 's2.s2centroids.trueCentroid', kind: "functiondeclaration", path: './s2/s2centroids/trueCentroid.html', attributes: []},
{name: 's2.s2closest_edge_query', kind: "module", path: './s2/s2closest_edge_query.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery', kind: "classdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Base', kind: "aliasdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Base.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.CellTarget', kind: "classdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.CellTarget.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.CellTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.CellTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.CellTarget.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.CellTarget.this.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Distance', kind: "aliasdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Distance.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.EdgeTarget', kind: "classdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.EdgeTarget.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.EdgeTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.EdgeTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.EdgeTarget.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.EdgeTarget.this.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.findClosestEdge', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.findClosestEdge.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.findClosestEdges', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.findClosestEdges.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.getDistance', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.getDistance.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.getEdge', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.getEdge.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.index', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.index.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.initialize', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.initialize.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.isConservativeDistanceLessOrEqual', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.isConservativeDistanceLessOrEqual.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.isDistanceLess', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.isDistanceLess.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.isDistanceLessOrEqual', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.isDistanceLessOrEqual.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.mutableOptions', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.mutableOptions.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Options', kind: "classdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Options.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Options.setConservativeMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Options.setConservativeMaxDistance.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Options.setInclusiveMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Options.setInclusiveMaxDistance.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Options.setMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Options.setMaxDistance.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Options.setMaxError', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Options.setMaxError.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Options.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Options.this.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.options', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.options.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.PointTarget', kind: "classdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.PointTarget.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.PointTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.PointTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.PointTarget.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.PointTarget.this.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.project', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.project.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.reInititialize', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.reInititialize.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Result', kind: "aliasdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Result.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.ShapeIndexTarget', kind: "classdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.ShapeIndexTarget.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.ShapeIndexTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.ShapeIndexTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.ShapeIndexTarget.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.ShapeIndexTarget.this.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.Target', kind: "aliasdeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.Target.html', attributes: []},
{name: 's2.s2closest_edge_query.S2ClosestEdgeQuery.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query/S2ClosestEdgeQuery.this.html', attributes: []},
{name: 's2.s2closest_edge_query_base', kind: "module", path: './s2/s2closest_edge_query_base.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase', kind: "classdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._avoidDuplicates', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._avoidDuplicates.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._distanceLimit', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._distanceLimit.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._index', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._index.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._indexCells', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._indexCells.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._indexCovering', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._indexCovering.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._indexNumEdges', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._indexNumEdges.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._indexNumEdgesLimit', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._indexNumEdgesLimit.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._initialCells', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._initialCells.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._iter', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._iter.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._maxDistanceCovering', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._maxDistanceCovering.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._options', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._options.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._queue', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._queue.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._resultSet', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._resultSet.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._resultSingleton', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._resultSingleton.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._resultVector', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._resultVector.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._target', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._target.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._testedEdges', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._testedEdges.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase._useConservativeCellDistance', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase._useConservativeCellDistance.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.addInitialRange', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.addInitialRange.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.addResult', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.addResult.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.CellQueue', kind: "aliasdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.CellQueue.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.countEdges', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.countEdges.html', attributes: ["static"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Delta', kind: "aliasdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Delta.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.enqueueCell', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.enqueueCell.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.enqueueCurrentCell', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.enqueueCurrentCell.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.findClosestEdge', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.findClosestEdge.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.findClosestEdges', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.findClosestEdges.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.findClosestEdgesBruteForce', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.findClosestEdgesBruteForce.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.findClosestEdgesInternal', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.findClosestEdgesInternal.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.findClosestEdgesOptimized', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.findClosestEdgesOptimized.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.index', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.index.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.initCovering', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.initCovering.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.initialize', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.initialize.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.initQueue', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.initQueue.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.maybeAddResult', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.maybeAddResult.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options', kind: "classdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options._includeInteriors', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options._includeInteriors.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options._maxDistance', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options._maxDistance.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options._maxEdges', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options._maxEdges.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options._maxError', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options._maxError.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options._useBruteForce', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options._useBruteForce.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.includeInteriors', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.includeInteriors.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.MAX_MAX_EDGES', kind: "enummemberdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.MAX_MAX_EDGES.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.maxDistance', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.maxDistance.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.maxEdges', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.maxEdges.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.maxError', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.maxError.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.setIncludeInteriors', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.setIncludeInteriors.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.setMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.setMaxDistance.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.setMaxEdges', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.setMaxEdges.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.setMaxError', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.setMaxError.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.setUseBruteForce', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.setUseBruteForce.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.this.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Options.useBruteForce', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Options.useBruteForce.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.options', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.options.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.processEdges', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.processEdges.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.QueueEntry', kind: "classdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.QueueEntry.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.QueueEntry.distance', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.QueueEntry.distance.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.QueueEntry.id', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.QueueEntry.id.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.QueueEntry.indexCell', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.QueueEntry.indexCell.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.QueueEntry.opCmp', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.QueueEntry.opCmp.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.QueueEntry.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.QueueEntry.this.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.reInitialize', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.reInitialize.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Result', kind: "structdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Result.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Result.distance', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Result.distance.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Result.edgeId', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Result.edgeId.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Result.opCmp', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Result.opCmp.html', attributes: ["const"]},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Result.shapeId', kind: "variabledeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Result.shapeId.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.Target', kind: "aliasdeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.Target.html', attributes: []},
{name: 's2.s2closest_edge_query_base.S2ClosestEdgeQueryBase.this', kind: "functiondeclaration", path: './s2/s2closest_edge_query_base/S2ClosestEdgeQueryBase.this.html', attributes: []},
{name: 's2.s2closest_point_query', kind: "module", path: './s2/s2closest_point_query.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery', kind: "classdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery._base', kind: "variabledeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery._base.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery._options', kind: "variabledeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery._options.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery._results', kind: "variabledeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery._results.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.Base', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.Base.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.CellTarget', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.CellTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.Distance', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.Distance.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.EdgeTarget', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.EdgeTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.findClosestPoint', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.findClosestPoint.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.findClosestPoints', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.findClosestPoints.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.getDistance', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.getDistance.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.Index', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.Index.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.index', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.index.html', attributes: ["const"]},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.initialize', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.initialize.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.isConservativeDistanceLessOrEqual', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.isConservativeDistanceLessOrEqual.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.isDistanceLess', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.isDistanceLess.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.isDistanceLessOrEqual', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.isDistanceLessOrEqual.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.mutableOptions', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.mutableOptions.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.Options', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.Options.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.options', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.options.html', attributes: ["const"]},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.PointData', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.PointData.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.PointTarget', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.PointTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.reInitialize', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.reInitialize.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.Result', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.Result.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.ShapeIndexTarget', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.ShapeIndexTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.Target', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.Target.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQuery.this', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQuery.this.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryCellTarget', kind: "classdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryCellTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryCellTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryCellTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryCellTarget.this', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryCellTarget.this.html', attributes: []},
{name: 's2.s2distance_target.S2DistanceTarget.Delta', kind: "aliasdeclaration", path: './s2/s2distance_target/S2DistanceTarget.Delta.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceCellTarget.getCapBound', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceCellTarget.getCapBound.html', attributes: ["final", "override"]},
{name: 's2.s2distance_target.S2DistanceTarget.getCapBound', kind: "functiondeclaration", path: './s2/s2distance_target/S2DistanceTarget.getCapBound.html', attributes: ["abstract"]},
{name: 's2.s2distance_target.S2DistanceTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2distance_target/S2DistanceTarget.maxBruteForceIndexSize.html', attributes: ["const"]},
{name: 's2.s2distance_target.S2DistanceTarget.setMaxError', kind: "functiondeclaration", path: './s2/s2distance_target/S2DistanceTarget.setMaxError.html', attributes: []},
{name: 's2.s2distance_target.S2DistanceTarget.ShapeVisitor', kind: "aliasdeclaration", path: './s2/s2distance_target/S2DistanceTarget.ShapeVisitor.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceCellTarget.updateMinDistance', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceCellTarget.updateMinDistance.html', attributes: ["final", "override"]},
{name: 's2.s2distance_target.S2DistanceTarget.updateMinDistance', kind: "functiondeclaration", path: './s2/s2distance_target/S2DistanceTarget.updateMinDistance.html', attributes: ["abstract"]},
{name: 's2.s2min_distance_targets.S2MinDistanceCellTarget.visitContainingShapes', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceCellTarget.visitContainingShapes.html', attributes: ["final", "override"]},
{name: 's2.s2distance_target.S2DistanceTarget.visitContainingShapes', kind: "functiondeclaration", path: './s2/s2distance_target/S2DistanceTarget.visitContainingShapes.html', attributes: ["abstract"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryEdgeTarget', kind: "classdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryEdgeTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryEdgeTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryEdgeTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryEdgeTarget.this', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryEdgeTarget.this.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceEdgeTarget.getCapBound', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceEdgeTarget.getCapBound.html', attributes: ["final", "override"]},
{name: 's2.s2min_distance_targets.S2MinDistanceEdgeTarget.updateMinDistance', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceEdgeTarget.updateMinDistance.html', attributes: ["final", "override"]},
{name: 's2.s2min_distance_targets.S2MinDistanceEdgeTarget.visitContainingShapes', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceEdgeTarget.visitContainingShapes.html', attributes: ["final", "override"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions', kind: "classdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions.Base', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.Base.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions.Distance', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.Distance.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions.setConservativeMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.setConservativeMaxDistance.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions.setInclusiveMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.setInclusiveMaxDistance.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions.setMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.setMaxDistance.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions.setMaxError', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.setMaxError.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryOptions.this', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryOptions.this.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions._maxDistance', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions._maxDistance.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions._maxError', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions._maxError.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions._maxPoints', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions._maxPoints.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions._region', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions._region.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions._useBruteForce', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions._useBruteForce.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.Delta', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.Delta.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.dup', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.dup.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.MAX_MAX_POINTS', kind: "enummemberdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.MAX_MAX_POINTS.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.maxDistance', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.maxDistance.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.maxError', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.maxError.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.maxPoints', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.maxPoints.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.region', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.region.html', attributes: ["inout"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.setMaxDistance', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.setMaxDistance.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.setMaxError', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.setMaxError.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.setMaxPoints', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.setMaxPoints.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.setRegion', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.setRegion.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.setUseBruteForce', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.setUseBruteForce.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.toString', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.toString.html', attributes: ["override", "const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.useBruteForce', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.useBruteForce.html', attributes: ["const"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryPointTarget', kind: "classdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryPointTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryPointTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryPointTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryPointTarget.this', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryPointTarget.this.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistancePointTarget.getCapBound', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistancePointTarget.getCapBound.html', attributes: ["final", "override"]},
{name: 's2.s2min_distance_targets.S2MinDistancePointTarget.updateMinDistance', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistancePointTarget.updateMinDistance.html', attributes: ["final", "override"]},
{name: 's2.s2min_distance_targets.S2MinDistancePointTarget.visitContainingShapes', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistancePointTarget.visitContainingShapes.html', attributes: ["final", "override"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryShapeIndexTarget', kind: "classdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryShapeIndexTarget.html', attributes: []},
{name: 's2.s2closest_point_query.S2ClosestPointQueryShapeIndexTarget.maxBruteForceIndexSize', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryShapeIndexTarget.maxBruteForceIndexSize.html', attributes: ["override", "const"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryShapeIndexTarget.this', kind: "functiondeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryShapeIndexTarget.this.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.getCapBound', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.getCapBound.html', attributes: ["final", "override"]},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.includeInteriors', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.includeInteriors.html', attributes: ["const"]},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.setIncludeInteriors', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.setIncludeInteriors.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.setMaxError', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.setMaxError.html', attributes: ["override"]},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.setUseBruteForce', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.setUseBruteForce.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.updateMinDistance', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.updateMinDistance.html', attributes: ["final", "override"]},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.useBruteForce', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.useBruteForce.html', attributes: ["const"]},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.visitContainingShapes', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.visitContainingShapes.html', attributes: ["final", "override"]},
{name: 's2.s2closest_point_query.S2ClosestPointQueryTarget', kind: "aliasdeclaration", path: './s2/s2closest_point_query/S2ClosestPointQueryTarget.html', attributes: []},
{name: 's2.s2closest_point_query_base', kind: "module", path: './s2/s2closest_point_query_base.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase', kind: "classdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._distanceLimit', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._distanceLimit.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._index', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._index.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._indexCovering', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._indexCovering.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._intersectionWithMaxDistance', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._intersectionWithMaxDistance.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._intersectionWithRegion', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._intersectionWithRegion.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._iter', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._iter.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._maxDistanceCovering', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._maxDistanceCovering.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._options', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._options.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._queue', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._queue.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._regionCovering', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._regionCovering.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._resultSet', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._resultSet.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._resultSingleton', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._resultSingleton.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._resultVector', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._resultVector.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._target', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._target.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase._tmpPointData', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase._tmpPointData.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.addInitialRange', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.addInitialRange.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.CellQueue', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.CellQueue.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Delta', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Delta.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.enqueueCell', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.enqueueCell.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.findClosestPoint', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.findClosestPoint.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.findClosestPoints', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.findClosestPoints.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.findClosestPointsBruteForce', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.findClosestPointsBruteForce.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.findClosestPointsInternal', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.findClosestPointsInternal.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.findClosestPointsOptimized', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.findClosestPointsOptimized.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Index', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Index.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.index', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.index.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.initCovering', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.initCovering.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.initialize', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.initialize.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.initQueue', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.initQueue.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Iterator', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Iterator.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.MAX_LEAF_POINTS', kind: "enummemberdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.MAX_LEAF_POINTS.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.maybeAddResult', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.maybeAddResult.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.MIN_POINTS_TO_ENQUEUE', kind: "enummemberdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.MIN_POINTS_TO_ENQUEUE.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Options', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Options.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.options', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.options.html', attributes: ["inout"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.PointData', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.PointData.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.QueueEntry', kind: "structdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.QueueEntry.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.QueueEntry.distance', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.QueueEntry.distance.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.QueueEntry.id', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.QueueEntry.id.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.QueueEntry.opCmp', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.QueueEntry.opCmp.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.reInitialize', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.reInitialize.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result', kind: "structdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result._distance', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result._distance.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result._pointData', kind: "variabledeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result._pointData.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result.data', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.data.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result.distance', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.distance.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result.isEmpty', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.isEmpty.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result.opCmp', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.opCmp.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result.opEquals', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.opEquals.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result.point', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.point.html', attributes: ["const"]},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Result.this', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Result.this.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.Target', kind: "aliasdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.Target.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBase.this', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBase.this.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions', kind: "classdeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.html', attributes: []},
{name: 's2.s2closest_point_query_base.S2ClosestPointQueryBaseOptions.this', kind: "functiondeclaration", path: './s2/s2closest_point_query_base/S2ClosestPointQueryBaseOptions.this.html', attributes: []},
{name: 's2.s2contains_point_query', kind: "module", path: './s2/s2contains_point_query.html', attributes: []},
{name: 's2.s2contains_point_query.makeS2ContainsPointQuery', kind: "functiondeclaration", path: './s2/s2contains_point_query/makeS2ContainsPointQuery.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery', kind: "classdeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery._index', kind: "variabledeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery._index.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery._it', kind: "variabledeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery._it.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery._options', kind: "variabledeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery._options.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.contains', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.contains.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.EdgeVisitor', kind: "aliasdeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.EdgeVisitor.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.getContainingShapes', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.getContainingShapes.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.index', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.index.html', attributes: ["inout"]},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.initialize', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.initialize.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.Iterator', kind: "aliasdeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.Iterator.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.mutableIter', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.mutableIter.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.Options', kind: "aliasdeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.Options.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.options', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.options.html', attributes: ["const"]},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.shapeContains', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.shapeContains.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.ShapeVisitor', kind: "aliasdeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.ShapeVisitor.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.this', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.this.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.visitContainingShapes', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.visitContainingShapes.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQuery.visitIncidentEdges', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQuery.visitIncidentEdges.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQueryOptions', kind: "classdeclaration", path: './s2/s2contains_point_query/S2ContainsPointQueryOptions.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQueryOptions.setVertexModel', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQueryOptions.setVertexModel.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQueryOptions.this', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQueryOptions.this.html', attributes: []},
{name: 's2.s2contains_point_query.S2ContainsPointQueryOptions.vertexModel', kind: "functiondeclaration", path: './s2/s2contains_point_query/S2ContainsPointQueryOptions.vertexModel.html', attributes: ["const"]},
{name: 's2.s2contains_point_query.S2VertexModel', kind: "enumdeclaration", path: './s2/s2contains_point_query/S2VertexModel.html', attributes: []},
{name: 's2.s2contains_point_query.S2VertexModel.CLOSED', kind: "enummemberdeclaration", path: './s2/s2contains_point_query/S2VertexModel.html#CLOSED', attributes: []},
{name: 's2.s2contains_point_query.S2VertexModel.OPEN', kind: "enummemberdeclaration", path: './s2/s2contains_point_query/S2VertexModel.html#OPEN', attributes: []},
{name: 's2.s2contains_point_query.S2VertexModel.SEMI_OPEN', kind: "enummemberdeclaration", path: './s2/s2contains_point_query/S2VertexModel.html#SEMI_OPEN', attributes: []},
{name: 's2.s2contains_vertex_query', kind: "module", path: './s2/s2contains_vertex_query.html', attributes: []},
{name: 's2.s2contains_vertex_query.S2ContainsVertexQuery', kind: "classdeclaration", path: './s2/s2contains_vertex_query/S2ContainsVertexQuery.html', attributes: []},
{name: 's2.s2contains_vertex_query.S2ContainsVertexQuery.addEdge', kind: "functiondeclaration", path: './s2/s2contains_vertex_query/S2ContainsVertexQuery.addEdge.html', attributes: []},
{name: 's2.s2contains_vertex_query.S2ContainsVertexQuery.containsSign', kind: "functiondeclaration", path: './s2/s2contains_vertex_query/S2ContainsVertexQuery.containsSign.html', attributes: []},
{name: 's2.s2contains_vertex_query.S2ContainsVertexQuery.this', kind: "functiondeclaration", path: './s2/s2contains_vertex_query/S2ContainsVertexQuery.this.html', attributes: []},
{name: 's2.s2coords', kind: "module", path: './s2/s2coords.html', attributes: []},
{name: 's2.s2coords.FaceSiTitoXYZ', kind: "functiondeclaration", path: './s2/s2coords/FaceSiTitoXYZ.html', attributes: []},
{name: 's2.s2coords.FaceUVtoXYZ', kind: "functiondeclaration", path: './s2/s2coords/FaceUVtoXYZ.html', attributes: []},
{name: 's2.s2coords.FaceXYZtoUV', kind: "functiondeclaration", path: './s2/s2coords/FaceXYZtoUV.html', attributes: []},
{name: 's2.s2coords.FaceXYZtoUVW', kind: "functiondeclaration", path: './s2/s2coords/FaceXYZtoUVW.html', attributes: []},
{name: 's2.s2coords.GetFace', kind: "functiondeclaration", path: './s2/s2coords/GetFace.html', attributes: []},
{name: 's2.s2coords.GetNorm', kind: "functiondeclaration", path: './s2/s2coords/GetNorm.html', attributes: []},
{name: 's2.s2coords.GetUAxis', kind: "functiondeclaration", path: './s2/s2coords/GetUAxis.html', attributes: []},
{name: 's2.s2coords.GetUNorm', kind: "functiondeclaration", path: './s2/s2coords/GetUNorm.html', attributes: []},
{name: 's2.s2coords.GetUVWAxis', kind: "functiondeclaration", path: './s2/s2coords/GetUVWAxis.html', attributes: []},
{name: 's2.s2coords.GetUVWFace', kind: "functiondeclaration", path: './s2/s2coords/GetUVWFace.html', attributes: []},
{name: 's2.s2coords.GetVAxis', kind: "functiondeclaration", path: './s2/s2coords/GetVAxis.html', attributes: []},
{name: 's2.s2coords.GetVNorm', kind: "functiondeclaration", path: './s2/s2coords/GetVNorm.html', attributes: []},
{name: 's2.s2coords.IJtoSTMin', kind: "functiondeclaration", path: './s2/s2coords/IJtoSTMin.html', attributes: []},
{name: 's2.s2coords.LIMIT_IJ', kind: "variabledeclaration", path: './s2/s2coords/LIMIT_IJ.html', attributes: []},
{name: 's2.s2coords.MAX_CELL_LEVEL', kind: "variabledeclaration", path: './s2/s2coords/MAX_CELL_LEVEL.html', attributes: []},
{name: 's2.s2coords.MAX_SI_TI', kind: "variabledeclaration", path: './s2/s2coords/MAX_SI_TI.html', attributes: []},
{name: 's2.s2coords.SiTitoST', kind: "functiondeclaration", path: './s2/s2coords/SiTitoST.html', attributes: []},
{name: 's2.s2coords.STtoIJ', kind: "functiondeclaration", path: './s2/s2coords/STtoIJ.html', attributes: []},
{name: 's2.s2coords.STtoSiTi', kind: "functiondeclaration", path: './s2/s2coords/STtoSiTi.html', attributes: []},
{name: 's2.s2coords.STtoUV', kind: "functiondeclaration", path: './s2/s2coords/STtoUV.html', attributes: []},
{name: 's2.s2coords.UVtoST', kind: "functiondeclaration", path: './s2/s2coords/UVtoST.html', attributes: []},
{name: 's2.s2coords.ValidFaceXYZtoUV', kind: "functiondeclaration", path: './s2/s2coords/ValidFaceXYZtoUV.html', attributes: []},
{name: 's2.s2coords.XYZtoFaceSiTi', kind: "functiondeclaration", path: './s2/s2coords/XYZtoFaceSiTi.html', attributes: []},
{name: 's2.s2coords.XYZtoFaceUV', kind: "functiondeclaration", path: './s2/s2coords/XYZtoFaceUV.html', attributes: []},
{name: 's2.s2crossing_edge_query', kind: "module", path: './s2/s2crossing_edge_query.html', attributes: []},
{name: 's2.s2crossing_edge_query.CrossingType', kind: "enumdeclaration", path: './s2/s2crossing_edge_query/CrossingType.html', attributes: []},
{name: 's2.s2crossing_edge_query.CrossingType.ALL', kind: "enummemberdeclaration", path: './s2/s2crossing_edge_query/CrossingType.html#ALL', attributes: []},
{name: 's2.s2crossing_edge_query.CrossingType.INTERIOR', kind: "enummemberdeclaration", path: './s2/s2crossing_edge_query/CrossingType.html#INTERIOR', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery', kind: "classdeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.CellVisitor', kind: "aliasdeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.CellVisitor.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.EdgeMap', kind: "aliasdeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.EdgeMap.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.getCandidates', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.getCandidates.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.getCells', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.getCells.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.getCrossingEdges', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.getCrossingEdges.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.getCrossings', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.getCrossings.html', attributes: ["deprecated"]},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.index', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.index.html', attributes: ["inout"]},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.initialize', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.initialize.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.ShapeEdgeIdVisitor', kind: "aliasdeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.ShapeEdgeIdVisitor.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.this', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.this.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.visitCells', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.visitCells.html', attributes: []},
{name: 's2.s2crossing_edge_query.S2CrossingEdgeQuery.visitRawCandidates', kind: "functiondeclaration", path: './s2/s2crossing_edge_query/S2CrossingEdgeQuery.visitRawCandidates.html', attributes: []},
{name: 's2.s2debug', kind: "module", path: './s2/s2debug.html', attributes: []},
{name: 's2.s2debug.flagsS2Debug', kind: "variabledeclaration", path: './s2/s2debug/flagsS2Debug.html', attributes: []},
{name: 's2.s2debug.S2Debug', kind: "enumdeclaration", path: './s2/s2debug/S2Debug.html', attributes: []},
{name: 's2.s2debug.S2Debug.ALLOW', kind: "enummemberdeclaration", path: './s2/s2debug/S2Debug.html#ALLOW', attributes: []},
{name: 's2.s2debug.S2Debug.DISABLE', kind: "enummemberdeclaration", path: './s2/s2debug/S2Debug.html#DISABLE', attributes: []},
{name: 's2.s2distance_target', kind: "module", path: './s2/s2distance_target.html', attributes: []},
{name: 's2.s2distance_target.S2DistanceTarget', kind: "classdeclaration", path: './s2/s2distance_target/S2DistanceTarget.html', attributes: []},
{name: 's2.s2edge_clipping', kind: "module", path: './s2/s2edge_clipping.html', attributes: []},
{name: 's2.s2edge_clipping.clipEdge', kind: "functiondeclaration", path: './s2/s2edge_clipping/clipEdge.html', attributes: []},
{name: 's2.s2edge_clipping.clipEdgeBound', kind: "functiondeclaration", path: './s2/s2edge_clipping/clipEdgeBound.html', attributes: []},
{name: 's2.s2edge_clipping.clipToFace', kind: "functiondeclaration", path: './s2/s2edge_clipping/clipToFace.html', attributes: []},
{name: 's2.s2edge_clipping.clipToPaddedFace', kind: "functiondeclaration", path: './s2/s2edge_clipping/clipToPaddedFace.html', attributes: []},
{name: 's2.s2edge_clipping.EDGE_CLIP_ERROR_UV_COORD', kind: "enummemberdeclaration", path: './s2/s2edge_clipping/EDGE_CLIP_ERROR_UV_COORD.html', attributes: []},
{name: 's2.s2edge_clipping.EDGE_CLIP_ERROR_UV_DIST', kind: "enummemberdeclaration", path: './s2/s2edge_clipping/EDGE_CLIP_ERROR_UV_DIST.html', attributes: []},
{name: 's2.s2edge_clipping.FACE_CLIP_ERROR_RADIANS', kind: "enummemberdeclaration", path: './s2/s2edge_clipping/FACE_CLIP_ERROR_RADIANS.html', attributes: []},
{name: 's2.s2edge_clipping.FACE_CLIP_ERROR_UV_COORD', kind: "enummemberdeclaration", path: './s2/s2edge_clipping/FACE_CLIP_ERROR_UV_COORD.html', attributes: []},
{name: 's2.s2edge_clipping.FACE_CLIP_ERROR_UV_DIST', kind: "enummemberdeclaration", path: './s2/s2edge_clipping/FACE_CLIP_ERROR_UV_DIST.html', attributes: []},
{name: 's2.s2edge_clipping.FaceSegment', kind: "structdeclaration", path: './s2/s2edge_clipping/FaceSegment.html', attributes: []},
{name: 's2.s2edge_clipping.FaceSegment.a', kind: "variabledeclaration", path: './s2/s2edge_clipping/FaceSegment.a.html', attributes: []},
{name: 's2.s2edge_clipping.FaceSegment.b', kind: "variabledeclaration", path: './s2/s2edge_clipping/FaceSegment.b.html', attributes: []},
{name: 's2.s2edge_clipping.FaceSegment.face', kind: "variabledeclaration", path: './s2/s2edge_clipping/FaceSegment.face.html', attributes: []},
{name: 's2.s2edge_clipping.FaceSegmentVector', kind: "aliasdeclaration", path: './s2/s2edge_clipping/FaceSegmentVector.html', attributes: []},
{name: 's2.s2edge_clipping.getClippedEdgeBound', kind: "functiondeclaration", path: './s2/s2edge_clipping/getClippedEdgeBound.html', attributes: []},
{name: 's2.s2edge_clipping.getFaceSegments', kind: "functiondeclaration", path: './s2/s2edge_clipping/getFaceSegments.html', attributes: []},
{name: 's2.s2edge_clipping.interpolateDouble', kind: "functiondeclaration", path: './s2/s2edge_clipping/interpolateDouble.html', attributes: []},
{name: 's2.s2edge_clipping.INTERSECTS_RECT_ERROR_UV_DIST', kind: "enummemberdeclaration", path: './s2/s2edge_clipping/INTERSECTS_RECT_ERROR_UV_DIST.html', attributes: []},
{name: 's2.s2edge_clipping.intersectsRect', kind: "functiondeclaration", path: './s2/s2edge_clipping/intersectsRect.html', attributes: []},
{name: 's2.s2edge_clipping.S2PointUVW', kind: "aliasdeclaration", path: './s2/s2edge_clipping/S2PointUVW.html', attributes: []},
{name: 's2.s2edge_crosser', kind: "module", path: './s2/s2edge_crosser.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser', kind: "classdeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.a', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.a.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.b', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.b.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.c', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.c.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.crossingSign', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.crossingSign.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.edgeOrVertexCrossing', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.edgeOrVertexCrossing.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.initialize', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.initialize.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.restartAt', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.restartAt.html', attributes: []},
{name: 's2.s2edge_crosser.S2CopyingEdgeCrosser.this', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2CopyingEdgeCrosser.this.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser', kind: "classdeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser.a', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.a.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser.b', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.b.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser.c', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.c.html', attributes: ["property"]},
{name: 's2.s2edge_crosser.S2EdgeCrosser.crossingSign', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.crossingSign.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser.edgeOrVertexCrossing', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.edgeOrVertexCrossing.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser.initialize', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.initialize.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser.restartAt', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.restartAt.html', attributes: []},
{name: 's2.s2edge_crosser.S2EdgeCrosser.this', kind: "functiondeclaration", path: './s2/s2edge_crosser/S2EdgeCrosser.this.html', attributes: []},
{name: 's2.s2edge_crossings', kind: "module", path: './s2/s2edge_crossings.html', attributes: []},
{name: 's2.s2edge_crossings.crossingSign', kind: "functiondeclaration", path: './s2/s2edge_crossings/crossingSign.html', attributes: []},
{name: 's2.s2edge_crossings.edgeOrVertexCrossing', kind: "functiondeclaration", path: './s2/s2edge_crossings/edgeOrVertexCrossing.html', attributes: []},
{name: 's2.s2edge_crossings.getIntersection', kind: "functiondeclaration", path: './s2/s2edge_crossings/getIntersection.html', attributes: []},
{name: 's2.s2edge_crossings.getIntersectionStableR', kind: "functiondeclaration", path: './s2/s2edge_crossings/getIntersectionStableR.html', attributes: ["static"]},
{name: 's2.s2edge_crossings.INTERSECTION_ERROR', kind: "variabledeclaration", path: './s2/s2edge_crossings/INTERSECTION_ERROR.html', attributes: []},
{name: 's2.s2edge_crossings.INTERSECTION_MERGE_RADIUS', kind: "variabledeclaration", path: './s2/s2edge_crossings/INTERSECTION_MERGE_RADIUS.html', attributes: []},
{name: 's2.s2edge_crossings.vertexCrossing', kind: "functiondeclaration", path: './s2/s2edge_crossings/vertexCrossing.html', attributes: []},
{name: 's2.s2edge_distances', kind: "module", path: './s2/s2edge_distances.html', attributes: []},
{name: 's2.s2edge_distances.alwaysUpdateMinDistance', kind: "functiondeclaration", path: './s2/s2edge_distances/alwaysUpdateMinDistance.html', attributes: []},
{name: 's2.s2edge_distances.alwaysUpdateMinInteriorDistance', kind: "functiondeclaration", path: './s2/s2edge_distances/alwaysUpdateMinInteriorDistance.html', attributes: []},
{name: 's2.s2edge_distances.getDistance', kind: "functiondeclaration", path: './s2/s2edge_distances/getDistance.html', attributes: []},
{name: 's2.s2edge_distances.getUpdateMinDistanceMaxError', kind: "functiondeclaration", path: './s2/s2edge_distances/getUpdateMinDistanceMaxError.html', attributes: []},
{name: 's2.s2edge_distances.interpolate', kind: "functiondeclaration", path: './s2/s2edge_distances/interpolate.html', attributes: []},
{name: 's2.s2edge_distances.interpolateAtDistance', kind: "functiondeclaration", path: './s2/s2edge_distances/interpolateAtDistance.html', attributes: []},
{name: 's2.s2edge_distances.isDistanceLess', kind: "functiondeclaration", path: './s2/s2edge_distances/isDistanceLess.html', attributes: []},
{name: 's2.s2edge_distances.isEdgeBNearEdgeA', kind: "functiondeclaration", path: './s2/s2edge_distances/isEdgeBNearEdgeA.html', attributes: []},
{name: 's2.s2edge_distances.project', kind: "functiondeclaration", path: './s2/s2edge_distances/project.html', attributes: []},
{name: 's2.s2edge_distances.updateEdgePairMinDistance', kind: "functiondeclaration", path: './s2/s2edge_distances/updateEdgePairMinDistance.html', attributes: []},
{name: 's2.s2edge_distances.updateMaxDistance', kind: "functiondeclaration", path: './s2/s2edge_distances/updateMaxDistance.html', attributes: []},
{name: 's2.s2edge_distances.updateMinDistance', kind: "functiondeclaration", path: './s2/s2edge_distances/updateMinDistance.html', attributes: []},
{name: 's2.s2edge_vector_shape', kind: "module", path: './s2/s2edge_vector_shape.html', attributes: []},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape', kind: "classdeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.html', attributes: []},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.add', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.add.html', attributes: []},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.chain', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.chain.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.chainEdge', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.chainEdge.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.chainPosition', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.chainPosition.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.dimension', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.dimension.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.edge', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.edge.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.getReferencePoint.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.numChains', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.numChains.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.numEdges', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.numEdges.html', attributes: ["override", "const"]},
{name: 's2.s2edge_vector_shape.S2EdgeVectorShape.this', kind: "functiondeclaration", path: './s2/s2edge_vector_shape/S2EdgeVectorShape.this.html', attributes: []},
{name: 's2.s2error', kind: "module", path: './s2/s2error.html', attributes: []},
{name: 's2.s2error.S2Error', kind: "structdeclaration", path: './s2/s2error/S2Error.html', attributes: []},
{name: 's2.s2error.S2Error.clear', kind: "functiondeclaration", path: './s2/s2error/S2Error.clear.html', attributes: []},
{name: 's2.s2error.S2Error.Code', kind: "enumdeclaration", path: './s2/s2error/S2Error.Code.html', attributes: []},
{name: 's2.s2error.S2Error.Code.ANTIPODAL_VERTICES', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#ANTIPODAL_VERTICES', attributes: []},
{name: 's2.s2error.S2Error.Code.BUILDER_EDGES_DO_NOT_FORM_LOOPS', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#BUILDER_EDGES_DO_NOT_FORM_LOOPS', attributes: []},
{name: 's2.s2error.S2Error.Code.BUILDER_EDGES_DO_NOT_FORM_POLYLINE', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#BUILDER_EDGES_DO_NOT_FORM_POLYLINE', attributes: []},
{name: 's2.s2error.S2Error.Code.BUILDER_IS_FULL_PREDICATE_NOT_SPECIFIED', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#BUILDER_IS_FULL_PREDICATE_NOT_SPECIFIED', attributes: []},
{name: 's2.s2error.S2Error.Code.BUILDER_MISSING_EXPECTED_SIBLING_EDGES', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#BUILDER_MISSING_EXPECTED_SIBLING_EDGES', attributes: []},
{name: 's2.s2error.S2Error.Code.BUILDER_SNAP_RADIUS_TOO_SMALL', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#BUILDER_SNAP_RADIUS_TOO_SMALL', attributes: []},
{name: 's2.s2error.S2Error.Code.BUILDER_UNEXPECTED_DEGENERATE_EDGE', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#BUILDER_UNEXPECTED_DEGENERATE_EDGE', attributes: []},
{name: 's2.s2error.S2Error.Code.DATA_LOSS', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#DATA_LOSS', attributes: []},
{name: 's2.s2error.S2Error.Code.DUPLICATE_VERTICES', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#DUPLICATE_VERTICES', attributes: []},
{name: 's2.s2error.S2Error.Code.FAILED_PRECONDITION', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#FAILED_PRECONDITION', attributes: []},
{name: 's2.s2error.S2Error.Code.INTERNAL', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#INTERNAL', attributes: []},
{name: 's2.s2error.S2Error.Code.INVALID_ARGUMENT', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#INVALID_ARGUMENT', attributes: []},
{name: 's2.s2error.S2Error.Code.LOOP_NOT_ENOUGH_VERTICES', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#LOOP_NOT_ENOUGH_VERTICES', attributes: []},
{name: 's2.s2error.S2Error.Code.LOOP_SELF_INTERSECTION', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#LOOP_SELF_INTERSECTION', attributes: []},
{name: 's2.s2error.S2Error.Code.NOT_UNIT_LENGTH', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#NOT_UNIT_LENGTH', attributes: []},
{name: 's2.s2error.S2Error.Code.OK', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#OK', attributes: []},
{name: 's2.s2error.S2Error.Code.OUT_OF_RANGE', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#OUT_OF_RANGE', attributes: []},
{name: 's2.s2error.S2Error.Code.POLYGON_EMPTY_LOOP', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#POLYGON_EMPTY_LOOP', attributes: []},
{name: 's2.s2error.S2Error.Code.POLYGON_EXCESS_FULL_LOOP', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#POLYGON_EXCESS_FULL_LOOP', attributes: []},
{name: 's2.s2error.S2Error.Code.POLYGON_INCONSISTENT_LOOP_ORIENTATIONS', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#POLYGON_INCONSISTENT_LOOP_ORIENTATIONS', attributes: []},
{name: 's2.s2error.S2Error.Code.POLYGON_INVALID_LOOP_DEPTH', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#POLYGON_INVALID_LOOP_DEPTH', attributes: []},
{name: 's2.s2error.S2Error.Code.POLYGON_INVALID_LOOP_NESTING', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#POLYGON_INVALID_LOOP_NESTING', attributes: []},
{name: 's2.s2error.S2Error.Code.POLYGON_LOOPS_CROSS', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#POLYGON_LOOPS_CROSS', attributes: []},
{name: 's2.s2error.S2Error.Code.POLYGON_LOOPS_SHARE_EDGE', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#POLYGON_LOOPS_SHARE_EDGE', attributes: []},
{name: 's2.s2error.S2Error.Code.RESOURCE_EXHAUSTED', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#RESOURCE_EXHAUSTED', attributes: []},
{name: 's2.s2error.S2Error.Code.UNIMPLEMENTED', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#UNIMPLEMENTED', attributes: []},
{name: 's2.s2error.S2Error.Code.UNKNOWN', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#UNKNOWN', attributes: []},
{name: 's2.s2error.S2Error.Code.USER_DEFINED_END', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#USER_DEFINED_END', attributes: []},
{name: 's2.s2error.S2Error.Code.USER_DEFINED_START', kind: "enummemberdeclaration", path: './s2/s2error/S2Error.Code.html#USER_DEFINED_START', attributes: []},
{name: 's2.s2error.S2Error.code', kind: "functiondeclaration", path: './s2/s2error/S2Error.code.html', attributes: ["const"]},
{name: 's2.s2error.S2Error.initialize', kind: "functiondeclaration", path: './s2/s2error/S2Error.initialize.html', attributes: []},
{name: 's2.s2error.S2Error.ok', kind: "functiondeclaration", path: './s2/s2error/S2Error.ok.html', attributes: ["const"]},
{name: 's2.s2error.S2Error.text', kind: "functiondeclaration", path: './s2/s2error/S2Error.text.html', attributes: ["const"]},
{name: 's2.s2error.S2Error.toString', kind: "functiondeclaration", path: './s2/s2error/S2Error.toString.html', attributes: ["const"]},
{name: 's2.s2latlng', kind: "module", path: './s2/s2latlng.html', attributes: []},
{name: 's2.s2latlng.S2LatLng', kind: "structdeclaration", path: './s2/s2latlng/S2LatLng.html', attributes: []},
{name: 's2.s2latlng.S2LatLng.approxEquals', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.approxEquals.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.coords', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.coords.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.fromDegrees', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.fromDegrees.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.fromE5', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.fromE5.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.fromE6', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.fromE6.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.fromE7', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.fromE7.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.fromRadians', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.fromRadians.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.fromUnsignedE6', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.fromUnsignedE6.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.fromUnsignedE7', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.fromUnsignedE7.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.getDistance', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.getDistance.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.invalid', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.invalid.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.isValid', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.isValid.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.lat', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.lat.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.latitude', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.latitude.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.lng', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.lng.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.longitude', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.longitude.html', attributes: ["static"]},
{name: 's2.s2latlng.S2LatLng.normalized', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.normalized.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.opBinary', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.opBinary.html', attributes: []},
{name: 's2.s2latlng.S2LatLng.opBinaryRight', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.opBinaryRight.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.opCmp', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.opCmp.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.opEquals', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.opEquals.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.this', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.this.html', attributes: []},
{name: 's2.s2latlng.S2LatLng.toS2Point', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.toS2Point.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.toString', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.toString.html', attributes: ["const"]},
{name: 's2.s2latlng.S2LatLng.toStringInDegrees', kind: "functiondeclaration", path: './s2/s2latlng/S2LatLng.toStringInDegrees.html', attributes: ["const"]},
{name: 's2.s2latlng_rect', kind: "module", path: './s2/s2latlng_rect.html', attributes: []},
{name: 's2.s2latlng_rect.S2LatLngRect', kind: "classdeclaration", path: './s2/s2latlng_rect/S2LatLngRect.html', attributes: []},
{name: 's2.s2latlng_rect.S2LatLngRect.addPoint', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.addPoint.html', attributes: []},
{name: 's2.s2latlng_rect.S2LatLngRect.approxEquals', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.approxEquals.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.area', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.area.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.boundaryIntersects', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.boundaryIntersects.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.clone', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.clone.html', attributes: ["override", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.contains', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.contains.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.decode', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.decode.html', attributes: []},
{name: 's2.s2latlng_rect.S2LatLngRect.empty', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.empty.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.encode', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.encode.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.expanded', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.expanded.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.expandedByDistance', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.expandedByDistance.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.fromCenterSize', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.fromCenterSize.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.fromPoint', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.fromPoint.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.fromPointPair', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.fromPointPair.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.full', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.full.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.fullLat', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.fullLat.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.fullLng', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.fullLng.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getCapBound', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getCapBound.html', attributes: ["override", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getCenter', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getCenter.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getCentroid', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getCentroid.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getDirectedHausdorffDistance', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getDirectedHausdorffDistance.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getDistance', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getDistance.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getHausdorffDistance', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getHausdorffDistance.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getRectBound', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getRectBound.html', attributes: ["override", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getSize', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getSize.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.getVertex', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.getVertex.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.hi', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.hi.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.interiorContains', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.interiorContains.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.interiorIntersects', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.interiorIntersects.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.intersection', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.intersection.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.intersects', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.intersects.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.intersectsLatEdge', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.intersectsLatEdge.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.intersectsLngEdge', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.intersectsLngEdge.html', attributes: ["static"]},
{name: 's2.s2latlng_rect.S2LatLngRect.isEmpty', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.isEmpty.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.isFull', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.isFull.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.isInverted', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.isInverted.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.isPoint', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.isPoint.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.isValid', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.isValid.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.lat', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.lat.html', attributes: ["property", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.latHi', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.latHi.html', attributes: ["property", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.latLo', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.latLo.html', attributes: ["property", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.lng', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.lng.html', attributes: ["property", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.lngHi', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.lngHi.html', attributes: ["property", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.lngLo', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.lngLo.html', attributes: ["property", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.lo', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.lo.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.mayIntersect', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.mayIntersect.html', attributes: ["override", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.mutableLat', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.mutableLat.html', attributes: []},
{name: 's2.s2latlng_rect.S2LatLngRect.mutableLng', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.mutableLng.html', attributes: []},
{name: 's2.s2latlng_rect.S2LatLngRect.opEquals', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.opEquals.html', attributes: ["override", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.polarClosure', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.polarClosure.html', attributes: ["const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.this', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.this.html', attributes: []},
{name: 's2.s2latlng_rect.S2LatLngRect.toString', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.toString.html', attributes: ["override", "const"]},
{name: 's2.s2latlng_rect.S2LatLngRect.unite', kind: "functiondeclaration", path: './s2/s2latlng_rect/S2LatLngRect.unite.html', attributes: ["const"]},
{name: 's2.s2latlng_rect_bounder', kind: "module", path: './s2/s2latlng_rect_bounder.html', attributes: []},
{name: 's2.s2latlng_rect_bounder.S2LatLngRectBounder', kind: "classdeclaration", path: './s2/s2latlng_rect_bounder/S2LatLngRectBounder.html', attributes: []},
{name: 's2.s2latlng_rect_bounder.S2LatLngRectBounder.addLatLng', kind: "functiondeclaration", path: './s2/s2latlng_rect_bounder/S2LatLngRectBounder.addLatLng.html', attributes: []},
{name: 's2.s2latlng_rect_bounder.S2LatLngRectBounder.addPoint', kind: "functiondeclaration", path: './s2/s2latlng_rect_bounder/S2LatLngRectBounder.addPoint.html', attributes: []},
{name: 's2.s2latlng_rect_bounder.S2LatLngRectBounder.expandForSubregions', kind: "functiondeclaration", path: './s2/s2latlng_rect_bounder/S2LatLngRectBounder.expandForSubregions.html', attributes: ["static"]},
{name: 's2.s2latlng_rect_bounder.S2LatLngRectBounder.getBound', kind: "functiondeclaration", path: './s2/s2latlng_rect_bounder/S2LatLngRectBounder.getBound.html', attributes: ["const"]},
{name: 's2.s2latlng_rect_bounder.S2LatLngRectBounder.maxErrorForTests', kind: "functiondeclaration", path: './s2/s2latlng_rect_bounder/S2LatLngRectBounder.maxErrorForTests.html', attributes: ["static"]},
{name: 's2.s2latlng_rect_bounder.S2LatLngRectBounder.this', kind: "functiondeclaration", path: './s2/s2latlng_rect_bounder/S2LatLngRectBounder.this.html', attributes: []},
{name: 's2.s2lax_loop_shape', kind: "module", path: './s2/s2lax_loop_shape.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2LaxClosedPolylineShape', kind: "classdeclaration", path: './s2/s2lax_loop_shape/S2LaxClosedPolylineShape.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2LaxClosedPolylineShape.dimension', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxClosedPolylineShape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxClosedPolylineShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxClosedPolylineShape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxClosedPolylineShape.this', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxClosedPolylineShape.this.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.chain', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.chainEdge', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.chainPosition', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.edge', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.initialize', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.initialize.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.numChains', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.numEdges', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.numVertices', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.numVertices.html', attributes: ["const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.vertex', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.vertex.html', attributes: ["const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape', kind: "classdeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.dimension', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.dimension.html', attributes: ["override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.getReferencePoint.html', attributes: ["override", "const"]},
{name: 's2.s2lax_loop_shape.S2LaxLoopShape.this', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2LaxLoopShape.this.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape', kind: "classdeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.chain', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.chainEdge', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.chainPosition', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.dimension', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.edge', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.initialize', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.initialize.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.numChains', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.numEdges', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.numVertices', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.numVertices.html', attributes: ["const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.this', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.this.html', attributes: []},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.vertex', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.vertex.html', attributes: ["const"]},
{name: 's2.s2lax_loop_shape.S2VertexIdLaxLoopShape.vertexId', kind: "functiondeclaration", path: './s2/s2lax_loop_shape/S2VertexIdLaxLoopShape.vertexId.html', attributes: ["const"]},
{name: 's2.s2lax_polygon_shape', kind: "module", path: './s2/s2lax_polygon_shape.html', attributes: []},
{name: 's2.s2lax_polygon_shape.ChainPosition', kind: "aliasdeclaration", path: './s2/s2lax_polygon_shape/ChainPosition.html', attributes: []},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape', kind: "classdeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.html', attributes: []},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.chain', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.chainEdge', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.chainPosition', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.dimension', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.edge', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.initialize', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.initialize.html', attributes: []},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.Loop', kind: "aliasdeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.Loop.html', attributes: []},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.loopVertex', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.loopVertex.html', attributes: ["const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.loopVertices', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.loopVertices.html', attributes: ["const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.numChains', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.numEdges', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.numLoops', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.numLoops.html', attributes: ["const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.numLoopVertices', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.numLoopVertices.html', attributes: ["const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.numVertices', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.numVertices.html', attributes: ["const"]},
{name: 's2.s2lax_polygon_shape.S2LaxPolygonShape.this', kind: "functiondeclaration", path: './s2/s2lax_polygon_shape/S2LaxPolygonShape.this.html', attributes: []},
{name: 's2.s2lax_polyline_shape', kind: "module", path: './s2/s2lax_polyline_shape.html', attributes: []},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape', kind: "classdeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.html', attributes: []},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.chain', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.chainEdge', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.chainPosition', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.dimension', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.edge', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.init', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.init.html', attributes: []},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.numChains', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.numEdges', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.numVertices', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.numVertices.html', attributes: ["const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.this', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.this.html', attributes: []},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.vertex', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.vertex.html', attributes: ["const"]},
{name: 's2.s2lax_polyline_shape.S2LaxPolylineShape.vertices', kind: "functiondeclaration", path: './s2/s2lax_polyline_shape/S2LaxPolylineShape.vertices.html', attributes: ["const"]},
{name: 's2.s2loop', kind: "module", path: './s2/s2loop.html', attributes: []},
{name: 's2.s2loop.CompareBoundaryRelation', kind: "classdeclaration", path: './s2/s2loop/CompareBoundaryRelation.html', attributes: []},
{name: 's2.s2loop.CompareBoundaryRelation.aCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/CompareBoundaryRelation.aCrossingTarget.html', attributes: ["override", "const"]},
{name: 's2.s2loop.CompareBoundaryRelation.bCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/CompareBoundaryRelation.bCrossingTarget.html', attributes: ["override", "const"]},
{name: 's2.s2loop.CompareBoundaryRelation.containsEdge', kind: "functiondeclaration", path: './s2/s2loop/CompareBoundaryRelation.containsEdge.html', attributes: ["const"]},
{name: 's2.s2loop.CompareBoundaryRelation.foundSharedVertex', kind: "functiondeclaration", path: './s2/s2loop/CompareBoundaryRelation.foundSharedVertex.html', attributes: ["const"]},
{name: 's2.s2loop.CompareBoundaryRelation.this', kind: "functiondeclaration", path: './s2/s2loop/CompareBoundaryRelation.this.html', attributes: []},
{name: 's2.s2loop.CompareBoundaryRelation.wedgesCross', kind: "functiondeclaration", path: './s2/s2loop/CompareBoundaryRelation.wedgesCross.html', attributes: ["override"]},
{name: 's2.s2loop.CompareBoundaryRelation._containsEdge', kind: "variabledeclaration", path: './s2/s2loop/CompareBoundaryRelation._containsEdge.html', attributes: []},
{name: 's2.s2loop.CompareBoundaryRelation._excludesEdge', kind: "variabledeclaration", path: './s2/s2loop/CompareBoundaryRelation._excludesEdge.html', attributes: []},
{name: 's2.s2loop.CompareBoundaryRelation._foundSharedVertex', kind: "variabledeclaration", path: './s2/s2loop/CompareBoundaryRelation._foundSharedVertex.html', attributes: []},
{name: 's2.s2loop.CompareBoundaryRelation._reverseB', kind: "variabledeclaration", path: './s2/s2loop/CompareBoundaryRelation._reverseB.html', attributes: []},
{name: 's2.s2loop.ContainsRelation', kind: "classdeclaration", path: './s2/s2loop/ContainsRelation.html', attributes: []},
{name: 's2.s2loop.ContainsRelation.aCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/ContainsRelation.aCrossingTarget.html', attributes: ["override", "const"]},
{name: 's2.s2loop.ContainsRelation.bCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/ContainsRelation.bCrossingTarget.html', attributes: ["override", "const"]},
{name: 's2.s2loop.ContainsRelation.foundSharedVertex', kind: "functiondeclaration", path: './s2/s2loop/ContainsRelation.foundSharedVertex.html', attributes: ["const"]},
{name: 's2.s2loop.ContainsRelation.this', kind: "functiondeclaration", path: './s2/s2loop/ContainsRelation.this.html', attributes: []},
{name: 's2.s2loop.ContainsRelation.wedgesCross', kind: "functiondeclaration", path: './s2/s2loop/ContainsRelation.wedgesCross.html', attributes: ["override"]},
{name: 's2.s2loop.IntersectsRelation', kind: "classdeclaration", path: './s2/s2loop/IntersectsRelation.html', attributes: []},
{name: 's2.s2loop.IntersectsRelation.aCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/IntersectsRelation.aCrossingTarget.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.IntersectsRelation.bCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/IntersectsRelation.bCrossingTarget.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.IntersectsRelation.foundSharedVertex', kind: "functiondeclaration", path: './s2/s2loop/IntersectsRelation.foundSharedVertex.html', attributes: ["const"]},
{name: 's2.s2loop.IntersectsRelation.this', kind: "functiondeclaration", path: './s2/s2loop/IntersectsRelation.this.html', attributes: []},
{name: 's2.s2loop.IntersectsRelation.wedgesCross', kind: "functiondeclaration", path: './s2/s2loop/IntersectsRelation.wedgesCross.html', attributes: ["override"]},
{name: 's2.s2loop.LAZY_INDEXING', kind: "enummemberdeclaration", path: './s2/s2loop/LAZY_INDEXING.html', attributes: []},
{name: 's2.s2loop.LoopCrosser', kind: "classdeclaration", path: './s2/s2loop/LoopCrosser.html', attributes: []},
{name: 's2.s2loop.LoopCrosser.aCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.aCrossingTarget.html', attributes: ["const"]},
{name: 's2.s2loop.LoopCrosser.bCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.bCrossingTarget.html', attributes: ["const"]},
{name: 's2.s2loop.LoopCrosser.cellCrossesCell', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.cellCrossesCell.html', attributes: []},
{name: 's2.s2loop.LoopCrosser.hasCrossingRelation', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.hasCrossingRelation.html', attributes: []},
{name: 's2.s2loop.LoopCrosser.this', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.this.html', attributes: []},
{name: 's2.s2loop.LoopRelation', kind: "classdeclaration", path: './s2/s2loop/LoopRelation.html', attributes: []},
{name: 's2.s2loop.LoopRelation.aCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/LoopRelation.aCrossingTarget.html', attributes: ["const"]},
{name: 's2.s2loop.LoopRelation.bCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/LoopRelation.bCrossingTarget.html', attributes: ["const"]},
{name: 's2.s2loop.LoopRelation.this', kind: "functiondeclaration", path: './s2/s2loop/LoopRelation.this.html', attributes: []},
{name: 's2.s2loop.LoopRelation.wedgesCross', kind: "functiondeclaration", path: './s2/s2loop/LoopRelation.wedgesCross.html', attributes: []},
{name: 's2.s2loop.RangeIterator', kind: "classdeclaration", path: './s2/s2loop/RangeIterator.html', attributes: []},
{name: 's2.s2loop.RangeIterator.cell', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.cell.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.clipped', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.clipped.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.containsCenter', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.containsCenter.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.done', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.done.html', attributes: []},
{name: 's2.s2loop.RangeIterator.id', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.id.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.next', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.next.html', attributes: []},
{name: 's2.s2loop.RangeIterator.numEdges', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.numEdges.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.rangeMax', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.rangeMax.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.rangeMin', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.rangeMin.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.seekBeyond', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.seekBeyond.html', attributes: []},
{name: 's2.s2loop.RangeIterator.seekTo', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.seekTo.html', attributes: []},
{name: 's2.s2loop.RangeIterator.this', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.this.html', attributes: []},
{name: 's2.s2loop.S2Loop', kind: "classdeclaration", path: './s2/s2loop/S2Loop.html', attributes: []},
{name: 's2.s2loop.S2Loop.boundaryApproxEquals', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.boundaryApproxEquals.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.boundaryEquals', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.boundaryEquals.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.boundaryNear', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.boundaryNear.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.clone', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.clone.html', attributes: ["override", "const"]},
{name: 's2.s2loop.S2Loop.compareBoundary', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.compareBoundary.html', attributes: []},
{name: 's2.s2loop.S2Loop.contains', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.contains.html', attributes: []},
{name: 's2.s2loop.S2Loop.containsNested', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.containsNested.html', attributes: []},
{name: 's2.s2loop.S2Loop.decode', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.decode.html', attributes: []},
{name: 's2.s2loop.S2Loop.depth', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.depth.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.empty', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.empty.html', attributes: ["static"]},
{name: 's2.s2loop.S2Loop.encode', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.encode.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.equals', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.equals.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.findValidationError', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.findValidationError.html', attributes: []},
{name: 's2.s2loop.S2Loop.findValidationErrorNoIndex', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.findValidationErrorNoIndex.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.full', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.full.html', attributes: ["static"]},
{name: 's2.s2loop.S2Loop.getArea', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getArea.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getCapBound', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getCapBound.html', attributes: ["override", "const"]},
{name: 's2.s2loop.S2Loop.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getCellUnionBound.html', attributes: ["override", "const"]},
{name: 's2.s2loop.S2Loop.getCentroid', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getCentroid.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getDistance', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getDistance.html', attributes: []},
{name: 's2.s2loop.S2Loop.getDistanceToBoundary', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getDistanceToBoundary.html', attributes: []},
{name: 's2.s2loop.S2Loop.getRectBound', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getRectBound.html', attributes: ["override"]},
{name: 's2.s2loop.S2Loop.getSurfaceIntegral', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getSurfaceIntegral.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getTurningAngle', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getTurningAngle.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getTurningAngleMaxError', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getTurningAngleMaxError.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.initialize', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.initialize.html', attributes: []},
{name: 's2.s2loop.S2Loop.intersects', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.intersects.html', attributes: []},
{name: 's2.s2loop.S2Loop.invert', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.invert.html', attributes: []},
{name: 's2.s2loop.S2Loop.isEmpty', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isEmpty.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isEmptyOrFull', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isEmptyOrFull.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isFull', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isFull.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isHole', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isHole.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isNormalized', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isNormalized.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isValid', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isValid.html', attributes: []},
{name: 's2.s2loop.S2Loop.makeRegularLoop', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.makeRegularLoop.html', attributes: ["static"]},
{name: 's2.s2loop.S2Loop.mayIntersect', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.mayIntersect.html', attributes: ["override"]},
{name: 's2.s2loop.S2Loop.normalize', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.normalize.html', attributes: []},
{name: 's2.s2loop.S2Loop.numVertices', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.numVertices.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.opCmp', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.opCmp.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.orientedVertex', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.orientedVertex.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.project', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.project.html', attributes: []},
{name: 's2.s2loop.S2Loop.projectToBoundary', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.projectToBoundary.html', attributes: []},
{name: 's2.s2loop.S2Loop.s2DebugOverride', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.s2DebugOverride.html', attributes: ["property"]},
{name: 's2.s2loop.S2Loop.setDepth', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.setDepth.html', attributes: []},
{name: 's2.s2loop.S2Loop.Shape', kind: "classdeclaration", path: './s2/s2loop/S2Loop.Shape.html', attributes: []},
{name: 's2.s2loop.S2Loop.Shape.chain', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.chainEdge', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.chainPosition', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.dimension', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.edge', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.initialize', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.initialize.html', attributes: []},
{name: 's2.s2loop.S2Loop.Shape.loop', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.loop.html', attributes: ["inout"]},
{name: 's2.s2loop.S2Loop.Shape.numChains', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.numEdges', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2loop.S2Loop.Shape.this', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.this.html', attributes: []},
{name: 's2.s2loop.S2Loop.sign', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.sign.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.spaceUsed', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.spaceUsed.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.this', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.this.html', attributes: []},
{name: 's2.s2loop.S2Loop.vertex', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.vertex.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.vertices', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.vertices.html', attributes: ["const"]},
{name: 's2.s2region.S2Region.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2region/S2Region.getCellUnionBound.html', attributes: ["abstract"]},
{name: 's2.s2measures', kind: "module", path: './s2/s2measures.html', attributes: []},
{name: 's2.s2measures.angle', kind: "functiondeclaration", path: './s2/s2measures/angle.html', attributes: []},
{name: 's2.s2measures.area', kind: "functiondeclaration", path: './s2/s2measures/area.html', attributes: []},
{name: 's2.s2measures.girardArea', kind: "functiondeclaration", path: './s2/s2measures/girardArea.html', attributes: []},
{name: 's2.s2measures.signedArea', kind: "functiondeclaration", path: './s2/s2measures/signedArea.html', attributes: []},
{name: 's2.s2measures.turnAngle', kind: "functiondeclaration", path: './s2/s2measures/turnAngle.html', attributes: []},
{name: 's2.s2metrics', kind: "module", path: './s2/s2metrics.html', attributes: []},
{name: 's2.s2metrics.AreaMetric', kind: "aliasdeclaration", path: './s2/s2metrics/AreaMetric.html', attributes: []},
{name: 's2.s2metrics.AVG_ANGLE_SPAN', kind: "variabledeclaration", path: './s2/s2metrics/AVG_ANGLE_SPAN.html', attributes: []},
{name: 's2.s2metrics.AVG_AREA', kind: "variabledeclaration", path: './s2/s2metrics/AVG_AREA.html', attributes: []},
{name: 's2.s2metrics.AVG_DIAG', kind: "variabledeclaration", path: './s2/s2metrics/AVG_DIAG.html', attributes: []},
{name: 's2.s2metrics.AVG_EDGE', kind: "variabledeclaration", path: './s2/s2metrics/AVG_EDGE.html', attributes: []},
{name: 's2.s2metrics.AVG_WIDTH', kind: "variabledeclaration", path: './s2/s2metrics/AVG_WIDTH.html', attributes: []},
{name: 's2.s2metrics.LengthMetric', kind: "aliasdeclaration", path: './s2/s2metrics/LengthMetric.html', attributes: []},
{name: 's2.s2metrics.MAX_ANGLE_SPAN', kind: "variabledeclaration", path: './s2/s2metrics/MAX_ANGLE_SPAN.html', attributes: []},
{name: 's2.s2metrics.MAX_AREA', kind: "variabledeclaration", path: './s2/s2metrics/MAX_AREA.html', attributes: []},
{name: 's2.s2metrics.MAX_DIAG', kind: "variabledeclaration", path: './s2/s2metrics/MAX_DIAG.html', attributes: []},
{name: 's2.s2metrics.MAX_DIAG_ASPECT', kind: "variabledeclaration", path: './s2/s2metrics/MAX_DIAG_ASPECT.html', attributes: []},
{name: 's2.s2metrics.MAX_EDGE', kind: "variabledeclaration", path: './s2/s2metrics/MAX_EDGE.html', attributes: []},
{name: 's2.s2metrics.MAX_EDGE_ASPECT', kind: "variabledeclaration", path: './s2/s2metrics/MAX_EDGE_ASPECT.html', attributes: []},
{name: 's2.s2metrics.MAX_WIDTH', kind: "variabledeclaration", path: './s2/s2metrics/MAX_WIDTH.html', attributes: []},
{name: 's2.s2metrics.Metric', kind: "structdeclaration", path: './s2/s2metrics/Metric.html', attributes: []},
{name: 's2.s2metrics.Metric._deriv', kind: "variabledeclaration", path: './s2/s2metrics/Metric._deriv.html', attributes: []},
{name: 's2.s2metrics.Metric.deriv', kind: "functiondeclaration", path: './s2/s2metrics/Metric.deriv.html', attributes: ["const", "property"]},
{name: 's2.s2metrics.Metric.getClosestLevel', kind: "functiondeclaration", path: './s2/s2metrics/Metric.getClosestLevel.html', attributes: ["const"]},
{name: 's2.s2metrics.Metric.getLevelForMaxValue', kind: "functiondeclaration", path: './s2/s2metrics/Metric.getLevelForMaxValue.html', attributes: ["const"]},
{name: 's2.s2metrics.Metric.getLevelForMinValue', kind: "functiondeclaration", path: './s2/s2metrics/Metric.getLevelForMinValue.html', attributes: ["const"]},
{name: 's2.s2metrics.Metric.getValue', kind: "functiondeclaration", path: './s2/s2metrics/Metric.getValue.html', attributes: ["const"]},
{name: 's2.s2metrics.Metric.this', kind: "functiondeclaration", path: './s2/s2metrics/Metric.this.html', attributes: []},
{name: 's2.s2metrics.MIN_ANGLE_SPAN', kind: "variabledeclaration", path: './s2/s2metrics/MIN_ANGLE_SPAN.html', attributes: []},
{name: 's2.s2metrics.MIN_AREA', kind: "variabledeclaration", path: './s2/s2metrics/MIN_AREA.html', attributes: []},
{name: 's2.s2metrics.MIN_DIAG', kind: "variabledeclaration", path: './s2/s2metrics/MIN_DIAG.html', attributes: []},
{name: 's2.s2metrics.MIN_EDGE', kind: "variabledeclaration", path: './s2/s2metrics/MIN_EDGE.html', attributes: []},
{name: 's2.s2metrics.MIN_WIDTH', kind: "variabledeclaration", path: './s2/s2metrics/MIN_WIDTH.html', attributes: []},
{name: 's2.s2min_distance_targets', kind: "module", path: './s2/s2min_distance_targets.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistance', kind: "structdeclaration", path: './s2/s2min_distance_targets/S2MinDistance.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistance.Delta', kind: "aliasdeclaration", path: './s2/s2min_distance_targets/S2MinDistance.Delta.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistance.getChordAngleBound', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistance.getChordAngleBound.html', attributes: ["const"]},
{name: 's2.s2min_distance_targets.S2MinDistance.infinity', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistance.infinity.html', attributes: ["static"]},
{name: 's2.s2min_distance_targets.S2MinDistance.negative', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistance.negative.html', attributes: ["static"]},
{name: 's2.s2min_distance_targets.S2MinDistance.opCmp', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistance.opCmp.html', attributes: ["const"]},
{name: 's2.s2min_distance_targets.S2MinDistance.s1ChordAngle', kind: "variabledeclaration", path: './s2/s2min_distance_targets/S2MinDistance.s1ChordAngle.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistance.updateMin', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistance.updateMin.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistance.zero', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistance.zero.html', attributes: ["static"]},
{name: 's2.s2min_distance_targets.S2MinDistanceCellTarget', kind: "classdeclaration", path: './s2/s2min_distance_targets/S2MinDistanceCellTarget.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceCellTarget.this', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceCellTarget.this.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceEdgeTarget', kind: "classdeclaration", path: './s2/s2min_distance_targets/S2MinDistanceEdgeTarget.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceEdgeTarget.this', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceEdgeTarget.this.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistancePointTarget', kind: "classdeclaration", path: './s2/s2min_distance_targets/S2MinDistancePointTarget.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistancePointTarget.this', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistancePointTarget.this.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget', kind: "classdeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceShapeIndexTarget.this', kind: "functiondeclaration", path: './s2/s2min_distance_targets/S2MinDistanceShapeIndexTarget.this.html', attributes: []},
{name: 's2.s2min_distance_targets.S2MinDistanceTarget', kind: "aliasdeclaration", path: './s2/s2min_distance_targets/S2MinDistanceTarget.html', attributes: []},
{name: 's2.s2padded_cell', kind: "module", path: './s2/s2padded_cell.html', attributes: []},
{name: 's2.s2padded_cell.S2PaddedCell', kind: "classdeclaration", path: './s2/s2padded_cell/S2PaddedCell.html', attributes: []},
{name: 's2.s2padded_cell.S2PaddedCell.bound', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.bound.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.getCenter', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.getCenter.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.getChildIJ', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.getChildIJ.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.getEntryVertex', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.getEntryVertex.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.getExitVertex', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.getExitVertex.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.id', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.id.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.level', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.level.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.middle', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.middle.html', attributes: []},
{name: 's2.s2padded_cell.S2PaddedCell.padding', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.padding.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.shrinkToFit', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.shrinkToFit.html', attributes: ["const"]},
{name: 's2.s2padded_cell.S2PaddedCell.this', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.this.html', attributes: []},
{name: 's2.s2padded_cell.S2PaddedCell.toString', kind: "functiondeclaration", path: './s2/s2padded_cell/S2PaddedCell.toString.html', attributes: ["override", "const"]},
{name: 's2.s2point', kind: "module", path: './s2/s2point.html', attributes: []},
{name: 's2.s2point.S2Point', kind: "aliasdeclaration", path: './s2/s2point/S2Point.html', attributes: []},
{name: 's2.s2point_compression', kind: "module", path: './s2/s2point_compression.html', attributes: []},
{name: 's2.s2point_compression.S2XYZFaceSiTi', kind: "structdeclaration", path: './s2/s2point_compression/S2XYZFaceSiTi.html', attributes: []},
{name: 's2.s2point_compression.S2XYZFaceSiTi.cellLevel', kind: "variabledeclaration", path: './s2/s2point_compression/S2XYZFaceSiTi.cellLevel.html', attributes: []},
{name: 's2.s2point_compression.S2XYZFaceSiTi.face', kind: "variabledeclaration", path: './s2/s2point_compression/S2XYZFaceSiTi.face.html', attributes: []},
{name: 's2.s2point_compression.S2XYZFaceSiTi.si', kind: "variabledeclaration", path: './s2/s2point_compression/S2XYZFaceSiTi.si.html', attributes: []},
{name: 's2.s2point_compression.S2XYZFaceSiTi.ti', kind: "variabledeclaration", path: './s2/s2point_compression/S2XYZFaceSiTi.ti.html', attributes: []},
{name: 's2.s2point_compression.S2XYZFaceSiTi.xyz', kind: "variabledeclaration", path: './s2/s2point_compression/S2XYZFaceSiTi.xyz.html', attributes: []},
{name: 's2.s2point_index', kind: "module", path: './s2/s2point_index.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex', kind: "classdeclaration", path: './s2/s2point_index/S2PointIndex.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex._map', kind: "variabledeclaration", path: './s2/s2point_index/S2PointIndex._map.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.add', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.add.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.clear', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.clear.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator', kind: "structdeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator._end', kind: "variabledeclaration", path: './s2/s2point_index/S2PointIndex.Iterator._end.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator._iter', kind: "variabledeclaration", path: './s2/s2point_index/S2PointIndex.Iterator._iter.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator._map', kind: "variabledeclaration", path: './s2/s2point_index/S2PointIndex.Iterator._map.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator.begin', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.begin.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator.data', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.data.html', attributes: ["inout"]},
{name: 's2.s2point_index.S2PointIndex.Iterator.done', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.done.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.Iterator.finish', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.finish.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator.id', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.id.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.Iterator.initialize', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.initialize.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator.next', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.next.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator.point', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.point.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.Iterator.pointData', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.pointData.html', attributes: ["inout"]},
{name: 's2.s2point_index.S2PointIndex.Iterator.prev', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.prev.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator.seek', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.seek.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Iterator.this', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.Iterator.this.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.Map', kind: "aliasdeclaration", path: './s2/s2point_index/S2PointIndex.Map.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.numPoints', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.numPoints.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.PointData', kind: "classdeclaration", path: './s2/s2point_index/S2PointIndex.PointData.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.PointData._data', kind: "variabledeclaration", path: './s2/s2point_index/S2PointIndex.PointData._data.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.PointData._point', kind: "variabledeclaration", path: './s2/s2point_index/S2PointIndex.PointData._point.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.PointData.data', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.PointData.data.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.PointData.opCmp', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.PointData.opCmp.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.PointData.opEquals', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.PointData.opEquals.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.PointData.point', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.PointData.point.html', attributes: ["const"]},
{name: 's2.s2point_index.S2PointIndex.PointData.this', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.PointData.this.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.PointData.toString', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.PointData.toString.html', attributes: ["override", "const"]},
{name: 's2.s2point_index.S2PointIndex.remove', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.remove.html', attributes: []},
{name: 's2.s2point_index.S2PointIndex.this', kind: "functiondeclaration", path: './s2/s2point_index/S2PointIndex.this.html', attributes: []},
{name: 's2.s2point_vector_shape', kind: "module", path: './s2/s2point_vector_shape.html', attributes: []},
{name: 's2.s2point_vector_shape.S2PointVectorShape', kind: "classdeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.html', attributes: []},
{name: 's2.s2point_vector_shape.S2PointVectorShape.chain', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.chainEdge', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.chainPosition', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.dimension', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.edge', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.numChains', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.numEdges', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.numPoints', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.numPoints.html', attributes: ["const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.point', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.point.html', attributes: ["const"]},
{name: 's2.s2point_vector_shape.S2PointVectorShape.this', kind: "functiondeclaration", path: './s2/s2point_vector_shape/S2PointVectorShape.this.html', attributes: []},
{name: 's2.s2pointutil', kind: "module", path: './s2/s2pointutil.html', attributes: []},
{name: 's2.s2pointutil.approxEquals', kind: "functiondeclaration", path: './s2/s2pointutil/approxEquals.html', attributes: []},
{name: 's2.s2pointutil.fromFrame', kind: "functiondeclaration", path: './s2/s2pointutil/fromFrame.html', attributes: []},
{name: 's2.s2pointutil.getFrame', kind: "functiondeclaration", path: './s2/s2pointutil/getFrame.html', attributes: []},
{name: 's2.s2pointutil.isUnitLength', kind: "functiondeclaration", path: './s2/s2pointutil/isUnitLength.html', attributes: []},
{name: 's2.s2pointutil.origin', kind: "functiondeclaration", path: './s2/s2pointutil/origin.html', attributes: []},
{name: 's2.s2pointutil.ortho', kind: "functiondeclaration", path: './s2/s2pointutil/ortho.html', attributes: []},
{name: 's2.s2pointutil.robustCrossProd', kind: "functiondeclaration", path: './s2/s2pointutil/robustCrossProd.html', attributes: []},
{name: 's2.s2pointutil.rotate', kind: "functiondeclaration", path: './s2/s2pointutil/rotate.html', attributes: []},
{name: 's2.s2pointutil.simpleCCW', kind: "functiondeclaration", path: './s2/s2pointutil/simpleCCW.html', attributes: ["deprecated"]},
{name: 's2.s2pointutil.toFrame', kind: "functiondeclaration", path: './s2/s2pointutil/toFrame.html', attributes: []},
{name: 's2.s2polygon', kind: "module", path: './s2/s2polygon.html', attributes: []},
{name: 's2.s2polygon.S2Polygon', kind: "classdeclaration", path: './s2/s2polygon/S2Polygon.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxContains', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxContains.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxDisjoint', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxDisjoint.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxEquals.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxIntersectWithPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxIntersectWithPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxSubtractFromPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxSubtractFromPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.boundaryApproxEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.boundaryApproxEquals.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.boundaryEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.boundaryEquals.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.boundaryNear', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.boundaryNear.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.clone', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.clone.html', attributes: ["override", "const"]},
{name: 's2.s2polygon.S2Polygon.contains', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.contains.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.copy', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.copy.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.decode', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.decode.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.destructiveApproxUnion', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.destructiveApproxUnion.html', attributes: ["static"]},
{name: 's2.s2polygon.S2Polygon.destructiveUnion', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.destructiveUnion.html', attributes: ["static"]},
{name: 's2.s2polygon.S2Polygon.encode', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.encode.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.findValidationError', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.findValidationError.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.getArea', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getArea.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getCapBound', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getCapBound.html', attributes: ["override", "const"]},
{name: 's2.s2polygon.S2Polygon.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2polygon.S2Polygon.getCentroid', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getCentroid.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getDistance', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getDistance.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.getDistanceToBoundary', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getDistanceToBoundary.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.getLastDescendant', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getLastDescendant.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getOverlapFractions', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getOverlapFractions.html', attributes: ["static"]},
{name: 's2.s2polygon.S2Polygon.getParent', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getParent.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getRectBound', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getRectBound.html', attributes: ["override", "const"]},
{name: 's2.s2polygon.S2Polygon.getSnapLevel', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getSnapLevel.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.index', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.index.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initialize', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initialize.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeNested', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeNested.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeOriented', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeOriented.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToApproxDifference', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToApproxDifference.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToApproxIntersection', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToApproxIntersection.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToApproxSymmetricDifference', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToApproxSymmetricDifference.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToApproxUnion', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToApproxUnion.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToCellUnionBorder', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToCellUnionBorder.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToComplement', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToComplement.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToDifference', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToDifference.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToIntersection', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToIntersection.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToSimplified', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToSimplified.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToSimplifiedInCell', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToSimplifiedInCell.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToSnapped', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToSnapped.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToSymmetricDifference', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToSymmetricDifference.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToUnion', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToUnion.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.intersects', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.intersects.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.intersectWithPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.intersectWithPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.invert', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.invert.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.isEmpty', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isEmpty.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.isFull', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isFull.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.isNormalized', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isNormalized.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.isValid', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isValid.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.loop', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.loop.html', attributes: ["inout"]},
{name: 's2.s2polygon.S2Polygon.mayIntersect', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.mayIntersect.html', attributes: ["override"]},
{name: 's2.s2polygon.S2Polygon.numLoops', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.numLoops.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.numVertices', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.numVertices.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.opEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.opEquals.html', attributes: ["override", "const"]},
{name: 's2.s2polygon.S2Polygon.OverlapFractions', kind: "structdeclaration", path: './s2/s2polygon/S2Polygon.OverlapFractions.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.OverlapFractions.first', kind: "variabledeclaration", path: './s2/s2polygon/S2Polygon.OverlapFractions.first.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.OverlapFractions.second', kind: "variabledeclaration", path: './s2/s2polygon/S2Polygon.OverlapFractions.second.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.project', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.project.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.projectToBoundary', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.projectToBoundary.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.release', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.release.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.s2debugOverride', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.s2debugOverride.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.setS2debugOverride', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.setS2debugOverride.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.Shape', kind: "classdeclaration", path: './s2/s2polygon/S2Polygon.Shape.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.Shape.chain', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.chain.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.chainEdge', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.chainEdge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.chainPosition', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.chainPosition.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.dimension', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.dimension.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.edge', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.edge.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.getReferencePoint.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.initialize', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.initialize.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.Shape.numChains', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.numChains.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.numEdges', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.polygon', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.polygon.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.Shape.this', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.this.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.spaceUsed', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.spaceUsed.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.subtractFromPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.subtractFromPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.this', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.this.html', attributes: []},
{name: 's2.s2polygon.S2POLYGON_LAZY_INDEXING', kind: "enummemberdeclaration", path: './s2/s2polygon/S2POLYGON_LAZY_INDEXING.html', attributes: []},
{name: 's2.s2polyline', kind: "module", path: './s2/s2polyline.html', attributes: []},
{name: 's2.s2polyline.S2Polyline', kind: "classdeclaration", path: './s2/s2polyline/S2Polyline.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.approxEquals', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.approxEquals.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.clone', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.clone.html', attributes: ["override"]},
{name: 's2.s2polyline.S2Polyline.contains', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.contains.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.decode', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.decode.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.encode', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.encode.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.findValidationError', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.findValidationError.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.getCapBound', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.getCapBound.html', attributes: ["override"]},
{name: 's2.s2polyline.S2Polyline.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2polyline.S2Polyline.getCentroid', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.getCentroid.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.getLength', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.getLength.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.getRectBound', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.getRectBound.html', attributes: ["override"]},
{name: 's2.s2polyline.S2Polyline.getSuffix', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.getSuffix.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.initialize', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.initialize.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.interpolate', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.interpolate.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.intersects', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.intersects.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.isOnRight', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.isOnRight.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.isValid', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.isValid.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.mayIntersect', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.mayIntersect.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.nearlyCovers', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.nearlyCovers.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.numVertices', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.numVertices.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.opEquals', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.opEquals.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.project', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.project.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.reverse', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.reverse.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.s2debugOverride', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.s2debugOverride.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.setS2debugOverride', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.setS2debugOverride.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.Shape', kind: "classdeclaration", path: './s2/s2polyline/S2Polyline.Shape.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.Shape.chain', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.chain.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.chainEdge', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.chainEdge.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.chainPosition', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.chainPosition.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.dimension', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.dimension.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.edge', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.edge.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.getReferencePoint.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.init', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.init.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.Shape.numChains', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.numChains.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.numEdges', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.numEdges.html', attributes: ["override", "const"]},
{name: 's2.s2polyline.S2Polyline.Shape.polyline', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.polyline.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.Shape.this', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.Shape.this.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.spaceUsed', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.spaceUsed.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.subsampleVertices', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.subsampleVertices.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.this', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.this.html', attributes: []},
{name: 's2.s2polyline.S2Polyline.unInterpolate', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.unInterpolate.html', attributes: ["const"]},
{name: 's2.s2polyline.S2Polyline.vertex', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.vertex.html', attributes: ["ref", "const"]},
{name: 's2.s2polyline.S2Polyline.vertices', kind: "functiondeclaration", path: './s2/s2polyline/S2Polyline.vertices.html', attributes: ["const"]},
{name: 's2.s2polyline_simplifier', kind: "module", path: './s2/s2polyline_simplifier.html', attributes: []},
{name: 's2.s2polyline_simplifier.S2PolylineSimplifier', kind: "classdeclaration", path: './s2/s2polyline_simplifier/S2PolylineSimplifier.html', attributes: []},
{name: 's2.s2polyline_simplifier.S2PolylineSimplifier.avoidDisc', kind: "functiondeclaration", path: './s2/s2polyline_simplifier/S2PolylineSimplifier.avoidDisc.html', attributes: []},
{name: 's2.s2polyline_simplifier.S2PolylineSimplifier.extend', kind: "functiondeclaration", path: './s2/s2polyline_simplifier/S2PolylineSimplifier.extend.html', attributes: ["const"]},
{name: 's2.s2polyline_simplifier.S2PolylineSimplifier.initialize', kind: "functiondeclaration", path: './s2/s2polyline_simplifier/S2PolylineSimplifier.initialize.html', attributes: []},
{name: 's2.s2polyline_simplifier.S2PolylineSimplifier.targetDisc', kind: "functiondeclaration", path: './s2/s2polyline_simplifier/S2PolylineSimplifier.targetDisc.html', attributes: []},
{name: 's2.s2polyline_simplifier.S2PolylineSimplifier.this', kind: "functiondeclaration", path: './s2/s2polyline_simplifier/S2PolylineSimplifier.this.html', attributes: []},
{name: 's2.s2predicates', kind: "module", path: './s2/s2predicates.html', attributes: []},
{name: 's2.s2predicates.compareDistance', kind: "functiondeclaration", path: './s2/s2predicates/compareDistance.html', attributes: []},
{name: 's2.s2predicates.compareDistances', kind: "functiondeclaration", path: './s2/s2predicates/compareDistances.html', attributes: []},
{name: 's2.s2predicates.compareEdgeDirections', kind: "functiondeclaration", path: './s2/s2predicates/compareEdgeDirections.html', attributes: []},
{name: 's2.s2predicates.compareEdgeDistance', kind: "functiondeclaration", path: './s2/s2predicates/compareEdgeDistance.html', attributes: []},
{name: 's2.s2predicates.DBL_ERR', kind: "variabledeclaration", path: './s2/s2predicates/DBL_ERR.html', attributes: []},
{name: 's2.s2predicates.edgeCircumcenterSign', kind: "functiondeclaration", path: './s2/s2predicates/edgeCircumcenterSign.html', attributes: []},
{name: 's2.s2predicates.exactVoronoiSiteExclusion', kind: "functiondeclaration", path: './s2/s2predicates/exactVoronoiSiteExclusion.html', attributes: []},
{name: 's2.s2predicates.Excluded', kind: "enumdeclaration", path: './s2/s2predicates/Excluded.html', attributes: []},
{name: 's2.s2predicates.Excluded.FIRST', kind: "enummemberdeclaration", path: './s2/s2predicates/Excluded.html#FIRST', attributes: []},
{name: 's2.s2predicates.Excluded.NEITHER', kind: "enummemberdeclaration", path: './s2/s2predicates/Excluded.html#NEITHER', attributes: []},
{name: 's2.s2predicates.Excluded.SECOND', kind: "enummemberdeclaration", path: './s2/s2predicates/Excluded.html#SECOND', attributes: []},
{name: 's2.s2predicates.Excluded.UNCERTAIN', kind: "enummemberdeclaration", path: './s2/s2predicates/Excluded.html#UNCERTAIN', attributes: []},
{name: 's2.s2predicates.expensiveSign', kind: "functiondeclaration", path: './s2/s2predicates/expensiveSign.html', attributes: []},
{name: 's2.s2predicates.getVoronoiSiteExclusion', kind: "functiondeclaration", path: './s2/s2predicates/getVoronoiSiteExclusion.html', attributes: []},
{name: 's2.s2predicates.orderedCCW', kind: "functiondeclaration", path: './s2/s2predicates/orderedCCW.html', attributes: []},
{name: 's2.s2predicates.REAL_ERR', kind: "variabledeclaration", path: './s2/s2predicates/REAL_ERR.html', attributes: []},
{name: 's2.s2predicates.roundingEpsilon', kind: "functiondeclaration", path: './s2/s2predicates/roundingEpsilon.html', attributes: []},
{name: 's2.s2predicates.sign', kind: "functiondeclaration", path: './s2/s2predicates/sign.html', attributes: []},
{name: 's2.s2predicates.symbolicEdgeCircumcenterSign', kind: "functiondeclaration", path: './s2/s2predicates/symbolicEdgeCircumcenterSign.html', attributes: []},
{name: 's2.s2predicates.triageCompareCosDistance', kind: "functiondeclaration", path: './s2/s2predicates/triageCompareCosDistance.html', attributes: []},
{name: 's2.s2predicates.triageCompareSin2Distance', kind: "functiondeclaration", path: './s2/s2predicates/triageCompareSin2Distance.html', attributes: []},
{name: 's2.s2predicates.triageSign', kind: "functiondeclaration", path: './s2/s2predicates/triageSign.html', attributes: []},
{name: 's2.s2predicates.unperturbedSign', kind: "functiondeclaration", path: './s2/s2predicates/unperturbedSign.html', attributes: []},
{name: 's2.s2predicates.Vector3_xf', kind: "aliasdeclaration", path: './s2/s2predicates/Vector3_xf.html', attributes: []},
{name: 's2.s2region', kind: "module", path: './s2/s2region.html', attributes: []},
{name: 's2.s2region.S2Region', kind: "interfacedeclaration", path: './s2/s2region/S2Region.html', attributes: []},
{name: 's2.s2region_coverer', kind: "module", path: './s2/s2region_coverer.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer', kind: "classdeclaration", path: './s2/s2region_coverer/S2RegionCoverer.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.canonicalizeCovering', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.canonicalizeCovering.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.floodFill', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.floodFill.html', attributes: ["static"]},
{name: 's2.s2region_coverer.S2RegionCoverer.getCovering', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.getCovering.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.getFastCovering', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.getFastCovering.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.getInteriorCovering', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.getInteriorCovering.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.getSimpleCovering', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.getSimpleCovering.html', attributes: ["static"]},
{name: 's2.s2region_coverer.S2RegionCoverer.isCanonical', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.isCanonical.html', attributes: ["const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.mutableOptions', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.mutableOptions.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options', kind: "classdeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.DEFAULT_MAX_CELLS', kind: "enummemberdeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.DEFAULT_MAX_CELLS.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.levelMod', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.levelMod.html', attributes: ["const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.maxCells', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.maxCells.html', attributes: ["const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.maxLevel', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.maxLevel.html', attributes: ["const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.minLevel', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.minLevel.html', attributes: ["const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.setFixedLevel', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.setFixedLevel.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.setLevelMod', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.setLevelMod.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.setMaxCells', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.setMaxCells.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.setMaxLevel', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.setMaxLevel.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.setMinLevel', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.setMinLevel.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.toString', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.toString.html', attributes: ["override", "const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.Options.trueMaxLevel', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options.trueMaxLevel.html', attributes: ["const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.Options._levelMod', kind: "variabledeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options._levelMod.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options._maxCells', kind: "variabledeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options._maxCells.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options._maxLevel', kind: "variabledeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options._maxLevel.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.Options._minLevel', kind: "variabledeclaration", path: './s2/s2region_coverer/S2RegionCoverer.Options._minLevel.html', attributes: []},
{name: 's2.s2region_coverer.S2RegionCoverer.options', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.options.html', attributes: ["const"]},
{name: 's2.s2region_coverer.S2RegionCoverer.this', kind: "functiondeclaration", path: './s2/s2region_coverer/S2RegionCoverer.this.html', attributes: []},
{name: 's2.s2shape', kind: "module", path: './s2/s2shape.html', attributes: []},
{name: 's2.s2shape.S2Shape', kind: "classdeclaration", path: './s2/s2shape/S2Shape.html', attributes: []},
{name: 's2.s2shape.S2Shape.chain', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.chain.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.chainEdge', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.chainEdge.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.chainPosition', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.chainPosition.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.dimension', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.dimension.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.edge', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.edge.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.getReferencePoint.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.numChains', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.numChains.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.numEdges', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.numEdges.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.this', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.this.html', attributes: []},
{name: 's2.s2shape_index', kind: "module", path: './s2/s2shape_index.html', attributes: []},
{name: 's2.s2shape_index.S2ClippedShape', kind: "structdeclaration", path: './s2/s2shape_index/S2ClippedShape.html', attributes: []},
{name: 's2.s2shape_index.S2ClippedShape.containsCenter', kind: "functiondeclaration", path: './s2/s2shape_index/S2ClippedShape.containsCenter.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ClippedShape.containsEdge', kind: "functiondeclaration", path: './s2/s2shape_index/S2ClippedShape.containsEdge.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ClippedShape.edge', kind: "functiondeclaration", path: './s2/s2shape_index/S2ClippedShape.edge.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ClippedShape.numEdges', kind: "functiondeclaration", path: './s2/s2shape_index/S2ClippedShape.numEdges.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ClippedShape.shapeId', kind: "functiondeclaration", path: './s2/s2shape_index/S2ClippedShape.shapeId.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ClippedShape.toString', kind: "functiondeclaration", path: './s2/s2shape_index/S2ClippedShape.toString.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndex', kind: "classdeclaration", path: './s2/s2shape_index/S2ShapeIndex.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator', kind: "classdeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.begin', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.begin.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.cell', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.cell.html', attributes: ["inout"]},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.center', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.center.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.copy', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.copy.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.done', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.done.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.finish', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.finish.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.id', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.id.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.initialize', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.initialize.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.locate', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.locate.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.next', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.next.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.prev', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.prev.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.seek', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.seek.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.Iterator.this', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.Iterator.this.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndex.minimize', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.minimize.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndex.numShapeIds', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.numShapeIds.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape_index.S2ShapeIndex.shape', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.shape.html', attributes: ["abstract", "inout"]},
{name: 's2.s2shape_index.S2ShapeIndex.spaceUsed', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.spaceUsed.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape_index.S2ShapeIndex.newIterator', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndex.newIterator.html', attributes: ["abstract"]},
{name: 's2.s2shape_index.S2ShapeIndexCell', kind: "classdeclaration", path: './s2/s2shape_index/S2ShapeIndexCell.html', attributes: []},
{name: 's2.s2shape_index.S2ShapeIndexCell.clipped', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndexCell.clipped.html', attributes: ["ref", "const"]},
{name: 's2.s2shape_index.S2ShapeIndexCell.findClipped', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndexCell.findClipped.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndexCell.numClipped', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndexCell.numClipped.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndexCell.numEdges', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndexCell.numEdges.html', attributes: ["const"]},
{name: 's2.s2shape_index.S2ShapeIndexCell.toString', kind: "functiondeclaration", path: './s2/s2shape_index/S2ShapeIndexCell.toString.html', attributes: ["override", "const"]},
{name: 's2.s2shape_index_region', kind: "module", path: './s2/s2shape_index_region.html', attributes: []},
{name: 's2.s2shape_index_region.makeS2ShapeIndexRegion', kind: "functiondeclaration", path: './s2/s2shape_index_region/makeS2ShapeIndexRegion.html', attributes: []},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion', kind: "classdeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.html', attributes: []},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion._containsQuery', kind: "variabledeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion._containsQuery.html', attributes: []},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion._iter', kind: "variabledeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion._iter.html', attributes: []},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.anyEdgeIntersects', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.anyEdgeIntersects.html', attributes: ["const"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.clone', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.clone.html', attributes: ["override"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.contains', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.contains.html', attributes: ["override"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.coverRange', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.coverRange.html', attributes: ["static"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.getCapBound', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.getCapBound.html', attributes: ["override"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.getRectBound', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.getRectBound.html', attributes: ["override"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.index', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.index.html', attributes: ["inout"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.Iterator', kind: "aliasdeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.Iterator.html', attributes: []},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.mayIntersect', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.mayIntersect.html', attributes: ["override"]},
{name: 's2.s2shape_index_region.S2ShapeIndexRegion.this', kind: "functiondeclaration", path: './s2/s2shape_index_region/S2ShapeIndexRegion.this.html', attributes: []},
{name: 's2.s2text_format', kind: "module", path: './s2/s2text_format.html', attributes: []},
{name: 's2.s2text_format.makeIndex', kind: "functiondeclaration", path: './s2/s2text_format/makeIndex.html', attributes: []},
{name: 's2.s2text_format.makeIndexOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makeIndexOrDie.html', attributes: []},
{name: 's2.s2text_format.makeLatLng', kind: "functiondeclaration", path: './s2/s2text_format/makeLatLng.html', attributes: []},
{name: 's2.s2text_format.makeLatLngOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makeLatLngOrDie.html', attributes: []},
{name: 's2.s2text_format.makeLatLngRect', kind: "functiondeclaration", path: './s2/s2text_format/makeLatLngRect.html', attributes: []},
{name: 's2.s2text_format.makeLatLngRectOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makeLatLngRectOrDie.html', attributes: []},
{name: 's2.s2text_format.makeLaxPolygon', kind: "functiondeclaration", path: './s2/s2text_format/makeLaxPolygon.html', attributes: []},
{name: 's2.s2text_format.makeLaxPolygonOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makeLaxPolygonOrDie.html', attributes: []},
{name: 's2.s2text_format.makeLaxPolyline', kind: "functiondeclaration", path: './s2/s2text_format/makeLaxPolyline.html', attributes: []},
{name: 's2.s2text_format.makeLaxPolylineOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makeLaxPolylineOrDie.html', attributes: []},
{name: 's2.s2text_format.makeLoop', kind: "functiondeclaration", path: './s2/s2text_format/makeLoop.html', attributes: []},
{name: 's2.s2text_format.makeLoopOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makeLoopOrDie.html', attributes: []},
{name: 's2.s2text_format.makePoint', kind: "functiondeclaration", path: './s2/s2text_format/makePoint.html', attributes: []},
{name: 's2.s2text_format.makePointOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makePointOrDie.html', attributes: []},
{name: 's2.s2text_format.makePolygon', kind: "functiondeclaration", path: './s2/s2text_format/makePolygon.html', attributes: []},
{name: 's2.s2text_format.makePolygonOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makePolygonOrDie.html', attributes: []},
{name: 's2.s2text_format.makePolyline', kind: "functiondeclaration", path: './s2/s2text_format/makePolyline.html', attributes: []},
{name: 's2.s2text_format.makePolylineOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makePolylineOrDie.html', attributes: []},
{name: 's2.s2text_format.makeVerbatimPolygon', kind: "functiondeclaration", path: './s2/s2text_format/makeVerbatimPolygon.html', attributes: []},
{name: 's2.s2text_format.makeVerbatimPolygonOrDie', kind: "functiondeclaration", path: './s2/s2text_format/makeVerbatimPolygonOrDie.html', attributes: []},
{name: 's2.s2text_format.parseLatLngs', kind: "functiondeclaration", path: './s2/s2text_format/parseLatLngs.html', attributes: []},
{name: 's2.s2text_format.parseLatLngsOrDie', kind: "functiondeclaration", path: './s2/s2text_format/parseLatLngsOrDie.html', attributes: []},
{name: 's2.s2text_format.parsePoints', kind: "functiondeclaration", path: './s2/s2text_format/parsePoints.html', attributes: []},
{name: 's2.s2text_format.parsePointsOrDie', kind: "functiondeclaration", path: './s2/s2text_format/parsePointsOrDie.html', attributes: []},
{name: 's2.s2text_format.toString', kind: "functiondeclaration", path: './s2/s2text_format/toString.html', attributes: []},
{name: 's2.s2wedge_relations', kind: "module", path: './s2/s2wedge_relations.html', attributes: []},
{name: 's2.s2wedge_relations.getWedgeRelation', kind: "functiondeclaration", path: './s2/s2wedge_relations/getWedgeRelation.html', attributes: []},
{name: 's2.s2wedge_relations.wedgeContains', kind: "functiondeclaration", path: './s2/s2wedge_relations/wedgeContains.html', attributes: []},
{name: 's2.s2wedge_relations.wedgeIntersects', kind: "functiondeclaration", path: './s2/s2wedge_relations/wedgeIntersects.html', attributes: []},
{name: 's2.s2wedge_relations.WedgeRelation', kind: "enumdeclaration", path: './s2/s2wedge_relations/WedgeRelation.html', attributes: []},
{name: 's2.s2wedge_relations.WedgeRelation.WEDGE_EQUALS', kind: "enummemberdeclaration", path: './s2/s2wedge_relations/WedgeRelation.html#WEDGE_EQUALS', attributes: []},
{name: 's2.s2wedge_relations.WedgeRelation.WEDGE_IS_DISJOINT', kind: "enummemberdeclaration", path: './s2/s2wedge_relations/WedgeRelation.html#WEDGE_IS_DISJOINT', attributes: []},
{name: 's2.s2wedge_relations.WedgeRelation.WEDGE_IS_PROPERLY_CONTAINED', kind: "enummemberdeclaration", path: './s2/s2wedge_relations/WedgeRelation.html#WEDGE_IS_PROPERLY_CONTAINED', attributes: []},
{name: 's2.s2wedge_relations.WedgeRelation.WEDGE_PROPERLY_CONTAINS', kind: "enummemberdeclaration", path: './s2/s2wedge_relations/WedgeRelation.html#WEDGE_PROPERLY_CONTAINS', attributes: []},
{name: 's2.s2wedge_relations.WedgeRelation.WEDGE_PROPERLY_OVERLAPS', kind: "enummemberdeclaration", path: './s2/s2wedge_relations/WedgeRelation.html#WEDGE_PROPERLY_OVERLAPS', attributes: []},
{name: 's2.sequence_lexicon', kind: "module", path: './s2/sequence_lexicon.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon', kind: "classdeclaration", path: './s2/sequence_lexicon/SequenceLexicon.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon._begins', kind: "variabledeclaration", path: './s2/sequence_lexicon/SequenceLexicon._begins.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon._idSet', kind: "variabledeclaration", path: './s2/sequence_lexicon/SequenceLexicon._idSet.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon._values', kind: "variabledeclaration", path: './s2/sequence_lexicon/SequenceLexicon._values.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.add', kind: "functiondeclaration", path: './s2/sequence_lexicon/SequenceLexicon.add.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.clear', kind: "functiondeclaration", path: './s2/sequence_lexicon/SequenceLexicon.clear.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.EMPTY_KEY', kind: "enummemberdeclaration", path: './s2/sequence_lexicon/SequenceLexicon.EMPTY_KEY.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.IdHashFunctor', kind: "classdeclaration", path: './s2/sequence_lexicon/SequenceLexicon.IdHashFunctor.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.IdHashFunctor.opCall', kind: "functiondeclaration", path: './s2/sequence_lexicon/SequenceLexicon.IdHashFunctor.opCall.html', attributes: ["const"]},
{name: 's2.sequence_lexicon.SequenceLexicon.IdKeyEqualFunctor', kind: "classdeclaration", path: './s2/sequence_lexicon/SequenceLexicon.IdKeyEqualFunctor.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.IdKeyEqualFunctor.opCall', kind: "functiondeclaration", path: './s2/sequence_lexicon/SequenceLexicon.IdKeyEqualFunctor.opCall.html', attributes: ["const"]},
{name: 's2.sequence_lexicon.SequenceLexicon.IdSet', kind: "aliasdeclaration", path: './s2/sequence_lexicon/SequenceLexicon.IdSet.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.Sequence', kind: "aliasdeclaration", path: './s2/sequence_lexicon/SequenceLexicon.Sequence.html', attributes: []},
{name: 's2.sequence_lexicon.SequenceLexicon.sequence', kind: "functiondeclaration", path: './s2/sequence_lexicon/SequenceLexicon.sequence.html', attributes: ["const"]},
{name: 's2.sequence_lexicon.SequenceLexicon.size', kind: "functiondeclaration", path: './s2/sequence_lexicon/SequenceLexicon.size.html', attributes: ["const"]},
{name: 's2.sequence_lexicon.SequenceLexicon.this', kind: "functiondeclaration", path: './s2/sequence_lexicon/SequenceLexicon.this.html', attributes: []},
{name: 's2.value_lexicon', kind: "module", path: './s2/value_lexicon.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon', kind: "classdeclaration", path: './s2/value_lexicon/ValueLexicon.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon._hasher', kind: "variabledeclaration", path: './s2/value_lexicon/ValueLexicon._hasher.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon._idSet', kind: "variabledeclaration", path: './s2/value_lexicon/ValueLexicon._idSet.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon._keyEqual', kind: "variabledeclaration", path: './s2/value_lexicon/ValueLexicon._keyEqual.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon._values', kind: "variabledeclaration", path: './s2/value_lexicon/ValueLexicon._values.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.add', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.add.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.clear', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.clear.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.EMPTY_KEY', kind: "enummemberdeclaration", path: './s2/value_lexicon/ValueLexicon.EMPTY_KEY.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.Hasher', kind: "aliasdeclaration", path: './s2/value_lexicon/ValueLexicon.Hasher.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.IdHasher', kind: "classdeclaration", path: './s2/value_lexicon/ValueLexicon.IdHasher.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.IdHasher.opCall', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.IdHasher.opCall.html', attributes: ["const"]},
{name: 's2.value_lexicon.ValueLexicon.IdHasher.this', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.IdHasher.this.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.IdKeyEqual', kind: "classdeclaration", path: './s2/value_lexicon/ValueLexicon.IdKeyEqual.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.IdKeyEqual.opCall', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.IdKeyEqual.opCall.html', attributes: ["const"]},
{name: 's2.value_lexicon.ValueLexicon.IdKeyEqual.this', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.IdKeyEqual.this.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.IdSet', kind: "aliasdeclaration", path: './s2/value_lexicon/ValueLexicon.IdSet.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.KeyEqual', kind: "aliasdeclaration", path: './s2/value_lexicon/ValueLexicon.KeyEqual.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.size', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.size.html', attributes: ["const"]},
{name: 's2.value_lexicon.ValueLexicon.this', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.this.html', attributes: []},
{name: 's2.value_lexicon.ValueLexicon.value', kind: "functiondeclaration", path: './s2/value_lexicon/ValueLexicon.value.html', attributes: ["const"]},
];
