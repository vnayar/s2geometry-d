// symbol index generated by DDOX - do not edit
var symbols = [
{name: 's2.base.spinlock', kind: "module", path: './s2/base/spinlock.html', attributes: []},
{name: 's2.base.spinlock.SpinLock', kind: "classdeclaration", path: './s2/base/spinlock/SpinLock.html', attributes: []},
{name: 's2.base.spinlock.SpinLock.lock', kind: "functiondeclaration", path: './s2/base/spinlock/SpinLock.lock.html', attributes: ["nothrow", "nogc", "safe", "shared"]},
{name: 's2.base.spinlock.SpinLock.unlock', kind: "functiondeclaration", path: './s2/base/spinlock/SpinLock.unlock.html', attributes: ["nothrow", "nogc", "safe", "shared"]},
{name: 's2.r1interval', kind: "module", path: './s2/r1interval.html', attributes: []},
{name: 's2.r1interval.R1Interval', kind: "structdeclaration", path: './s2/r1interval/R1Interval.html', attributes: []},
{name: 's2.r1interval.R1Interval.addInterval', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.addInterval.html', attributes: []},
{name: 's2.r1interval.R1Interval.addPoint', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.addPoint.html', attributes: []},
{name: 's2.r1interval.R1Interval.approxEquals', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.approxEquals.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.contains', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.contains.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.empty', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.empty.html', attributes: ["static"]},
{name: 's2.r1interval.R1Interval.expanded', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.expanded.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.fromPoint', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.fromPoint.html', attributes: ["static"]},
{name: 's2.r1interval.R1Interval.fromPointPair', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.fromPointPair.html', attributes: ["static"]},
{name: 's2.r1interval.R1Interval.getCenter', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.getCenter.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.getDirectedHausdorffDistance', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.getDirectedHausdorffDistance.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.getLength', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.getLength.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.interiorContains', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.interiorContains.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.interiorIntersects', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.interiorIntersects.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.intersection', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.intersection.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.intersects', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.intersects.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.isEmpty', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.isEmpty.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.opEquals', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.opEquals.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.opIndex', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.opIndex.html', attributes: ["ref", "inout"]},
{name: 's2.r1interval.R1Interval.project', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.project.html', attributes: ["const"]},
{name: 's2.r1interval.R1Interval.this', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.this.html', attributes: []},
{name: 's2.r1interval.R1Interval.unite', kind: "functiondeclaration", path: './s2/r1interval/R1Interval.unite.html', attributes: ["const"]},
{name: 's2.s1angle', kind: "module", path: './s2/s1angle.html', attributes: []},
{name: 's2.s1angle.S1Angle', kind: "structdeclaration", path: './s2/s1angle/S1Angle.html', attributes: []},
{name: 's2.s1angle.S1Angle.abs', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.abs.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.fromRadians', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.fromRadians.html', attributes: ["static"]},
{name: 's2.s1angle.S1Angle.normalize', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.normalize.html', attributes: []},
{name: 's2.s1angle.S1Angle.normalized', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.normalized.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.opEquals', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opEquals.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.opOpAssign', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opOpAssign.html', attributes: []},
{name: 's2.s1angle.S1Angle.opUnary', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.opUnary.html', attributes: ["const"]},
{name: 's2.s1angle.S1Angle.this', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.this.html', attributes: []},
{name: 's2.s1angle.S1Angle.zero', kind: "functiondeclaration", path: './s2/s1angle/S1Angle.zero.html', attributes: ["static"]},
{name: 's2.s1angle.sin', kind: "functiondeclaration", path: './s2/s1angle/sin.html', attributes: []},
{name: 's2.s2builder', kind: "module", path: './s2/s2builder.html', attributes: []},
{name: 's2.s2builder.GraphOptions', kind: "classdeclaration", path: './s2/s2builder/GraphOptions.html', attributes: []},
{name: 's2.s2builder.GraphOptions.allowVertexFiltering', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.allowVertexFiltering.html', attributes: ["const"]},
{name: 's2.s2builder.GraphOptions.DegenerateEdges', kind: "enumdeclaration", path: './s2/s2builder/GraphOptions.DegenerateEdges.html', attributes: []},
{name: 's2.s2builder.GraphOptions.DuplicateEdges', kind: "enumdeclaration", path: './s2/s2builder/GraphOptions.DuplicateEdges.html', attributes: []},
{name: 's2.s2builder.GraphOptions.edgeType', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.edgeType.html', attributes: ["const"]},
{name: 's2.s2builder.GraphOptions.SiblingPairs', kind: "enumdeclaration", path: './s2/s2builder/GraphOptions.SiblingPairs.html', attributes: []},
{name: 's2.s2builder.GraphOptions.this', kind: "functiondeclaration", path: './s2/s2builder/GraphOptions.this.html', attributes: []},
{name: 's2.s2builder.S2Builder', kind: "classdeclaration", path: './s2/s2builder/S2Builder.html', attributes: []},
{name: 's2.s2builder.S2Builder.addEdge', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addEdge.html', attributes: []},
{name: 's2.s2builder.S2Builder.addIsFullPolygonPredicate', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addIsFullPolygonPredicate.html', attributes: []},
{name: 's2.s2builder.S2Builder.addLoop', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addLoop.html', attributes: []},
{name: 's2.s2builder.S2Builder.addPoint', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addPoint.html', attributes: []},
{name: 's2.s2builder.S2Builder.addPolygon', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addPolygon.html', attributes: []},
{name: 's2.s2builder.S2Builder.addPolyline', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addPolyline.html', attributes: []},
{name: 's2.s2builder.S2Builder.addShape', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.addShape.html', attributes: []},
{name: 's2.s2builder.S2Builder.build', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.build.html', attributes: []},
{name: 's2.s2builder.S2Builder.clearLabels', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.clearLabels.html', attributes: []},
{name: 's2.s2builder.S2Builder.EdgeType', kind: "enumdeclaration", path: './s2/s2builder/S2Builder.EdgeType.html', attributes: []},
{name: 's2.s2builder.S2Builder.forceVertex', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.forceVertex.html', attributes: []},
{name: 's2.s2builder.S2Builder.initialize', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.initialize.html', attributes: []},
{name: 's2.s2builder.S2Builder.InputEdgeId', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.InputEdgeId.html', attributes: []},
{name: 's2.s2builder.S2Builder.InputEdgeIdSetId', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.InputEdgeIdSetId.html', attributes: []},
{name: 's2.s2builder.S2Builder.InputVertexId', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.InputVertexId.html', attributes: []},
{name: 's2.s2builder.S2Builder.IsFullPolygonPredicate', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.IsFullPolygonPredicate.html', attributes: []},
{name: 's2.s2builder.S2Builder.Label', kind: "aliasdeclaration", path: './s2/s2builder/S2Builder.Label.html', attributes: []},
{name: 's2.s2builder.S2Builder.popLabel', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.popLabel.html', attributes: []},
{name: 's2.s2builder.S2Builder.pushLabel', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.pushLabel.html', attributes: []},
{name: 's2.s2builder.S2Builder.reset', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.reset.html', attributes: []},
{name: 's2.s2builder.S2Builder.setLabel', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.setLabel.html', attributes: []},
{name: 's2.s2builder.S2Builder.SnapFunction', kind: "classdeclaration", path: './s2/s2builder/S2Builder.SnapFunction.html', attributes: []},
{name: 's2.s2builder.S2Builder.SnapFunction.kMaxSnapRadius', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.kMaxSnapRadius.html', attributes: ["static"]},
{name: 's2.s2builder.S2Builder.SnapFunction.maxEdgeDeviation', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.maxEdgeDeviation.html', attributes: ["const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.minEdgeVertexSeparation', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.minEdgeVertexSeparation.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.minVertexSeparation', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.minVertexSeparation.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.snapPoint', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.snapPoint.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.SnapFunction.snapRadius', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.SnapFunction.snapRadius.html', attributes: ["abstract", "const"]},
{name: 's2.s2builder.S2Builder.startLayer', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.startLayer.html', attributes: []},
{name: 's2.s2builder.S2Builder.this', kind: "functiondeclaration", path: './s2/s2builder/S2Builder.this.html', attributes: []},
{name: 's2.s2builder.s2builderVerbose', kind: "variabledeclaration", path: './s2/s2builder/s2builderVerbose.html', attributes: []},
{name: 's2.s2builder.VertexIdEdgeVectorShape', kind: "classdeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.html', attributes: []},
{name: 's2.s2builder.VertexIdEdgeVectorShape.this', kind: "functiondeclaration", path: './s2/s2builder/VertexIdEdgeVectorShape.this.html', attributes: []},
{name: 's2.s2shape.S2Shape.Chain', kind: "structdeclaration", path: './s2/s2shape/S2Shape.Chain.html', attributes: []},
{name: 's2.s2shape.S2Shape.chain', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.chain.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.chainEdge', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.chainEdge.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.ChainPosition', kind: "structdeclaration", path: './s2/s2shape/S2Shape.ChainPosition.html', attributes: []},
{name: 's2.s2shape.S2Shape.chainPosition', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.chainPosition.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.dimension', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.dimension.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.Edge', kind: "structdeclaration", path: './s2/s2shape/S2Shape.Edge.html', attributes: []},
{name: 's2.s2shape.S2Shape.edge', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.edge.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.getReferencePoint', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.getReferencePoint.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.hasInterior', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.hasInterior.html', attributes: ["const"]},
{name: 's2.s2shape.S2Shape.id', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.id.html', attributes: ["const"]},
{name: 's2.s2shape.S2Shape.numChains', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.numChains.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.numEdges', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.numEdges.html', attributes: ["abstract", "const"]},
{name: 's2.s2shape.S2Shape.ReferencePoint', kind: "structdeclaration", path: './s2/s2shape/S2Shape.ReferencePoint.html', attributes: []},
{name: 's2.s2shape.S2Shape.userData', kind: "functiondeclaration", path: './s2/s2shape/S2Shape.userData.html', attributes: ["const"]},
{name: 's2.s2cap', kind: "module", path: './s2/s2cap.html', attributes: []},
{name: 's2.s2cap.S2Cap', kind: "classdeclaration", path: './s2/s2cap/S2Cap.html', attributes: []},
{name: 's2.s2cap.S2Cap.addCap', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.addCap.html', attributes: []},
{name: 's2.s2cap.S2Cap.addPoint', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.addPoint.html', attributes: []},
{name: 's2.s2cap.S2Cap.approxEquals', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.approxEquals.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.clone', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.clone.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.complement', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.complement.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.contains', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.contains.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.decode', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.decode.html', attributes: []},
{name: 's2.s2cap.S2Cap.empty', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.empty.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.encode', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.encode.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.expanded', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.expanded.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.fromCenterArea', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.fromCenterArea.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.fromCenterHeight', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.fromCenterHeight.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.fromPoint', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.fromPoint.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.full', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.full.html', attributes: ["static"]},
{name: 's2.s2cap.S2Cap.getArea', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getArea.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getCellUnionBound.html', attributes: ["override"]},
{name: 's2.s2cap.S2Cap.getCentroid', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getCentroid.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.getRadius', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.getRadius.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.height', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.height.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.interiorContains', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.interiorContains.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.interiorIntersects', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.interiorIntersects.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.intersects', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.intersects.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.isEmpty', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.isEmpty.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.isFull', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.isFull.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.isValid', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.isValid.html', attributes: ["const"]},
{name: 's2.s2cap.S2Cap.opEquals', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.opEquals.html', attributes: ["override", "const"]},
{name: 's2.s2cap.S2Cap.this', kind: "functiondeclaration", path: './s2/s2cap/S2Cap.this.html', attributes: []},
{name: 's2.s2region.S2Region.clone', kind: "functiondeclaration", path: './s2/s2region/S2Region.clone.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.contains', kind: "functiondeclaration", path: './s2/s2region/S2Region.contains.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.getCapBound', kind: "functiondeclaration", path: './s2/s2region/S2Region.getCapBound.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.getRectBound', kind: "functiondeclaration", path: './s2/s2region/S2Region.getRectBound.html', attributes: ["abstract"]},
{name: 's2.s2region.S2Region.mayIntersect', kind: "functiondeclaration", path: './s2/s2region/S2Region.mayIntersect.html', attributes: ["abstract"]},
{name: 's2.s2cell', kind: "module", path: './s2/s2cell.html', attributes: []},
{name: 's2.s2cell.S2Cell', kind: "classdeclaration", path: './s2/s2cell/S2Cell.html', attributes: []},
{name: 's2.s2cell.S2Cell.approxArea', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.approxArea.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.averageArea', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.averageArea.html', attributes: ["static"]},
{name: 's2.s2cell.S2Cell.clone', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.clone.html', attributes: ["override", "const"]},
{name: 's2.s2cell.S2Cell.contains', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.contains.html', attributes: ["override", "const"]},
{name: 's2.s2cell.S2Cell.decode', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.decode.html', attributes: []},
{name: 's2.s2cell.S2Cell.encode', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.encode.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.exactArea', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.exactArea.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.fromFace', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.fromFace.html', attributes: ["static"]},
{name: 's2.s2cell.S2Cell.fromFacePosLevel', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.fromFacePosLevel.html', attributes: ["static"]},
{name: 's2.s2cell.S2Cell.getBoundaryDistance', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getBoundaryDistance.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getBoundUV', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getBoundUV.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getCenter', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getCenter.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getDistance', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getDistance.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getEdge', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getEdge.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getMaxDistance', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getMaxDistance.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getSizeIJ', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getSizeIJ.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.getVertex', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.getVertex.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.opEquals', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.opEquals.html', attributes: ["override"]},
{name: 's2.s2cell.S2Cell.subdivide', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.subdivide.html', attributes: ["const"]},
{name: 's2.s2cell.S2Cell.this', kind: "functiondeclaration", path: './s2/s2cell/S2Cell.this.html', attributes: []},
{name: 's2.s2region.S2Region.getCellUnionBound', kind: "functiondeclaration", path: './s2/s2region/S2Region.getCellUnionBound.html', attributes: ["abstract"]},
{name: 's2.s2cell_id', kind: "module", path: './s2/s2cell_id.html', attributes: []},
{name: 's2.s2cell_id.S2CellId', kind: "structdeclaration", path: './s2/s2cell_id/S2CellId.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.advance', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.advance.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.advanceWrap', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.advanceWrap.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.appendAllNeighbors', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.appendAllNeighbors.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.appendVertexNeighbors', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.appendVertexNeighbors.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.begin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.begin.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.child', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.child.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.childBegin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.childBegin.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.childPosition', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.childPosition.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.contains', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.contains.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.decode', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.decode.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.distanceFromBegin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.distanceFromBegin.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.encode', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.encode.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.expandedByDistanceUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.expandedByDistanceUV.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.face', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.face.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.fromDebugString', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromDebugString.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.fromFace', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromFace.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.fromFaceIJ', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromFaceIJ.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.fromFacePosLevel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.fromFacePosLevel.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.getBoundST', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getBoundST.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getBoundUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getBoundUV.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCenterSiTi', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCenterSiTi.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCenterST', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCenterST.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCenterUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCenterUV.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getCommonAncestorLevel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getCommonAncestorLevel.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getEdgeNeighbors', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getEdgeNeighbors.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getSizeIJ', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getSizeIJ.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.getSizeST', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.getSizeST.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.id', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.id.html', attributes: ["property", "const"]},
{name: 's2.s2cell_id.S2CellId.IJLevelToBoundUV', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.IJLevelToBoundUV.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.intersects', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.intersects.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.isFace', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.isFace.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.isLeaf', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.isLeaf.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.isValid', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.isValid.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.level', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.level.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.lsb', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.lsb.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.lsbForLevel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.lsbForLevel.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.maximumTile', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.maximumTile.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.next', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.next.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.nextWrap', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.nextWrap.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.none', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.none.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.opCmp', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.opCmp.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.opEquals', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.opEquals.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.parent', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.parent.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.pos', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.pos.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.rangeMin', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.rangeMin.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.sentinel', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.sentinel.html', attributes: ["static"]},
{name: 's2.s2cell_id.S2CellId.this', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.this.html', attributes: []},
{name: 's2.s2cell_id.S2CellId.toFaceIJOrientation', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toFaceIJOrientation.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toHash', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toHash.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 's2.s2cell_id.S2CellId.toLatLng', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toLatLng.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toS2Point', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toS2Point.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toString', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toString.html', attributes: ["const"]},
{name: 's2.s2cell_id.S2CellId.toToken', kind: "functiondeclaration", path: './s2/s2cell_id/S2CellId.toToken.html', attributes: ["const"]},
{name: 's2.s2loop', kind: "module", path: './s2/s2loop.html', attributes: []},
{name: 's2.s2loop.CompareBoundaryRelation', kind: "classdeclaration", path: './s2/s2loop/CompareBoundaryRelation.html', attributes: []},
{name: 's2.s2loop.LoopRelation.aCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/LoopRelation.aCrossingTarget.html', attributes: ["const"]},
{name: 's2.s2loop.LoopRelation.wedgesCross', kind: "functiondeclaration", path: './s2/s2loop/LoopRelation.wedgesCross.html', attributes: []},
{name: 's2.s2loop.ContainsRelation', kind: "classdeclaration", path: './s2/s2loop/ContainsRelation.html', attributes: []},
{name: 's2.s2loop.IntersectsRelation', kind: "classdeclaration", path: './s2/s2loop/IntersectsRelation.html', attributes: []},
{name: 's2.s2loop.LoopCrosser', kind: "classdeclaration", path: './s2/s2loop/LoopCrosser.html', attributes: []},
{name: 's2.s2loop.LoopCrosser.aCrossingTarget', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.aCrossingTarget.html', attributes: ["const"]},
{name: 's2.s2loop.LoopCrosser.cellCrossesCell', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.cellCrossesCell.html', attributes: []},
{name: 's2.s2loop.LoopCrosser.hasCrossingRelation', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.hasCrossingRelation.html', attributes: []},
{name: 's2.s2loop.LoopCrosser.this', kind: "functiondeclaration", path: './s2/s2loop/LoopCrosser.this.html', attributes: []},
{name: 's2.s2loop.LoopRelation', kind: "classdeclaration", path: './s2/s2loop/LoopRelation.html', attributes: []},
{name: 's2.s2loop.RangeIterator', kind: "classdeclaration", path: './s2/s2loop/RangeIterator.html', attributes: []},
{name: 's2.s2loop.RangeIterator.clipped', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.clipped.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.id', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.id.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.rangeMin', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.rangeMin.html', attributes: ["const"]},
{name: 's2.s2loop.RangeIterator.seekBeyond', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.seekBeyond.html', attributes: []},
{name: 's2.s2loop.RangeIterator.seekTo', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.seekTo.html', attributes: []},
{name: 's2.s2loop.RangeIterator.this', kind: "functiondeclaration", path: './s2/s2loop/RangeIterator.this.html', attributes: []},
{name: 's2.s2loop.S2Loop', kind: "classdeclaration", path: './s2/s2loop/S2Loop.html', attributes: []},
{name: 's2.s2loop.S2Loop.boundaryApproxEquals', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.boundaryApproxEquals.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.boundaryEquals', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.boundaryEquals.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.boundaryNear', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.boundaryNear.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.clone', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.clone.html', attributes: ["override", "const"]},
{name: 's2.s2loop.S2Loop.compareBoundary', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.compareBoundary.html', attributes: []},
{name: 's2.s2loop.S2Loop.contains', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.contains.html', attributes: []},
{name: 's2.s2loop.S2Loop.containsNested', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.containsNested.html', attributes: []},
{name: 's2.s2loop.S2Loop.decode', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.decode.html', attributes: []},
{name: 's2.s2loop.S2Loop.depth', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.depth.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.empty', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.empty.html', attributes: ["static"]},
{name: 's2.s2loop.S2Loop.encode', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.encode.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.equals', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.equals.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.findValidationError', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.findValidationError.html', attributes: []},
{name: 's2.s2loop.S2Loop.findValidationErrorNoIndex', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.findValidationErrorNoIndex.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.full', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.full.html', attributes: ["static"]},
{name: 's2.s2loop.S2Loop.getArea', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getArea.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getCapBound', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getCapBound.html', attributes: ["override", "const"]},
{name: 's2.s2loop.S2Loop.getCentroid', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getCentroid.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getDistance', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getDistance.html', attributes: []},
{name: 's2.s2loop.S2Loop.getDistanceToBoundary', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getDistanceToBoundary.html', attributes: []},
{name: 's2.s2loop.S2Loop.getSurfaceIntegral', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getSurfaceIntegral.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getTurningAngle', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getTurningAngle.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.getTurningAngleMaxError', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.getTurningAngleMaxError.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.initialize', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.initialize.html', attributes: []},
{name: 's2.s2loop.S2Loop.intersects', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.intersects.html', attributes: []},
{name: 's2.s2loop.S2Loop.invert', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.invert.html', attributes: []},
{name: 's2.s2loop.S2Loop.isEmpty', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isEmpty.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isEmptyOrFull', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isEmptyOrFull.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isFull', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isFull.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isHole', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isHole.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isNormalized', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isNormalized.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.isValid', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.isValid.html', attributes: []},
{name: 's2.s2loop.S2Loop.makeRegularLoop', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.makeRegularLoop.html', attributes: ["static"]},
{name: 's2.s2loop.S2Loop.normalize', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.normalize.html', attributes: []},
{name: 's2.s2loop.S2Loop.orientedVertex', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.orientedVertex.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.project', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.project.html', attributes: []},
{name: 's2.s2loop.S2Loop.projectToBoundary', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.projectToBoundary.html', attributes: []},
{name: 's2.s2loop.S2Loop.s2DebugOverride', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.s2DebugOverride.html', attributes: ["property"]},
{name: 's2.s2loop.S2Loop.Shape', kind: "classdeclaration", path: './s2/s2loop/S2Loop.Shape.html', attributes: []},
{name: 's2.s2loop.S2Loop.Shape.this', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.Shape.this.html', attributes: []},
{name: 's2.s2loop.S2Loop.sign', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.sign.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.spaceUsed', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.spaceUsed.html', attributes: ["const"]},
{name: 's2.s2loop.S2Loop.this', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.this.html', attributes: []},
{name: 's2.s2loop.S2Loop.vertex', kind: "functiondeclaration", path: './s2/s2loop/S2Loop.vertex.html', attributes: ["const"]},
{name: 's2.s2polygon', kind: "module", path: './s2/s2polygon.html', attributes: []},
{name: 's2.s2polygon.S2Polygon', kind: "classdeclaration", path: './s2/s2polygon/S2Polygon.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxContains', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxContains.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxDisjoint', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxDisjoint.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxEquals.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxIntersectWithPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxIntersectWithPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.approxSubtractFromPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.approxSubtractFromPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.boundaryApproxEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.boundaryApproxEquals.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.boundaryEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.boundaryEquals.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.boundaryNear', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.boundaryNear.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.clone', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.clone.html', attributes: ["override", "const"]},
{name: 's2.s2polygon.S2Polygon.contains', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.contains.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.decode', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.decode.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.destructiveUnion', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.destructiveUnion.html', attributes: ["static"]},
{name: 's2.s2polygon.S2Polygon.encode', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.encode.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.findValidationError', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.findValidationError.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.getArea', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getArea.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getCapBound', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getCapBound.html', attributes: ["override", "const"]},
{name: 's2.s2polygon.S2Polygon.getCentroid', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getCentroid.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getDistance', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getDistance.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.getDistanceToBoundary', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getDistanceToBoundary.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.getLastDescendant', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getLastDescendant.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getOverlapFractions', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getOverlapFractions.html', attributes: ["static"]},
{name: 's2.s2polygon.S2Polygon.getParent', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getParent.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.getSnapLevel', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.getSnapLevel.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.index', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.index.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initialize', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initialize.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeNested', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeNested.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeOriented', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeOriented.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToCellUnionBorder', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToCellUnionBorder.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToComplement', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToComplement.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToIntersection', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToIntersection.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToSimplified', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToSimplified.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToSimplifiedInCell', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToSimplifiedInCell.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.initializeToSnapped', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.initializeToSnapped.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.intersects', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.intersects.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.intersectWithPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.intersectWithPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.invert', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.invert.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.isEmpty', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isEmpty.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.isFull', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isFull.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.isNormalized', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isNormalized.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.isValid', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.isValid.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.numLoops', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.numLoops.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.numVertices', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.numVertices.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.opEquals', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.opEquals.html', attributes: ["override", "const"]},
{name: 's2.s2polygon.S2Polygon.project', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.project.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.projectToBoundary', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.projectToBoundary.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.release', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.release.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.setS2debugOverride', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.setS2debugOverride.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.Shape', kind: "classdeclaration", path: './s2/s2polygon/S2Polygon.Shape.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.Shape.numEdges', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.numEdges.html', attributes: ["final", "override", "const"]},
{name: 's2.s2polygon.S2Polygon.Shape.this', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.Shape.this.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.spaceUsed', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.spaceUsed.html', attributes: ["const"]},
{name: 's2.s2polygon.S2Polygon.subtractFromPolyline', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.subtractFromPolyline.html', attributes: []},
{name: 's2.s2polygon.S2Polygon.this', kind: "functiondeclaration", path: './s2/s2polygon/S2Polygon.this.html', attributes: []},
{name: 's2.s2polygon.S2POLYGON_LAZY_INDEXING', kind: "enummemberdeclaration", path: './s2/s2polygon/S2POLYGON_LAZY_INDEXING.html', attributes: []},
{name: 's2.s2region', kind: "module", path: './s2/s2region.html', attributes: []},
{name: 's2.s2region.S2Region', kind: "interfacedeclaration", path: './s2/s2region/S2Region.html', attributes: []},
{name: 's2.s2shape', kind: "module", path: './s2/s2shape.html', attributes: []},
{name: 's2.s2shape.S2Shape', kind: "classdeclaration", path: './s2/s2shape/S2Shape.html', attributes: []},
];
